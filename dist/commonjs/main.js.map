{"version":3,"file":"main.js","sources":["../../node_modules/@jsenv/operating-system-path/src/starts-with-windows-drive-letter.js","../../node_modules/@jsenv/operating-system-path/src/replace-slashes-with-backslashes.js","../../node_modules/@jsenv/operating-system-path/src/pathname-to-operating-system-path.js","../../node_modules/@jsenv/operating-system-path/src/is-windows-path.js","../../node_modules/@jsenv/operating-system-path/src/replace-back-slashes-with-slashes.js","../../node_modules/@jsenv/operating-system-path/src/operating-system-path-to-pathname.js","../../node_modules/@jsenv/operating-system-path/src/pathname-to-relative-pathname.js","../../node_modules/@jsenv/import-map/src/assertImportMap.js","../../node_modules/@jsenv/import-map/src/composeTwoImportMaps/composeTwoImportMaps.js","../../node_modules/@jsenv/import-map/src/sortImportMap/sortImportMap.js","../../src/generateImportMapForPackage/pathnameToDirname.js","../../node_modules/@dmail/helper/src/firstOperationMatching.js","../../node_modules/@dmail/helper/src/promiseSequence.js","../../node_modules/@dmail/helper/src/fileMakeDirname.js","../../node_modules/@dmail/helper/src/fileCopy.js","../../node_modules/@dmail/helper/src/fileRead.js","../../node_modules/@dmail/helper/src/fileStat.js","../../node_modules/@dmail/helper/src/fileLStat.js","../../node_modules/@dmail/helper/src/fileWrite.js","../../node_modules/@dmail/helper/src/folderRead.js","../../src/generateImportMapForPackage/readPackageData.js","../../src/generateImportMapForPackage/resolveNodeModule.js","../../src/generateImportMapForPackage/hasScheme.js","../../src/generateImportMapForPackage/resolvePackageMain.js","../../src/generateImportMapForPackage/visitPackageImports.js","../../src/generateImportMapForPackage/visitPackageExports.js","../../src/generateImportMapForPackage/generateImportMapForPackage.js","../../node_modules/@jsenv/logger/src/createLogger/LOG_LEVELS.js","../../node_modules/@jsenv/logger/src/createLogger/createLogger.js","../../node_modules/@dmail/cancellation/src/cancellation.js","../../node_modules/@dmail/cancellation/src/extra.js","../../src/generateImportMapForProjectPackage/importMapToVsCodeConfigPaths.js","../../src/generateImportMapForProjectPackage/generateImportMapForProjectPackage.js"],"sourcesContent":["export const startsWithWindowsDriveLetter = (string) => {\n  const firstChar = string[0]\n  if (!/[a-zA-Z]/.test(firstChar)) return false\n\n  const secondChar = string[1]\n  if (secondChar !== \":\") return false\n\n  return true\n}\n","export const replaceSlashesWithBackSlashes = (string) => string.replace(/\\//g, \"\\\\\")\n","import { startsWithWindowsDriveLetter } from \"./starts-with-windows-drive-letter.js\"\nimport { replaceSlashesWithBackSlashes } from \"./replace-slashes-with-backslashes.js\"\n\nexport const pathnameToOperatingSystemPath = (pathname) => {\n  if (pathname[0] !== \"/\") throw new Error(`pathname must start with /, got ${pathname}`)\n\n  const pathnameWithoutLeadingSlash = pathname.slice(1)\n  if (\n    startsWithWindowsDriveLetter(pathnameWithoutLeadingSlash) &&\n    pathnameWithoutLeadingSlash[2] === \"/\"\n  ) {\n    return replaceSlashesWithBackSlashes(pathnameWithoutLeadingSlash)\n  }\n\n  // linux mac pathname === operatingSystemFilename\n  return pathname\n}\n","import { startsWithWindowsDriveLetter } from \"./starts-with-windows-drive-letter.js\"\n\nexport const isWindowsPath = (path) => startsWithWindowsDriveLetter(path) && path[2] === \"\\\\\"\n","export const replaceBackSlashesWithSlashes = (string) => string.replace(/\\\\/g, \"/\")\n","import { isWindowsPath } from \"./is-windows-path.js\"\nimport { replaceBackSlashesWithSlashes } from \"./replace-back-slashes-with-slashes.js\"\n\nexport const operatingSystemPathToPathname = (operatingSystemPath) => {\n  if (isWindowsPath(operatingSystemPath)) {\n    return `/${replaceBackSlashesWithSlashes(operatingSystemPath)}`\n  }\n\n  // linux and mac operatingSystemFilename === pathname\n  return operatingSystemPath\n}\n","export const pathnameToRelativePathname = (pathname, otherPathname) =>\n  pathname.slice(otherPathname.length)\n","export const assertImportMap = (value) => {\n  if (value === null) {\n    throw new TypeError(`an importMap must be an object, got null`)\n  }\n\n  const type = typeof value\n  if (type !== \"object\") {\n    throw new TypeError(`an importMap must be an object, received ${value}`)\n  }\n\n  if (Array.isArray(value)) {\n    throw new TypeError(`an importMap must be an object, received array ${value}`)\n  }\n}\n","// https://github.com/systemjs/systemjs/blob/89391f92dfeac33919b0223bbf834a1f4eea5750/src/common.js#L136\nimport { assertImportMap } from \"../assertImportMap.js\"\n\nexport const composeTwoImportMaps = (leftImportMap, rightImportMap) => {\n  assertImportMap(leftImportMap)\n  assertImportMap(rightImportMap)\n\n  return {\n    imports: composeTwoImports(leftImportMap.imports, rightImportMap.imports),\n    scopes: composeTwoScopes(leftImportMap.scopes, rightImportMap.scopes),\n  }\n}\n\nconst composeTwoImports = (leftImports = {}, rightImports = {}) => {\n  return { ...leftImports, ...rightImports }\n}\n\nconst composeTwoScopes = (leftScopes = {}, rightScopes = {}) => {\n  const scopes = { ...leftScopes }\n  Object.keys(rightScopes).forEach((scopeKey) => {\n    if (scopes.hasOwnProperty(scopeKey)) {\n      scopes[scopeKey] = { ...scopes[scopeKey], ...rightScopes[scopeKey] }\n    } else {\n      scopes[scopeKey] = { ...rightScopes[scopeKey] }\n    }\n  })\n  return scopes\n}\n","import { assertImportMap } from \"../assertImportMap.js\"\n\nexport const sortImportMap = (importMap) => {\n  assertImportMap(importMap)\n\n  const { imports, scopes } = importMap\n  return {\n    imports: imports ? sortImports(imports) : undefined,\n    scopes: scopes ? sortScopes(scopes) : undefined,\n  }\n}\n\nexport const sortImports = (imports) => {\n  const importsSorted = {}\n  Object.keys(imports)\n    .sort(compareLengthOrLocaleCompare)\n    .forEach((name) => {\n      importsSorted[name] = imports[name]\n    })\n  return importsSorted\n}\n\nexport const sortScopes = (scopes) => {\n  const scopesSorted = {}\n  Object.keys(scopes)\n    .sort(compareLengthOrLocaleCompare)\n    .forEach((scopeName) => {\n      scopesSorted[scopeName] = sortImports(scopes[scopeName])\n    })\n  return scopesSorted\n}\n\nconst compareLengthOrLocaleCompare = (a, b) => {\n  return b.length - a.length || a.localeCompare(b)\n}\n","export const pathnameToDirname = (pathname) => {\n  const slashLastIndex = pathname.lastIndexOf(\"/\")\n  if (slashLastIndex === -1) return \"\"\n\n  return pathname.slice(0, slashLastIndex)\n}\n","// certainly needs to be moved to @dmail/cancellation\n\nexport const firstOperationMatching = ({ array, start, predicate }) => {\n  if (typeof array !== \"object\") throw new TypeError(createArrayErrorMessage({ array }))\n  if (typeof start !== \"function\") throw new TypeError(createStartErrorMessage({ start }))\n  if (typeof predicate !== \"function\")\n    throw new TypeError(createPredicateErrorMessage({ predicate }))\n\n  return new Promise((resolve, reject) => {\n    const visit = (index) => {\n      if (index >= array.length) {\n        return resolve()\n      }\n      const input = array[index]\n      const returnValue = start(input)\n      return Promise.resolve(returnValue).then((output) => {\n        if (predicate(output)) {\n          return resolve(output)\n        }\n        return visit(index + 1)\n      }, reject)\n    }\n\n    visit(0)\n  })\n}\n\nconst createArrayErrorMessage = ({ array }) => `array must be an object.\narray: ${array}`\n\nconst createStartErrorMessage = ({ start }) => `start must be a function.\nstart: ${start}`\n\nconst createPredicateErrorMessage = ({ predicate }) => `predicate must be a function.\npredicate: ${predicate}`\n","export const promiseSequence = async (callbackArray) => {\n  const values = []\n  const visit = async (index) => {\n    if (index === callbackArray.length) return\n    const callback = callbackArray[index]\n    const value = await callback()\n    values.push(value)\n    await visit(index + 1)\n  }\n  await visit(0)\n  return values\n}\n","import { mkdir, lstat } from \"fs\"\nimport { promiseSequence } from \"./promiseSequence.js\"\n\n// nodejs 10.12.0 https://nodejs.org/api/fs.html#fs_fs_mkdir_path_options_callback\n// export const ensureFolderLeadingTo = (file) => {\n//   return new Promise((resolve, reject) => {\n//     fs.mkdir(path.dirname(file), { resurcive: true }, (error) => {\n//       if (error) {\n//         if (error.code === \"EEXIST\") {\n//           resolve()\n//           return\n//         }\n//         reject(error)\n//         return\n//       }\n//       resolve()\n//     })\n//   })\n// }\n\nexport const fileMakeDirname = (file) => {\n  const fileNormalized = normalizeSeparation(file)\n  // remove first / in case path starts with / (linux)\n  // because it would create a \"\" entry in folders array below\n  // tryig to create a folder at \"\"\n  const fileStartsWithSlash = fileNormalized[0] === \"/\"\n  const pathname = fileStartsWithSlash ? fileNormalized.slice(1) : fileNormalized\n  const folders = pathname.split(\"/\")\n  folders.pop()\n\n  return promiseSequence(\n    folders.map((_, index) => {\n      return () => {\n        const folder = folders.slice(0, index + 1).join(\"/\")\n        return folderMake(`${fileStartsWithSlash ? \"/\" : \"\"}${folder}`)\n      }\n    }),\n  )\n}\n\nconst normalizeSeparation = (file) => file.replace(/\\\\/g, \"/\")\n\nconst folderMake = (folder) =>\n  new Promise((resolve, reject) => {\n    mkdir(folder, async (error) => {\n      if (error) {\n        // au cas ou deux script essayent de cr√©e un dossier peu importe qui y arrive c'est ok\n        if (error.code === \"EEXIST\") {\n          const stat = await fileLastStat(folder)\n          if (stat.isDirectory()) {\n            resolve()\n          } else {\n            reject({ status: 500, reason: \"expect a directory\" })\n          }\n        } else {\n          reject({ status: 500, reason: error.code })\n        }\n      } else {\n        resolve()\n      }\n    })\n  })\n\nconst fileLastStat = (path) =>\n  new Promise((resolve, reject) => {\n    lstat(path, (error, lstat) => {\n      if (error) {\n        reject({ status: 500, reason: error.code })\n      } else {\n        resolve(lstat)\n      }\n    })\n  })\n","import { promisify } from \"util\"\nimport { copyFile } from \"fs\"\nimport { fileMakeDirname } from \"./fileMakeDirname.js\"\n\nconst copyFilePromisified = promisify(copyFile)\n\nexport const fileCopy = async (source, destination) => {\n  await fileMakeDirname(destination)\n  return copyFilePromisified(source, destination)\n}\n","import { promisify } from \"util\"\nimport { readFile } from \"fs\"\n\nconst readFilePromisified = promisify(readFile)\n\nexport const fileRead = async (file) => {\n  const buffer = await readFilePromisified(file)\n  return buffer.toString()\n}\n","import { promisify } from \"util\"\nimport { stat } from \"fs\"\n\nconst statPromisified = promisify(stat)\n\nexport const fileStat = async (file) => {\n  const stat = await statPromisified(file)\n  return stat\n}\n","import { promisify } from \"util\"\nimport { lstat } from \"fs\"\n\nconst lstatPromisified = promisify(lstat)\n\nexport const fileLStat = async (file) => {\n  const lstat = await lstatPromisified(file)\n  return lstat\n}\n","import { promisify } from \"util\"\nimport { writeFile } from \"fs\"\nimport { fileMakeDirname } from \"./fileMakeDirname.js\"\n\nconst writeFilePromisified = promisify(writeFile)\n\nexport const fileWrite = async (file, content) => {\n  await fileMakeDirname(file)\n  return writeFilePromisified(file, content)\n}\n","import { promisify } from \"util\"\nimport { readdir } from \"fs\"\n\nconst readdirPromisified = promisify(readdir)\n\nexport const folderRead = async (folder) => {\n  const ressources = await readdirPromisified(folder)\n  return ressources\n}\n","import { fileRead } from \"@dmail/helper\"\n\nexport const readPackageData = async ({ path }) => {\n  const packageString = await fileRead(path)\n  const packageData = JSON.parse(packageString)\n  return packageData\n}\n","import {\n  pathnameToOperatingSystemPath,\n  pathnameToRelativePathname,\n} from \"@jsenv/operating-system-path\"\nimport { firstOperationMatching } from \"@dmail/helper\"\nimport { pathnameToDirname } from \"./pathnameToDirname.js\"\nimport { readPackageData } from \"./readPackageData.js\"\n\nexport const resolveNodeModule = async ({\n  rootPathname,\n  packagePathname,\n  packageData,\n  dependencyName,\n  dependencyVersionPattern,\n  dependencyType,\n  logger,\n}) => {\n  const packageFolderPathname = pathnameToDirname(packagePathname)\n  const packageFolderRelativePath = pathnameToRelativePathname(packageFolderPathname, rootPathname)\n\n  const nodeModuleCandidateArray = [\n    ...getCandidateArrayFromPackageFolder(packageFolderRelativePath),\n    `node_modules`,\n  ]\n\n  const result = await firstOperationMatching({\n    array: nodeModuleCandidateArray,\n    start: async (nodeModuleCandidate) => {\n      const packagePathname = `${rootPathname}/${nodeModuleCandidate}/${dependencyName}/package.json`\n      try {\n        const packageData = await readPackageData({\n          path: pathnameToOperatingSystemPath(packagePathname),\n        })\n        return { packagePathname, packageData }\n      } catch (e) {\n        if (e.code === \"ENOENT\") {\n          return {}\n        }\n\n        if (e.name === \"SyntaxError\") {\n          logger.error(\n            writeDependencyPackageParsingError({\n              parsingError: e,\n              packagePathname,\n            }),\n          )\n          return {}\n        }\n\n        throw e\n      }\n    },\n    predicate: ({ packageData }) => Boolean(packageData),\n  })\n\n  if (!result) {\n    logger.warn(\n      writeDendencyNotFound({\n        dependencyName,\n        dependencyType,\n        dependencyVersionPattern,\n        packagePathname,\n        packageData,\n      }),\n    )\n  }\n\n  return result\n}\n\nconst getCandidateArrayFromPackageFolder = (packageFolderRelativePath) => {\n  if (packageFolderRelativePath === \"\") return []\n\n  const candidateArray = []\n  const relativeFolderNameArray = packageFolderRelativePath.split(\"/node_modules/\")\n  // remove the first empty string\n  relativeFolderNameArray.shift()\n\n  let i = relativeFolderNameArray.length\n  while (i--) {\n    candidateArray.push(\n      `node_modules/${relativeFolderNameArray.slice(0, i + 1).join(\"/node_modules/\")}/node_modules`,\n    )\n  }\n\n  return candidateArray\n}\n\nconst writeDependencyPackageParsingError = ({ parsingError, packagePathname }) => `\nerror while parsing dependency package.json.\n--- parsing error message ---\n${parsingError.message}\n--- package.json path ---\n${pathnameToOperatingSystemPath(packagePathname)}\n`\n\nconst writeDendencyNotFound = ({\n  dependencyName,\n  dependencyType,\n  dependencyVersionPattern,\n  packageData,\n  packagePathname,\n}) => `\ncannot find a ${dependencyType}.\n--- ${dependencyType} ---\n${dependencyName}@${dependencyVersionPattern}\n--- required by ---\n${packageData.name}@${packageData.version}\n--- package.json path ---\n${pathnameToOperatingSystemPath(packagePathname)}\n`\n","export const hasScheme = (string) => {\n  return /^[a-zA-Z]{2,}:/.test(string)\n}\n","import { extname, basename } from \"path\"\nimport { stat } from \"fs\"\nimport { firstOperationMatching } from \"@dmail/helper\"\nimport {\n  pathnameToOperatingSystemPath,\n  pathnameToRelativePathname,\n} from \"@jsenv/operating-system-path\"\nimport { pathnameToDirname } from \"./pathnameToDirname.js\"\nimport { hasScheme } from \"./hasScheme.js\"\n\nexport const resolvePackageMain = ({ packageData, packagePathname, logger }) => {\n  if (\"module\" in packageData) {\n    return resolveMainFile({\n      packagePathname,\n      logger,\n      packageMainFieldName: \"module\",\n      packageMainFieldValue: packageData.module,\n    })\n  }\n\n  if (\"jsnext:main\" in packageData) {\n    return resolveMainFile({\n      packagePathname,\n      logger,\n      packageMainFieldName: \"jsnext:main\",\n      packageMainFieldValue: packageData[\"jsnext:main\"],\n    })\n  }\n\n  if (\"main\" in packageData) {\n    return resolveMainFile({\n      packagePathname,\n      logger,\n      packageMainFieldName: \"main\",\n      packageMainFieldValue: packageData.main,\n    })\n  }\n\n  return resolveMainFile({\n    packagePathname,\n    logger,\n    packageMainFieldName: \"default\",\n    packageMainFieldValue: \"index\",\n  })\n}\n\nconst extensionCandidateArray = [\"js\", \"json\", \"node\"]\n\nconst resolveMainFile = async ({\n  packagePathname,\n  logger,\n  packageMainFieldName,\n  packageMainFieldValue,\n}) => {\n  // main is explicitely empty meaning\n  // it is assumed that we should not find a file\n  if (packageMainFieldValue === \"\") {\n    return null\n  }\n\n  if (\n    hasScheme(packageMainFieldValue) ||\n    packageMainFieldValue.startsWith(\"//\") ||\n    packageMainFieldValue.startsWith(\"../\")\n  ) {\n    logger.warn(\n      writePackageMainFieldMustBeInside({\n        packagePathname,\n        packageMainFieldName,\n        packageMainFieldValue,\n      }),\n    )\n    return null\n  }\n\n  let mainRelativePath\n  if (packageMainFieldValue.slice(0, 2) === \"./\") {\n    mainRelativePath = packageMainFieldValue.slice(1)\n  } else if (packageMainFieldValue[0] === \"/\") {\n    mainRelativePath = packageMainFieldValue\n  } else {\n    mainRelativePath = `/${packageMainFieldValue}`\n  }\n\n  if (packageMainFieldValue.endsWith(\"/\")) {\n    mainRelativePath += `index`\n  }\n\n  const packageDirname = pathnameToDirname(packagePathname)\n  const mainFilePathnameFirstCandidate = `${packageDirname}${mainRelativePath}`\n  const mainFilePathname = await findMainFilePathnameOrNull(mainFilePathnameFirstCandidate)\n\n  if (mainFilePathname === null) {\n    // we know in advance this remapping does not lead to an actual file.\n    // we only warn because we have no guarantee this remapping will actually be used\n    // in the codebase.\n\n    // warn only if there is actually a main field\n    // otherwise the package.json is missing the main field\n    // it certainly means it's not important\n    if (packageMainFieldName !== \"default\") {\n      logger.warn(\n        writePackageMainFileNotFound({\n          packagePathname,\n          packageMainFieldName,\n          packageMainFieldValue,\n          mainFilePath: pathnameToOperatingSystemPath(mainFilePathnameFirstCandidate),\n        }),\n      )\n    }\n    return `${mainRelativePath}.js`\n  }\n\n  return pathnameToRelativePathname(mainFilePathname, packageDirname)\n}\n\nconst findMainFilePathnameOrNull = async (mainFilePathname) => {\n  const mainFilePath = pathnameToOperatingSystemPath(mainFilePathname)\n  const stats = await pathToStats(mainFilePath)\n\n  if (stats === null) {\n    const extension = extname(mainFilePathname)\n\n    if (extension === \"\") {\n      const extensionLeadingToAFile = await findExtension(mainFilePathname)\n      if (extensionLeadingToAFile === null) {\n        return null\n      }\n      return `${mainFilePathname}.${extensionLeadingToAFile}`\n    }\n    return null\n  }\n\n  if (stats.isFile()) {\n    return mainFilePathname\n  }\n\n  if (stats.isDirectory()) {\n    mainFilePathname += mainFilePathname.endsWith(\"/\") ? `index` : `/index`\n    const extensionLeadingToAFile = await findExtension(mainFilePathname)\n    if (extensionLeadingToAFile === null) {\n      return null\n    }\n    return `${mainFilePathname}.${extensionLeadingToAFile}`\n  }\n\n  return null\n}\n\nconst findExtension = async (pathname) => {\n  const dirname = pathnameToDirname(pathname)\n  const filename = basename(pathname)\n  const extensionLeadingToFile = await firstOperationMatching({\n    array: extensionCandidateArray,\n    start: async (extensionCandidate) => {\n      const pathCandidate = pathnameToOperatingSystemPath(\n        `${dirname}/${filename}.${extensionCandidate}`,\n      )\n      const stats = await pathToStats(pathCandidate)\n      return stats && stats.isFile() ? extensionCandidate : null\n    },\n    predicate: (extension) => Boolean(extension),\n  })\n  return extensionLeadingToFile || null\n}\n\nconst pathToStats = (path) => {\n  return new Promise((resolve, reject) => {\n    stat(path, (error, statObject) => {\n      if (error) {\n        if (error.code === \"ENOENT\") resolve(null)\n        else reject(error)\n      } else {\n        resolve(statObject)\n      }\n    })\n  })\n}\n\nconst writePackageMainFieldMustBeInside = ({\n  packagePathname,\n  packageMainFieldName,\n  packageMainFieldValue,\n}) => `\n${packageMainFieldName} field in package.json must be inside package.json folder.\n--- ${packageMainFieldName} ---\n${packageMainFieldValue}\n--- package.json path ---\n${pathnameToOperatingSystemPath(packagePathname)}\n`\n\nconst writePackageMainFileNotFound = ({\n  packagePathname,\n  packageMainFieldName,\n  packageMainFieldValue,\n  mainFilePath,\n}) => `\ncannot find file for package.json ${packageMainFieldName} field\n--- ${packageMainFieldName} ---\n${packageMainFieldValue}\n--- file path ---\n${mainFilePath}\n--- package.json path ---\n${pathnameToOperatingSystemPath(packagePathname)}\n--- extensions tried ---\n${extensionCandidateArray.join(`,`)}\n`\n","import { pathnameToOperatingSystemPath } from \"@jsenv/operating-system-path\"\nimport { hasScheme } from \"./hasScheme.js\"\n\nexport const visitPackageImports = ({ logger, packagePathname, packageData }) => {\n  const importsForPackageImports = {}\n\n  const { imports: packageImports } = packageData\n  if (typeof packageImports !== \"object\" || packageImports === null) {\n    logger.warn(\n      writeImportsMustBeObject({\n        packagePathname,\n        packageImports,\n      }),\n    )\n    return importsForPackageImports\n  }\n\n  Object.keys(packageImports).forEach((specifier) => {\n    if (hasScheme(specifier) || specifier.startsWith(\"//\") || specifier.startsWith(\"../\")) {\n      logger.warn(\n        writeSpecifierMustBeRelative({\n          packagePathname,\n          specifier,\n        }),\n      )\n      return\n    }\n\n    const address = packageImports[specifier]\n    if (typeof address !== \"string\") {\n      logger.warn(\n        writeAddressMustBeString({\n          packagePathname,\n          specifier,\n          address,\n        }),\n      )\n      return\n    }\n    if (hasScheme(address) || address.startsWith(\"//\") || address.startsWith(\"../\")) {\n      logger.warn(\n        writeAddressMustBeRelative({\n          packagePathname,\n          specifier,\n          address,\n        }),\n      )\n      return\n    }\n\n    let from\n    if (specifier[0] === \"/\") {\n      from = specifier\n    } else if (specifier.startsWith(\"./\")) {\n      from = specifier\n    } else {\n      from = specifier\n    }\n\n    const to = address\n\n    importsForPackageImports[from] = to\n  })\n\n  return importsForPackageImports\n}\n\nconst writeImportsMustBeObject = ({ packagePathname, packageImports }) => `\nimports of package.json must be an object.\n--- package.json imports ---\n${packageImports}\n--- package.json path ---\n${pathnameToOperatingSystemPath(packagePathname)}\n`\n\nconst writeAddressMustBeString = ({ packagePathname, specifier, address }) => `\nfound unexpected address in imports of package.json, it must be a string.\n--- address ---\n${address}\n--- specifier ---\n${specifier}\n--- package.json path ---\n${pathnameToOperatingSystemPath(packagePathname)}\n`\n\nconst writeSpecifierMustBeRelative = ({ packagePathname, specifier }) => `\nfound unexpected specifier in imports of package.json, it must be relative to package.json.\n--- specifier ---\n${specifier}\n--- package.json path ---\n${pathnameToOperatingSystemPath(packagePathname)}\n`\n\nconst writeAddressMustBeRelative = ({ packagePathname, specifier, address }) => `\nfound unexpected address in imports of package.json, it must be relative to package.json.\n--- address ---\n${address}\n--- specifier ---\n${specifier}\n--- package.json path ---\n${pathnameToOperatingSystemPath(packagePathname)}\n`\n","import { pathnameToOperatingSystemPath } from \"@jsenv/operating-system-path\"\nimport { hasScheme } from \"./hasScheme.js\"\n\nexport const visitPackageExports = ({\n  logger,\n  packagePathname,\n  packageName,\n  packageData,\n  packagePathInfo: { packageIsRoot, actualRelativePath },\n}) => {\n  const importsForPackageExports = {}\n\n  if (packageIsRoot) {\n    return importsForPackageExports\n  }\n\n  const { exports: packageExports } = packageData\n  if (typeof packageExports !== \"object\" || packageExports === null) {\n    logger.warn(\n      writeExportsMustBeAnObject({\n        packageExports,\n        packagePathname,\n      }),\n    )\n    return importsForPackageExports\n  }\n\n  Object.keys(packageExports).forEach((specifier) => {\n    if (hasScheme(specifier) || specifier.startsWith(\"//\") || specifier.startsWith(\"../\")) {\n      logger.warn(\n        writeSpecifierMustBeRelative({\n          packagePathname,\n          specifier,\n        }),\n      )\n      return\n    }\n\n    const address = packageExports[specifier]\n    if (typeof address !== \"string\") {\n      logger.warn(\n        writeAddressMustBeString({\n          packagePathname,\n          specifier,\n          address,\n        }),\n      )\n      return\n    }\n    if (hasScheme(address) || address.startsWith(\"//\") || address.startsWith(\"../\")) {\n      logger.warn(\n        writeAddressMustBeRelative({\n          packagePathname,\n          specifier,\n          address,\n        }),\n      )\n      return\n    }\n\n    let from\n    if (specifier[0] === \"/\") {\n      from = specifier\n    } else if (specifier.startsWith(\"./\")) {\n      from = `${packageName}${specifier.slice(1)}`\n    } else {\n      from = `${packageName}/${specifier}`\n    }\n\n    let to\n    if (address[0] === \"/\") {\n      to = address\n    } else if (address.startsWith(\"./\")) {\n      to = `.${actualRelativePath}${address.slice(1)}`\n    } else {\n      to = `.${actualRelativePath}/${address}`\n    }\n\n    importsForPackageExports[from] = to\n  })\n\n  return importsForPackageExports\n}\n\nconst writeExportsMustBeAnObject = ({ packagePathname, packageExports }) => `\nexports of package.json must be an object.\n--- package.json exports ---\n${packageExports}\n--- package.json path ---\n${pathnameToOperatingSystemPath(packagePathname)}\n`\n\nconst writeSpecifierMustBeRelative = ({ packagePathname, specifier }) => `\nfound unexpected specifier in exports of package.json, it must be relative to package.json.\n--- specifier ---\n${specifier}\n--- package.json path ---\n${pathnameToOperatingSystemPath(packagePathname)}\n`\n\nconst writeAddressMustBeString = ({ packagePathname, specifier, address }) => `\nfound unexpected address in exports of package.json, it must be a string.\n--- address ---\n${address}\n--- specifier ---\n${specifier}\n--- package.json path ---\n${pathnameToOperatingSystemPath(packagePathname)}\n`\n\nconst writeAddressMustBeRelative = ({ packagePathname, specifier, address }) => `\nfound unexpected address in exports of package.json, it must be relative to package.json.\n--- address ---\n${address}\n--- specifier ---\n${specifier}\n--- package.json path ---\n${pathnameToOperatingSystemPath(packagePathname)}\n`\n","/* eslint-disable import/max-dependencies */\nimport { basename } from \"path\"\nimport {\n  operatingSystemPathToPathname,\n  pathnameToRelativePathname,\n  pathnameToOperatingSystemPath,\n} from \"@jsenv/operating-system-path\"\nimport { sortImportMap } from \"@jsenv/import-map\"\nimport { pathnameToDirname } from \"./pathnameToDirname.js\"\nimport { readPackageData } from \"./readPackageData.js\"\nimport { resolveNodeModule } from \"./resolveNodeModule.js\"\nimport { resolvePackageMain } from \"./resolvePackageMain.js\"\nimport { visitPackageImports } from \"./visitPackageImports.js\"\nimport { visitPackageExports } from \"./visitPackageExports.js\"\n\nexport const generateImportMapForPackage = async ({\n  projectPath,\n  rootProjectPath = projectPath,\n  includeDevDependencies = false,\n  logger,\n}) => {\n  const projectPathname = operatingSystemPathToPathname(projectPath)\n  const projectPackagePathname = `${projectPathname}/package.json`\n  const rootProjectPathname = operatingSystemPathToPathname(rootProjectPath)\n  const rootImporterName = basename(rootProjectPathname)\n  const rootPackagePathname = `${rootProjectPathname}/package.json`\n\n  const imports = {}\n  const scopes = {}\n  const seen = {}\n\n  const markPackageAsSeen = (packagePathname, importerPackagePathname) => {\n    if (packagePathname in seen) {\n      seen[packagePathname].push(importerPackagePathname)\n    } else {\n      seen[packagePathname] = [importerPackagePathname]\n    }\n  }\n\n  const packageIsSeen = (packagePathname, importerPackagePathname) => {\n    return packagePathname in seen && seen[packagePathname].includes(importerPackagePathname)\n  }\n\n  const visit = async ({\n    packagePathname,\n    packageData,\n    includeDevDependencies,\n    packageName,\n    importerPackagePathname,\n  }) => {\n    await visitPackage({\n      packagePathname,\n      packageData,\n      packageName,\n      importerPackagePathname,\n    })\n    await visitDependencies({\n      packagePathname,\n      packageData,\n      includeDevDependencies,\n    })\n  }\n\n  const visitPackage = async ({\n    packagePathname,\n    packageData,\n    packageName,\n    importerPackagePathname,\n  }) => {\n    const packagePathInfo = computePackagePathInfo({\n      packagePathname,\n      packageName,\n      importerPackagePathname,\n    })\n\n    await visitPackageMain({\n      packagePathname,\n      packageName,\n      packageData,\n      packagePathInfo,\n    })\n\n    if (\"imports\" in packageData) {\n      const importsForPackageImports = visitPackageImports({\n        packagePathname,\n        packageName,\n        packageData,\n        packagePathInfo,\n      })\n\n      const { packageIsRoot, actualRelativePath } = packagePathInfo\n      Object.keys(importsForPackageImports).forEach((from) => {\n        const to = importsForPackageImports[from]\n\n        if (packageIsRoot) {\n          addImportMapping({ from, to })\n        } else {\n          const toScoped =\n            to[0] === \"/\"\n              ? to\n              : `.${actualRelativePath}${to.startsWith(\"./\") ? to.slice(1) : `/${to}`}`\n\n          addScopedImportMapping({\n            scope: `.${actualRelativePath}/`,\n            from,\n            to: toScoped,\n          })\n\n          // when a package says './' maps to './'\n          // we must add something to say if we are already inside the package\n          // no need to ensure leading slash are scoped to the package\n          if (from === \"./\" && to === \"./\") {\n            addScopedImportMapping({\n              scope: `.${actualRelativePath}/`,\n              from: `.${actualRelativePath}/`,\n              to: `.${actualRelativePath}/`,\n            })\n          } else if (from === \"/\" && to === \"/\") {\n            addScopedImportMapping({\n              scope: `.${actualRelativePath}/`,\n              from: `.${actualRelativePath}/`,\n              to: `.${actualRelativePath}/`,\n            })\n          }\n        }\n      })\n    }\n\n    if (\"exports\" in packageData) {\n      const importsForPackageExports = visitPackageExports({\n        packagePathname,\n        packageName,\n        packageData,\n        packagePathInfo,\n      })\n\n      const { importerName, actualRelativePath, expectedRelativePath } = packagePathInfo\n      Object.keys(importsForPackageExports).forEach((from) => {\n        const to = importsForPackageExports[from]\n\n        if (importerName === rootImporterName) {\n          addImportMapping({ from, to })\n        } else {\n          addScopedImportMapping({ scope: `./${importerName}/`, from, to })\n        }\n        if (actualRelativePath !== expectedRelativePath) {\n          addScopedImportMapping({\n            scope: `./${importerName}/`,\n            from,\n            to,\n          })\n        }\n      })\n    }\n  }\n\n  const visitPackageMain = async ({\n    packagePathname,\n    packageData,\n    packageName,\n    packagePathInfo: {\n      packageIsRoot,\n      packageIsProject,\n      importerPackageIsRoot,\n      importerName,\n      actualRelativePath,\n      expectedRelativePath,\n    },\n  }) => {\n    if (packageIsRoot) return\n    if (packageIsProject) return\n\n    const mainRelativePath = await resolvePackageMain({\n      packagePathname,\n      packageData,\n      logger,\n    })\n\n    // it's possible to have no main\n    // like { main: \"\" } in package.json\n    // or a main that does not lead to an actual file\n    if (!mainRelativePath) return\n\n    const from = packageName\n    const to = `.${actualRelativePath}${mainRelativePath}`\n\n    if (importerPackageIsRoot) {\n      addImportMapping({ from, to })\n    } else {\n      addScopedImportMapping({ scope: `./${importerName}/`, from, to })\n    }\n    if (actualRelativePath !== expectedRelativePath) {\n      addScopedImportMapping({ scope: `./${importerName}/`, from, to })\n    }\n  }\n\n  const visitDependencies = async ({ packagePathname, packageData, includeDevDependencies }) => {\n    const dependencyMap = {}\n\n    const { dependencies = {} } = packageData\n    Object.keys(dependencies).forEach((dependencyName) => {\n      dependencyMap[dependencyName] = {\n        type: \"dependency\",\n        versionPattern: dependencies[dependencyName],\n      }\n    })\n\n    const { peerDependencies = {} } = packageData\n    Object.keys(peerDependencies).forEach((dependencyName) => {\n      dependencyMap[dependencyName] = {\n        type: \"peerDependency\",\n        versionPattern: peerDependencies[dependencyName],\n      }\n    })\n\n    const isProjectPackage = packagePathname === projectPackagePathname\n    if (includeDevDependencies && isProjectPackage) {\n      const { devDependencies = {} } = packageData\n      Object.keys(devDependencies).forEach((dependencyName) => {\n        if (!dependencyMap.hasOwnProperty(dependencyName)) {\n          dependencyMap[dependencyName] = {\n            type: \"devDependency\",\n            versionPattern: devDependencies[dependencyName],\n          }\n        }\n      })\n    }\n\n    await Promise.all(\n      Object.keys(dependencyMap).map(async (dependencyName) => {\n        const dependency = dependencyMap[dependencyName]\n        await visitDependency({\n          packagePathname,\n          packageData,\n          dependencyName,\n          dependencyType: dependency.type,\n          dependencyVersionPattern: dependency.versionPattern,\n        })\n      }),\n    )\n  }\n\n  const visitDependency = async ({\n    packagePathname,\n    packageData,\n    dependencyName,\n    dependencyType,\n    dependencyVersionPattern,\n  }) => {\n    const dependencyData = await findDependency({\n      packagePathname,\n      packageData,\n      dependencyName,\n      dependencyType,\n      dependencyVersionPattern,\n    })\n    if (!dependencyData) {\n      return\n    }\n\n    const {\n      packagePathname: dependencyPackagePathname,\n      packageData: dependencyPackageData,\n    } = dependencyData\n\n    if (packageIsSeen(dependencyPackagePathname, packagePathname)) {\n      return\n    }\n    markPackageAsSeen(dependencyPackagePathname, packagePathname)\n    await visit({\n      packagePathname: dependencyPackagePathname,\n      packageData: dependencyPackageData,\n      packageName: dependencyName,\n      importerPackagePathname: packagePathname,\n    })\n  }\n\n  const computePackagePathInfo = ({ packagePathname, packageName, importerPackagePathname }) => {\n    const packageIsRoot = packagePathname === rootPackagePathname\n\n    const packageIsProject = packagePathname === projectPackagePathname\n\n    const importerPackageIsRoot = importerPackagePathname === rootPackagePathname\n\n    const importerPackageIsProject = importerPackagePathname === projectPackagePathname\n\n    const importerName = importerPackageIsRoot\n      ? rootImporterName\n      : pathnameToDirname(\n          pathnameToRelativePathname(importerPackagePathname, rootProjectPathname),\n        ).slice(1)\n\n    const actualPathname = pathnameToDirname(packagePathname)\n    const actualRelativePath = pathnameToRelativePathname(actualPathname, rootProjectPathname)\n    let expectedPathname\n    if (packageIsProject && !packageIsRoot) {\n      expectedPathname = pathnameToDirname(importerPackagePathname)\n    } else {\n      expectedPathname = `${pathnameToDirname(importerPackagePathname)}/node_modules/${packageName}`\n    }\n    const expectedRelativePath = pathnameToRelativePathname(expectedPathname, rootProjectPathname)\n\n    return {\n      importerPackageIsRoot,\n      importerPackageIsProject,\n      importerName,\n      packageIsRoot,\n      packageIsProject,\n      actualRelativePath,\n      expectedRelativePath,\n    }\n  }\n\n  const addImportMapping = ({ from, to }) => {\n    // we could think it's useless to remap from with to\n    // however it can be used to ensure a weaker remapping\n    // does not win over this specific file or folder\n    if (from === to) {\n      /**\n       * however remapping '/' to '/' is truly useless\n       * moreover it would make wrapImportMap create something like\n       * {\n       *   imports: {\n       *     \"/\": \"/.dist/best/\"\n       *   }\n       * }\n       * that would append the wrapped folder twice\n       * */\n      if (from === \"/\") return\n    }\n\n    imports[from] = to\n  }\n\n  const addScopedImportMapping = ({ scope, from, to }) => {\n    scopes[scope] = {\n      ...(scopes[scope] || {}),\n      [from]: to,\n    }\n  }\n\n  const dependenciesCache = {}\n  const findDependency = ({\n    packagePathname,\n    packageData,\n    dependencyName,\n    dependencyType,\n    dependencyVersionPattern,\n  }) => {\n    if (packagePathname in dependenciesCache === false) {\n      dependenciesCache[packagePathname] = {}\n    }\n    if (dependencyName in dependenciesCache[packagePathname]) {\n      return dependenciesCache[packagePathname][dependencyName]\n    }\n    const dependencyPromise = resolveNodeModule({\n      rootPathname: rootProjectPathname,\n      packagePathname,\n      packageData,\n      dependencyName,\n      dependencyType,\n      dependencyVersionPattern,\n      logger,\n    })\n    dependenciesCache[packagePathname][dependencyName] = dependencyPromise\n    return dependencyPromise\n  }\n\n  const projectPackageData = await readPackageData({\n    path: pathnameToOperatingSystemPath(projectPackagePathname),\n  })\n  markPackageAsSeen(projectPackagePathname, projectPackagePathname)\n  await visit({\n    packagePathname: projectPackagePathname,\n    packageData: projectPackageData,\n    includeDevDependencies,\n    packageName: projectPackageData.name,\n    importerPackagePathname: projectPackagePathname,\n  })\n\n  return sortImportMap({ imports, scopes })\n}\n","export const LOG_LEVEL_OFF = \"off\"\n\nexport const LOG_LEVEL_ERROR = \"error\"\n\nexport const LOG_LEVEL_WARN = \"warn\"\n\nexport const LOG_LEVEL_INFO = \"info\"\n\nexport const LOG_LEVEL_TRACE = \"trace\"\n","import {\n  LOG_LEVEL_OFF,\n  LOG_LEVEL_ERROR,\n  LOG_LEVEL_WARN,\n  LOG_LEVEL_INFO,\n  LOG_LEVEL_TRACE,\n} from \"./LOG_LEVELS.js\"\n\nexport const createLogger = ({ logLevel = LOG_LEVEL_INFO } = {}) => {\n  if (logLevel === LOG_LEVEL_TRACE) {\n    return {\n      trace,\n      info,\n      warn,\n      error,\n    }\n  }\n\n  if (logLevel === LOG_LEVEL_INFO) {\n    return {\n      trace: traceDisabled,\n      info,\n      warn,\n      error,\n    }\n  }\n\n  if (logLevel === LOG_LEVEL_WARN) {\n    return {\n      trace: traceDisabled,\n      info: infoDisabled,\n      warn,\n      error,\n    }\n  }\n\n  if (logLevel === LOG_LEVEL_ERROR) {\n    return {\n      trace: traceDisabled,\n      info: infoDisabled,\n      warn: warnDisabled,\n      error,\n    }\n  }\n\n  if (logLevel === LOG_LEVEL_OFF) {\n    return {\n      trace: traceDisabled,\n      info: infoDisabled,\n      warn: warnDisabled,\n      error: errorDisabled,\n    }\n  }\n\n  throw new Error(createUnexpectedLogLevelMessage({ logLevel }))\n}\n\nconst createUnexpectedLogLevelMessage = ({ logLevel }) => `unexpected logLevel.\n--- logLevel ---\n${logLevel}\n--- allowed log levels ---\n${LOG_LEVEL_OFF}\n${LOG_LEVEL_ERROR}\n${LOG_LEVEL_WARN}\n${LOG_LEVEL_INFO}\n${LOG_LEVEL_TRACE}\n`\n\nconst trace = console.trace\n\nconst traceDisabled = () => {}\n\nconst info = console.log\n\nconst infoDisabled = () => {}\n\nconst warn = console.warn\n\nconst warnDisabled = () => {}\n\nconst error = console.error\n\nconst errorDisabled = () => {}\n","// https://github.com/tc39/proposal-cancellation/tree/master/stage0\nimport { arrayWithout } from \"./arrayHelper.js\"\n\nexport const createCancelError = (reason) => {\n  const cancelError = new Error(`canceled because ${reason}`)\n  cancelError.name = \"CANCEL_ERROR\"\n  cancelError.reason = reason\n  return cancelError\n}\n\nexport const isCancelError = (value) => {\n  return value && typeof value === \"object\" && value.name === \"CANCEL_ERROR\"\n}\n\nexport const errorToCancelReason = (error) => {\n  if (!isCancelError(error)) return \"\"\n  return error.reason\n}\n\nexport const createCancellationSource = () => {\n  let requested = false\n  let cancelError\n  let registrationArray = []\n  const cancel = (reason) => {\n    if (requested) return\n    requested = true\n    cancelError = createCancelError(reason)\n\n    const registrationArrayCopy = registrationArray.slice()\n    registrationArray.length = 0\n    registrationArrayCopy.forEach((registration) => {\n      registration.callback(cancelError)\n      // const removedDuringCall = registrationArray.indexOf(registration) === -1\n    })\n  }\n\n  const register = (callback) => {\n    if (typeof callback !== \"function\") {\n      throw new Error(`callback must be a function, got ${callback}`)\n    }\n\n    const existingRegistration = registrationArray.find((registration) => {\n      return registration.callback === callback\n    })\n    // don't register twice\n    if (existingRegistration) {\n      return existingRegistration\n    }\n\n    const registration = {\n      callback,\n      unregister: () => {\n        registrationArray = arrayWithout(registrationArray, registration)\n      },\n    }\n    registrationArray = [registration, ...registrationArray]\n\n    return registration\n  }\n\n  const throwIfRequested = () => {\n    if (requested) {\n      throw cancelError\n    }\n  }\n\n  return {\n    token: {\n      register,\n      get cancellationRequested() {\n        return requested\n      },\n      throwIfRequested,\n    },\n    cancel,\n  }\n}\n\nexport const cancellationTokenCompose = (...tokens) => {\n  const register = (callback) => {\n    if (typeof callback !== \"function\") {\n      throw new Error(`callback must be a function, got ${callback}`)\n    }\n\n    const registrationArray = []\n\n    const visit = (i) => {\n      const token = tokens[i]\n      const registration = token.register(callback)\n      registrationArray.push(registration)\n    }\n    let i = 0\n    while (i < tokens.length) {\n      visit(i++)\n    }\n\n    const compositeRegistration = {\n      callback,\n      unregister: () => {\n        registrationArray.forEach((registration) => registration.unregister())\n        registrationArray.length = 0\n      },\n    }\n\n    return compositeRegistration\n  }\n\n  let requested = false\n  let cancelError\n  const internalRegistration = register((parentCancelError) => {\n    requested = true\n    cancelError = parentCancelError\n    internalRegistration.unregister()\n  })\n\n  const throwIfRequested = () => {\n    if (requested) {\n      throw cancelError\n    }\n  }\n\n  return {\n    register,\n    get cancellationRequested() {\n      return requested\n    },\n    throwIfRequested,\n  }\n}\n\nexport const createCancellationToken = () => {\n  const register = (callback) => {\n    if (typeof callback !== \"function\") {\n      throw new Error(`callback must be a function, got ${callback}`)\n    }\n\n    return {\n      callback,\n      unregister: () => {},\n    }\n  }\n\n  const throwIfRequested = () => undefined\n\n  return {\n    register,\n    cancellationRequested: false,\n    throwIfRequested,\n  }\n}\n","import { isCancelError, createCancellationSource } from \"./cancellation.js\"\n\nexport const catchAsyncFunctionCancellation = (asyncFunction) => {\n  return asyncFunction().catch((error) => {\n    if (isCancelError(error)) return\n    throw error\n  })\n}\n\nexport const createProcessInterruptionCancellationToken = () => {\n  const SIGINTCancelSource = createCancellationSource()\n  process.on(\"SIGINT\", () => SIGINTCancelSource.cancel(\"process interruption\"))\n  return SIGINTCancelSource.token\n}\n","export const importMapToVsCodeConfigPaths = ({ imports = {} }) => {\n  const paths = {}\n\n  const handleImportsAt = (pathPattern, remappingValue) => {\n    let path\n    if (pathPattern.endsWith(\"/\")) {\n      path = `${pathPattern}*`\n    } else {\n      path = pathPattern\n    }\n\n    const remappingArray = typeof remappingValue === \"string\" ? [remappingValue] : remappingValue\n    const candidates = remappingArray\n      .filter((remapping) => !remapping.endsWith(\"/\"))\n      .map((remapping) => `.${remapping}`)\n\n    if (candidates.length) {\n      if (path in paths) {\n        paths[path] = [...paths[path], ...candidates]\n      } else {\n        paths[path] = candidates\n      }\n    }\n  }\n\n  Object.keys(imports).forEach((importPattern) => {\n    handleImportsAt(importPattern, imports[importPattern])\n  })\n\n  return paths\n}\n","import { composeTwoImportMaps } from \"@jsenv/import-map\"\nimport {\n  operatingSystemPathToPathname,\n  pathnameToOperatingSystemPath,\n} from \"@jsenv/operating-system-path\"\nimport { createLogger } from \"@jsenv/logger\"\nimport { fileWrite } from \"@dmail/helper\"\nimport { catchAsyncFunctionCancellation } from \"@dmail/cancellation\"\nimport { generateImportMapForPackage } from \"../generateImportMapForPackage/generateImportMapForPackage.js\"\nimport { importMapToVsCodeConfigPaths } from \"./importMapToVsCodeConfigPaths.js\"\n\nexport const generateImportMapForProjectPackage = async ({\n  projectPath,\n  inputImportMap,\n  includeDevDependencies,\n  logLevel,\n  throwUnhandled = true,\n  importMapFile = false,\n  importMapFileRelativePath = \"/importMap.json\",\n  importMapFileLog = true,\n  jsConfigFile = false,\n  jsConfigFileLog = true,\n}) =>\n  catchAsyncFunctionCancellation(async () => {\n    const start = async () => {\n      const logger = createLogger({ logLevel })\n      const projectPackageImportMap = await generateImportMapForPackage({\n        projectPath,\n        includeDevDependencies,\n        logger,\n      })\n      const importMap = inputImportMap\n        ? composeTwoImportMaps(inputImportMap, projectPackageImportMap)\n        : projectPackageImportMap\n\n      if (importMapFile) {\n        const projectPathname = operatingSystemPathToPathname(projectPath)\n        const importMapPath = pathnameToOperatingSystemPath(\n          `${projectPathname}${importMapFileRelativePath}`,\n        )\n        await fileWrite(importMapPath, JSON.stringify(importMap, null, \"  \"))\n        if (importMapFileLog) {\n          logger.info(`-> ${importMapPath}`)\n        }\n      }\n      if (jsConfigFile) {\n        const projectPathname = operatingSystemPathToPathname(projectPath)\n        const jsConfigPath = pathnameToOperatingSystemPath(`${projectPathname}/jsconfig.json`)\n        try {\n          const jsConfig = {\n            compilerOptions: {\n              baseUrl: \".\",\n              paths: {\n                \"/*\": [\"./*\"],\n                ...importMapToVsCodeConfigPaths(importMap),\n              },\n            },\n          }\n          await fileWrite(jsConfigPath, JSON.stringify(jsConfig, null, \"  \"))\n          if (jsConfigFileLog) {\n            logger.info(`-> ${jsConfigPath}`)\n          }\n        } catch (e) {\n          if (e.code !== \"ENOENT\") {\n            throw e\n          }\n        }\n      }\n\n      return importMap\n    }\n\n    const promise = start()\n    if (!throwUnhandled) return promise\n    return promise.catch((e) => {\n      setTimeout(() => {\n        throw e\n      })\n    })\n  })\n"],"names":["startsWithWindowsDriveLetter","string","firstChar","test","secondChar","replaceSlashesWithBackSlashes","replace","pathnameToOperatingSystemPath","pathname","Error","pathnameWithoutLeadingSlash","slice","isWindowsPath","path","replaceBackSlashesWithSlashes","operatingSystemPathToPathname","operatingSystemPath","pathnameToRelativePathname","otherPathname","length","assertImportMap","value","TypeError","type","Array","isArray","composeTwoImportMaps","leftImportMap","rightImportMap","imports","composeTwoImports","scopes","composeTwoScopes","leftImports","rightImports","leftScopes","rightScopes","Object","keys","forEach","scopeKey","hasOwnProperty","sortImportMap","importMap","sortImports","undefined","sortScopes","importsSorted","sort","compareLengthOrLocaleCompare","name","scopesSorted","scopeName","a","b","localeCompare","pathnameToDirname","slashLastIndex","lastIndexOf","firstOperationMatching","array","start","predicate","createArrayErrorMessage","createStartErrorMessage","createPredicateErrorMessage","Promise","resolve","reject","visit","index","input","returnValue","then","output","promiseSequence","callbackArray","values","callback","push","fileMakeDirname","file","fileNormalized","normalizeSeparation","fileStartsWithSlash","folders","split","pop","map","_","folder","join","folderMake","mkdir","error","code","stat","fileLastStat","isDirectory","status","reason","lstat","copyFilePromisified","promisify","copyFile","readFilePromisified","readFile","fileRead","buffer","toString","statPromisified","lstatPromisified","writeFilePromisified","writeFile","fileWrite","content","readdirPromisified","readdir","readPackageData","packageString","packageData","JSON","parse","resolveNodeModule","rootPathname","packagePathname","dependencyName","dependencyVersionPattern","dependencyType","logger","packageFolderPathname","packageFolderRelativePath","nodeModuleCandidateArray","getCandidateArrayFromPackageFolder","result","nodeModuleCandidate","e","writeDependencyPackageParsingError","parsingError","Boolean","warn","writeDendencyNotFound","candidateArray","relativeFolderNameArray","shift","i","message","version","hasScheme","resolvePackageMain","resolveMainFile","packageMainFieldName","packageMainFieldValue","module","main","extensionCandidateArray","startsWith","writePackageMainFieldMustBeInside","mainRelativePath","endsWith","packageDirname","mainFilePathnameFirstCandidate","mainFilePathname","findMainFilePathnameOrNull","writePackageMainFileNotFound","mainFilePath","stats","pathToStats","extension","extname","extensionLeadingToAFile","findExtension","isFile","dirname","filename","basename","extensionLeadingToFile","extensionCandidate","pathCandidate","statObject","visitPackageImports","importsForPackageImports","packageImports","writeImportsMustBeObject","specifier","writeSpecifierMustBeRelative","address","writeAddressMustBeString","writeAddressMustBeRelative","from","to","visitPackageExports","packageName","packagePathInfo","packageIsRoot","actualRelativePath","importsForPackageExports","exports","packageExports","writeExportsMustBeAnObject","generateImportMapForPackage","projectPath","rootProjectPath","includeDevDependencies","projectPathname","projectPackagePathname","rootProjectPathname","rootImporterName","rootPackagePathname","seen","markPackageAsSeen","importerPackagePathname","packageIsSeen","includes","visitPackage","visitDependencies","computePackagePathInfo","visitPackageMain","addImportMapping","toScoped","addScopedImportMapping","scope","importerName","expectedRelativePath","packageIsProject","importerPackageIsRoot","dependencyMap","dependencies","versionPattern","peerDependencies","isProjectPackage","devDependencies","all","dependency","visitDependency","dependencyData","findDependency","dependencyPackagePathname","dependencyPackageData","importerPackageIsProject","actualPathname","expectedPathname","dependenciesCache","dependencyPromise","projectPackageData","LOG_LEVEL_OFF","LOG_LEVEL_ERROR","LOG_LEVEL_WARN","LOG_LEVEL_INFO","LOG_LEVEL_TRACE","createLogger","logLevel","trace","info","traceDisabled","infoDisabled","warnDisabled","errorDisabled","createUnexpectedLogLevelMessage","console","log","isCancelError","catchAsyncFunctionCancellation","asyncFunction","catch","importMapToVsCodeConfigPaths","paths","handleImportsAt","pathPattern","remappingValue","remappingArray","candidates","filter","remapping","importPattern","generateImportMapForProjectPackage","inputImportMap","throwUnhandled","importMapFile","importMapFileRelativePath","importMapFileLog","jsConfigFile","jsConfigFileLog","projectPackageImportMap","importMapPath","stringify","jsConfigPath","jsConfig","compilerOptions","baseUrl","promise","setTimeout"],"mappings":";;;;;;;;AAAO,MAAMA,4BAA4B,GAAIC,MAAD,IAAY;QAChDC,SAAS,GAAGD,MAAM,CAAC,CAAD,CAAxB;MACI,CAAC,WAAWE,IAAX,CAAgBD,SAAhB,CAAL,EAAiC,OAAO,KAAP;QAE3BE,UAAU,GAAGH,MAAM,CAAC,CAAD,CAAzB;MACIG,UAAU,KAAK,GAAnB,EAAwB,OAAO,KAAP;SAEjB,IAAP;CAPK;;ACAA,MAAMC,6BAA6B,GAAIJ,MAAD,IAAYA,MAAM,CAACK,OAAP,CAAe,KAAf,EAAsB,IAAtB,CAAlD;;ACGA,MAAMC,6BAA6B,GAAIC,QAAD,IAAc;MACrDA,QAAQ,CAAC,CAAD,CAAR,KAAgB,GAApB,EAAyB,MAAM,IAAIC,KAAJ,CAAW,mCAAkCD,QAAS,EAAtD,CAAN;QAEnBE,2BAA2B,GAAGF,QAAQ,CAACG,KAAT,CAAe,CAAf,CAApC;;MAEEX,4BAA4B,CAACU,2BAAD,CAA5B,IACAA,2BAA2B,CAAC,CAAD,CAA3B,KAAmC,GAFrC,EAGE;WACOL,6BAA6B,CAACK,2BAAD,CAApC;GARuD;;;SAYlDF,QAAP;CAZK;;ACDA,MAAMI,aAAa,GAAIC,IAAD,IAAUb,4BAA4B,CAACa,IAAD,CAA5B,IAAsCA,IAAI,CAAC,CAAD,CAAJ,KAAY,IAAlF;;ACFA,MAAMC,6BAA6B,GAAIb,MAAD,IAAYA,MAAM,CAACK,OAAP,CAAe,KAAf,EAAsB,GAAtB,CAAlD;;ACGA,MAAMS,6BAA6B,GAAIC,mBAAD,IAAyB;MAChEJ,aAAa,CAACI,mBAAD,CAAjB,EAAwC;WAC9B,IAAGF,6BAA6B,CAACE,mBAAD,CAAsB,EAA9D;GAFkE;;;SAM7DA,mBAAP;CANK;;ACHA,MAAMC,0BAA0B,GAAG,CAACT,QAAD,EAAWU,aAAX,KACxCV,QAAQ,CAACG,KAAT,CAAeO,aAAa,CAACC,MAA7B,CADK;;ACAA,MAAMC,eAAe,GAAIC,KAAD,IAAW;MACpCA,KAAK,KAAK,IAAd,EAAoB;UACZ,IAAIC,SAAJ,CAAe,0CAAf,CAAN;;;QAGIC,IAAI,GAAG,OAAOF,KAApB;;MACIE,IAAI,KAAK,QAAb,EAAuB;UACf,IAAID,SAAJ,CAAe,4CAA2CD,KAAM,EAAhE,CAAN;;;MAGEG,KAAK,CAACC,OAAN,CAAcJ,KAAd,CAAJ,EAA0B;UAClB,IAAIC,SAAJ,CAAe,kDAAiDD,KAAM,EAAtE,CAAN;;CAXG;;ACAP;AACA,AAEO,MAAMK,oBAAoB,GAAG,CAACC,aAAD,EAAgBC,cAAhB,KAAmC;EACrER,eAAe,CAACO,aAAD,CAAf;EACAP,eAAe,CAACQ,cAAD,CAAf;SAEO;IACLC,OAAO,EAAEC,iBAAiB,CAACH,aAAa,CAACE,OAAf,EAAwBD,cAAc,CAACC,OAAvC,CADrB;IAELE,MAAM,EAAEC,gBAAgB,CAACL,aAAa,CAACI,MAAf,EAAuBH,cAAc,CAACG,MAAtC;GAF1B;CAJK;;AAUP,MAAMD,iBAAiB,GAAG,CAACG,WAAW,GAAG,EAAf,EAAmBC,YAAY,GAAG,EAAlC,KAAyC;SAC1D,EAAE,GAAGD,WAAL;OAAqBC;GAA5B;CADF;;AAIA,MAAMF,gBAAgB,GAAG,CAACG,UAAU,GAAG,EAAd,EAAkBC,WAAW,GAAG,EAAhC,KAAuC;QACxDL,MAAM,GAAG,EAAE,GAAGI;GAApB;EACAE,MAAM,CAACC,IAAP,CAAYF,WAAZ,EAAyBG,OAAzB,CAAkCC,QAAD,IAAc;QACzCT,MAAM,CAACU,cAAP,CAAsBD,QAAtB,CAAJ,EAAqC;MACnCT,MAAM,CAACS,QAAD,CAAN,GAAmB,EAAE,GAAGT,MAAM,CAACS,QAAD,CAAX;WAA0BJ,WAAW,CAACI,QAAD;OAAxD;KADF,MAEO;MACLT,MAAM,CAACS,QAAD,CAAN,GAAmB,EAAE,GAAGJ,WAAW,CAACI,QAAD;OAAnC;;GAJJ;SAOOT,MAAP;CATF;;ACfO,MAAMW,aAAa,GAAIC,SAAD,IAAe;EAC1CvB,eAAe,CAACuB,SAAD,CAAf;QAEM;IAAEd,OAAF;IAAWE;MAAWY,SAA5B;SACO;IACLd,OAAO,EAAEA,OAAO,GAAGe,WAAW,CAACf,OAAD,CAAd,GAA0BgB,SADrC;IAELd,MAAM,EAAEA,MAAM,GAAGe,UAAU,CAACf,MAAD,CAAb,GAAwBc;GAFxC;CAJK;AAUP,AAAO,MAAMD,WAAW,GAAIf,OAAD,IAAa;QAChCkB,aAAa,GAAG,EAAtB;EACAV,MAAM,CAACC,IAAP,CAAYT,OAAZ,EACGmB,IADH,CACQC,4BADR,EAEGV,OAFH,CAEYW,IAAD,IAAU;IACjBH,aAAa,CAACG,IAAD,CAAb,GAAsBrB,OAAO,CAACqB,IAAD,CAA7B;GAHJ;SAKOH,aAAP;CAPK;AAUP,AAAO,MAAMD,UAAU,GAAIf,MAAD,IAAY;QAC9BoB,YAAY,GAAG,EAArB;EACAd,MAAM,CAACC,IAAP,CAAYP,MAAZ,EACGiB,IADH,CACQC,4BADR,EAEGV,OAFH,CAEYa,SAAD,IAAe;IACtBD,YAAY,CAACC,SAAD,CAAZ,GAA0BR,WAAW,CAACb,MAAM,CAACqB,SAAD,CAAP,CAArC;GAHJ;SAKOD,YAAP;CAPK;;AAUP,MAAMF,4BAA4B,GAAG,CAACI,CAAD,EAAIC,CAAJ,KAAU;SACtCA,CAAC,CAACnC,MAAF,GAAWkC,CAAC,CAAClC,MAAb,IAAuBkC,CAAC,CAACE,aAAF,CAAgBD,CAAhB,CAA9B;CADF;;AChCO,MAAME,iBAAiB,GAAIhD,QAAD,IAAc;QACvCiD,cAAc,GAAGjD,QAAQ,CAACkD,WAAT,CAAqB,GAArB,CAAvB;MACID,cAAc,KAAK,CAAC,CAAxB,EAA2B,OAAO,EAAP;SAEpBjD,QAAQ,CAACG,KAAT,CAAe,CAAf,EAAkB8C,cAAlB,CAAP;CAJK;;ACAP;AAEA,AAAO,MAAME,sBAAsB,GAAG,CAAC;EAAEC,KAAF;EAASC,KAAT;EAAgBC;CAAjB,KAAiC;MACjE,OAAOF,KAAP,KAAiB,QAArB,EAA+B,MAAM,IAAItC,SAAJ,CAAcyC,uBAAuB,CAAC;IAAEH;GAAH,CAArC,CAAN;MAC3B,OAAOC,KAAP,KAAiB,UAArB,EAAiC,MAAM,IAAIvC,SAAJ,CAAc0C,uBAAuB,CAAC;IAAEH;GAAH,CAArC,CAAN;MAC7B,OAAOC,SAAP,KAAqB,UAAzB,EACE,MAAM,IAAIxC,SAAJ,CAAc2C,2BAA2B,CAAC;IAAEH;GAAH,CAAzC,CAAN;SAEK,IAAII,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;UAChCC,KAAK,GAAIC,KAAD,IAAW;UACnBA,KAAK,IAAIV,KAAK,CAACzC,MAAnB,EAA2B;eAClBgD,OAAO,EAAd;;;YAEII,KAAK,GAAGX,KAAK,CAACU,KAAD,CAAnB;YACME,WAAW,GAAGX,KAAK,CAACU,KAAD,CAAzB;aACOL,OAAO,CAACC,OAAR,CAAgBK,WAAhB,EAA6BC,IAA7B,CAAmCC,MAAD,IAAY;YAC/CZ,SAAS,CAACY,MAAD,CAAb,EAAuB;iBACdP,OAAO,CAACO,MAAD,CAAd;;;eAEKL,KAAK,CAACC,KAAK,GAAG,CAAT,CAAZ;OAJK,EAKJF,MALI,CAAP;KANF;;IAcAC,KAAK,CAAC,CAAD,CAAL;GAfK,CAAP;CANK;;AAyBP,MAAMN,uBAAuB,GAAG,CAAC;EAAEH;CAAH,KAAgB;SACvCA,KAAM,EADf;;AAGA,MAAMI,uBAAuB,GAAG,CAAC;EAAEH;CAAH,KAAgB;SACvCA,KAAM,EADf;;AAGA,MAAMI,2BAA2B,GAAG,CAAC;EAAEH;CAAH,KAAoB;aAC3CA,SAAU,EADvB;;ACjCO,MAAMa,eAAe,GAAG,MAAOC,aAAP,IAAyB;QAChDC,MAAM,GAAG,EAAf;;QACMR,KAAK,GAAG,MAAOC,KAAP,IAAiB;QACzBA,KAAK,KAAKM,aAAa,CAACzD,MAA5B,EAAoC;UAC9B2D,QAAQ,GAAGF,aAAa,CAACN,KAAD,CAA9B;UACMjD,KAAK,GAAG,MAAMyD,QAAQ,EAA5B;IACAD,MAAM,CAACE,IAAP,CAAY1D,KAAZ;UACMgD,KAAK,CAACC,KAAK,GAAG,CAAT,CAAX;GALF;;QAOMD,KAAK,CAAC,CAAD,CAAX;SACOQ,MAAP;CAVK;;ACIP;;;;;;;;;;;;;;;;AAgBA,AAAO,MAAMG,eAAe,GAAIC,IAAD,IAAU;QACjCC,cAAc,GAAGC,mBAAmB,CAACF,IAAD,CAA1C,CADuC;;;;QAKjCG,mBAAmB,GAAGF,cAAc,CAAC,CAAD,CAAd,KAAsB,GAAlD;QACM1E,QAAQ,GAAG4E,mBAAmB,GAAGF,cAAc,CAACvE,KAAf,CAAqB,CAArB,CAAH,GAA6BuE,cAAjE;QACMG,OAAO,GAAG7E,QAAQ,CAAC8E,KAAT,CAAe,GAAf,CAAhB;EACAD,OAAO,CAACE,GAAR;SAEOZ,eAAe,CACpBU,OAAO,CAACG,GAAR,CAAY,CAACC,CAAD,EAAInB,KAAJ,KAAc;WACjB,MAAM;YACLoB,MAAM,GAAGL,OAAO,CAAC1E,KAAR,CAAc,CAAd,EAAiB2D,KAAK,GAAG,CAAzB,EAA4BqB,IAA5B,CAAiC,GAAjC,CAAf;aACOC,UAAU,CAAE,GAAER,mBAAmB,GAAG,GAAH,GAAS,EAAG,GAAEM,MAAO,EAA5C,CAAjB;KAFF;GADF,CADoB,CAAtB;CAVK;;AAoBP,MAAMP,mBAAmB,GAAIF,IAAD,IAAUA,IAAI,CAAC3E,OAAL,CAAa,KAAb,EAAoB,GAApB,CAAtC;;AAEA,MAAMsF,UAAU,GAAIF,MAAD,IACjB,IAAIxB,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;EAC/ByB,QAAK,CAACH,MAAD,EAAS,MAAOI,KAAP,IAAiB;QACzBA,KAAJ,EAAW;;UAELA,KAAK,CAACC,IAAN,KAAe,QAAnB,EAA6B;cACrBC,IAAI,GAAG,MAAMC,YAAY,CAACP,MAAD,CAA/B;;YACIM,IAAI,CAACE,WAAL,EAAJ,EAAwB;UACtB/B,OAAO;SADT,MAEO;UACLC,MAAM,CAAC;YAAE+B,MAAM,EAAE,GAAV;YAAeC,MAAM,EAAE;WAAxB,CAAN;;OALJ,MAOO;QACLhC,MAAM,CAAC;UAAE+B,MAAM,EAAE,GAAV;UAAeC,MAAM,EAAEN,KAAK,CAACC;SAA9B,CAAN;;KAVJ,MAYO;MACL5B,OAAO;;GAdN,CAAL;CADF,CADF;;AAqBA,MAAM8B,YAAY,GAAIpF,IAAD,IACnB,IAAIqD,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;EAC/BiC,QAAK,CAACxF,IAAD,EAAO,CAACiF,KAAD,EAAQO,KAAR,KAAkB;QACxBP,KAAJ,EAAW;MACT1B,MAAM,CAAC;QAAE+B,MAAM,EAAE,GAAV;QAAeC,MAAM,EAAEN,KAAK,CAACC;OAA9B,CAAN;KADF,MAEO;MACL5B,OAAO,CAACkC,KAAD,CAAP;;GAJC,CAAL;CADF,CADF;;AC3DA,MAAMC,mBAAmB,GAAGC,cAAS,CAACC,WAAD,CAArC;;ACDA,MAAMC,mBAAmB,GAAGF,cAAS,CAACG,WAAD,CAArC;AAEA,AAAO,MAAMC,QAAQ,GAAG,MAAO1B,IAAP,IAAgB;QAChC2B,MAAM,GAAG,MAAMH,mBAAmB,CAACxB,IAAD,CAAxC;SACO2B,MAAM,CAACC,QAAP,EAAP;CAFK;;ACFP,MAAMC,eAAe,GAAGP,cAAS,CAACP,OAAD,CAAjC;;ACAA,MAAMe,gBAAgB,GAAGR,cAAS,CAACF,QAAD,CAAlC;;ACCA,MAAMW,oBAAoB,GAAGT,cAAS,CAACU,YAAD,CAAtC;AAEA,AAAO,MAAMC,SAAS,GAAG,OAAOjC,IAAP,EAAakC,OAAb,KAAyB;QAC1CnC,eAAe,CAACC,IAAD,CAArB;SACO+B,oBAAoB,CAAC/B,IAAD,EAAOkC,OAAP,CAA3B;CAFK;;ACHP,MAAMC,kBAAkB,GAAGb,cAAS,CAACc,UAAD,CAApC;;ACDO,MAAMC,eAAe,GAAG,OAAO;EAAEzG;CAAT,KAAoB;QAC3C0G,aAAa,GAAG,MAAMZ,QAAQ,CAAC9F,IAAD,CAApC;QACM2G,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWH,aAAX,CAApB;SACOC,WAAP;CAHK;;ACMA,MAAMG,iBAAiB,GAAG,OAAO;EACtCC,YADsC;EAEtCC,eAFsC;EAGtCL,WAHsC;EAItCM,cAJsC;EAKtCC,wBALsC;EAMtCC,cANsC;EAOtCC;CAP+B,KAQ3B;QACEC,qBAAqB,GAAG1E,iBAAiB,CAACqE,eAAD,CAA/C;QACMM,yBAAyB,GAAGlH,0BAA0B,CAACiH,qBAAD,EAAwBN,YAAxB,CAA5D;QAEMQ,wBAAwB,GAAG,CAC/B,GAAGC,kCAAkC,CAACF,yBAAD,CADN,EAE9B,cAF8B,CAAjC;QAKMG,MAAM,GAAG,MAAM3E,sBAAsB,CAAC;IAC1CC,KAAK,EAAEwE,wBADmC;IAE1CvE,KAAK,EAAE,MAAO0E,mBAAP,IAA+B;YAC9BV,eAAe,GAAI,GAAED,YAAa,IAAGW,mBAAoB,IAAGT,cAAe,eAAjF;;UACI;cACIN,WAAW,GAAG,MAAMF,eAAe,CAAC;UACxCzG,IAAI,EAAEN,6BAA6B,CAACsH,eAAD;SADI,CAAzC;eAGO;UAAEA,eAAF;UAAmBL;SAA1B;OAJF,CAKE,OAAOgB,CAAP,EAAU;YACNA,CAAC,CAACzC,IAAF,KAAW,QAAf,EAAyB;iBAChB,EAAP;;;YAGEyC,CAAC,CAACtF,IAAF,KAAW,aAAf,EAA8B;UAC5B+E,MAAM,CAACnC,KAAP,CACE2C,kCAAkC,CAAC;YACjCC,YAAY,EAAEF,CADmB;YAEjCX;WAFgC,CADpC;iBAMO,EAAP;;;cAGIW,CAAN;;KAxBsC;IA2B1C1E,SAAS,EAAE,CAAC;MAAE0D;KAAH,KAAqBmB,OAAO,CAACnB,WAAD;GA3BE,CAA3C;;MA8BI,CAACc,MAAL,EAAa;IACXL,MAAM,CAACW,IAAP,CACEC,qBAAqB,CAAC;MACpBf,cADoB;MAEpBE,cAFoB;MAGpBD,wBAHoB;MAIpBF,eAJoB;MAKpBL;KALmB,CADvB;;;SAWKc,MAAP;CA3DK;;AA8DP,MAAMD,kCAAkC,GAAIF,yBAAD,IAA+B;MACpEA,yBAAyB,KAAK,EAAlC,EAAsC,OAAO,EAAP;QAEhCW,cAAc,GAAG,EAAvB;QACMC,uBAAuB,GAAGZ,yBAAyB,CAAC7C,KAA1B,CAAgC,gBAAhC,CAAhC,CAJwE;;EAMxEyD,uBAAuB,CAACC,KAAxB;MAEIC,CAAC,GAAGF,uBAAuB,CAAC5H,MAAhC;;SACO8H,CAAC,EAAR,EAAY;IACVH,cAAc,CAAC/D,IAAf,CACG,gBAAegE,uBAAuB,CAACpI,KAAxB,CAA8B,CAA9B,EAAiCsI,CAAC,GAAG,CAArC,EAAwCtD,IAAxC,CAA6C,gBAA7C,CAA+D,eADjF;;;SAKKmD,cAAP;CAfF;;AAkBA,MAAML,kCAAkC,GAAG,CAAC;EAAEC,YAAF;EAAgBb;CAAjB,KAAwC;;;EAGjFa,YAAY,CAACQ,OAAQ;;EAErB3I,6BAA6B,CAACsH,eAAD,CAAkB;CALjD;;AAQA,MAAMgB,qBAAqB,GAAG,CAAC;EAC7Bf,cAD6B;EAE7BE,cAF6B;EAG7BD,wBAH6B;EAI7BP,WAJ6B;EAK7BK;CAL4B,KAMvB;gBACSG,cAAe;MACzBA,cAAe;EACnBF,cAAe,IAAGC,wBAAyB;;EAE3CP,WAAW,CAACtE,IAAK,IAAGsE,WAAW,CAAC2B,OAAQ;;EAExC5I,6BAA6B,CAACsH,eAAD,CAAkB;CAbjD;;AChGO,MAAMuB,SAAS,GAAInJ,MAAD,IAAY;SAC5B,iBAAiBE,IAAjB,CAAsBF,MAAtB,CAAP;CADK;;ACUA,MAAMoJ,kBAAkB,GAAG,CAAC;EAAE7B,WAAF;EAAeK,eAAf;EAAgCI;CAAjC,KAA8C;MAC1E,YAAYT,WAAhB,EAA6B;WACpB8B,eAAe,CAAC;MACrBzB,eADqB;MAErBI,MAFqB;MAGrBsB,oBAAoB,EAAE,QAHD;MAIrBC,qBAAqB,EAAEhC,WAAW,CAACiC;KAJf,CAAtB;;;MAQE,iBAAiBjC,WAArB,EAAkC;WACzB8B,eAAe,CAAC;MACrBzB,eADqB;MAErBI,MAFqB;MAGrBsB,oBAAoB,EAAE,aAHD;MAIrBC,qBAAqB,EAAEhC,WAAW,CAAC,aAAD;KAJd,CAAtB;;;MAQE,UAAUA,WAAd,EAA2B;WAClB8B,eAAe,CAAC;MACrBzB,eADqB;MAErBI,MAFqB;MAGrBsB,oBAAoB,EAAE,MAHD;MAIrBC,qBAAqB,EAAEhC,WAAW,CAACkC;KAJf,CAAtB;;;SAQKJ,eAAe,CAAC;IACrBzB,eADqB;IAErBI,MAFqB;IAGrBsB,oBAAoB,EAAE,SAHD;IAIrBC,qBAAqB,EAAE;GAJH,CAAtB;CA5BK;AAoCP,MAAMG,uBAAuB,GAAG,CAAC,IAAD,EAAO,MAAP,EAAe,MAAf,CAAhC;;AAEA,MAAML,eAAe,GAAG,OAAO;EAC7BzB,eAD6B;EAE7BI,MAF6B;EAG7BsB,oBAH6B;EAI7BC;CAJsB,KAKlB;;;MAGAA,qBAAqB,KAAK,EAA9B,EAAkC;WACzB,IAAP;;;MAIAJ,SAAS,CAACI,qBAAD,CAAT,IACAA,qBAAqB,CAACI,UAAtB,CAAiC,IAAjC,CADA,IAEAJ,qBAAqB,CAACI,UAAtB,CAAiC,KAAjC,CAHF,EAIE;IACA3B,MAAM,CAACW,IAAP,CACEiB,iCAAiC,CAAC;MAChChC,eADgC;MAEhC0B,oBAFgC;MAGhCC;KAH+B,CADnC;WAOO,IAAP;;;MAGEM,gBAAJ;;MACIN,qBAAqB,CAAC7I,KAAtB,CAA4B,CAA5B,EAA+B,CAA/B,MAAsC,IAA1C,EAAgD;IAC9CmJ,gBAAgB,GAAGN,qBAAqB,CAAC7I,KAAtB,CAA4B,CAA5B,CAAnB;GADF,MAEO,IAAI6I,qBAAqB,CAAC,CAAD,CAArB,KAA6B,GAAjC,EAAsC;IAC3CM,gBAAgB,GAAGN,qBAAnB;GADK,MAEA;IACLM,gBAAgB,GAAI,IAAGN,qBAAsB,EAA7C;;;MAGEA,qBAAqB,CAACO,QAAtB,CAA+B,GAA/B,CAAJ,EAAyC;IACvCD,gBAAgB,IAAK,OAArB;;;QAGIE,cAAc,GAAGxG,iBAAiB,CAACqE,eAAD,CAAxC;QACMoC,8BAA8B,GAAI,GAAED,cAAe,GAAEF,gBAAiB,EAA5E;QACMI,gBAAgB,GAAG,MAAMC,0BAA0B,CAACF,8BAAD,CAAzD;;MAEIC,gBAAgB,KAAK,IAAzB,EAA+B;;;;;;;QAQzBX,oBAAoB,KAAK,SAA7B,EAAwC;MACtCtB,MAAM,CAACW,IAAP,CACEwB,4BAA4B,CAAC;QAC3BvC,eAD2B;QAE3B0B,oBAF2B;QAG3BC,qBAH2B;QAI3Ba,YAAY,EAAE9J,6BAA6B,CAAC0J,8BAAD;OAJjB,CAD9B;;;WASM,GAAEH,gBAAiB,KAA3B;;;SAGK7I,0BAA0B,CAACiJ,gBAAD,EAAmBF,cAAnB,CAAjC;CAjEF;;AAoEA,MAAMG,0BAA0B,GAAG,MAAOD,gBAAP,IAA4B;QACvDG,YAAY,GAAG9J,6BAA6B,CAAC2J,gBAAD,CAAlD;QACMI,KAAK,GAAG,MAAMC,WAAW,CAACF,YAAD,CAA/B;;MAEIC,KAAK,KAAK,IAAd,EAAoB;UACZE,SAAS,GAAGC,YAAO,CAACP,gBAAD,CAAzB;;QAEIM,SAAS,KAAK,EAAlB,EAAsB;YACdE,uBAAuB,GAAG,MAAMC,aAAa,CAACT,gBAAD,CAAnD;;UACIQ,uBAAuB,KAAK,IAAhC,EAAsC;eAC7B,IAAP;;;aAEM,GAAER,gBAAiB,IAAGQ,uBAAwB,EAAtD;;;WAEK,IAAP;;;MAGEJ,KAAK,CAACM,MAAN,EAAJ,EAAoB;WACXV,gBAAP;;;MAGEI,KAAK,CAACpE,WAAN,EAAJ,EAAyB;IACvBgE,gBAAgB,IAAIA,gBAAgB,CAACH,QAAjB,CAA0B,GAA1B,IAAkC,OAAlC,GAA4C,QAAhE;UACMW,uBAAuB,GAAG,MAAMC,aAAa,CAACT,gBAAD,CAAnD;;QACIQ,uBAAuB,KAAK,IAAhC,EAAsC;aAC7B,IAAP;;;WAEM,GAAER,gBAAiB,IAAGQ,uBAAwB,EAAtD;;;SAGK,IAAP;CA9BF;;AAiCA,MAAMC,aAAa,GAAG,MAAOnK,QAAP,IAAoB;QAClCqK,OAAO,GAAGrH,iBAAiB,CAAChD,QAAD,CAAjC;QACMsK,QAAQ,GAAGC,aAAQ,CAACvK,QAAD,CAAzB;QACMwK,sBAAsB,GAAG,MAAMrH,sBAAsB,CAAC;IAC1DC,KAAK,EAAE+F,uBADmD;IAE1D9F,KAAK,EAAE,MAAOoH,kBAAP,IAA8B;YAC7BC,aAAa,GAAG3K,6BAA6B,CAChD,GAAEsK,OAAQ,IAAGC,QAAS,IAAGG,kBAAmB,EADI,CAAnD;YAGMX,KAAK,GAAG,MAAMC,WAAW,CAACW,aAAD,CAA/B;aACOZ,KAAK,IAAIA,KAAK,CAACM,MAAN,EAAT,GAA0BK,kBAA1B,GAA+C,IAAtD;KAPwD;IAS1DnH,SAAS,EAAG0G,SAAD,IAAe7B,OAAO,CAAC6B,SAAD;GATwB,CAA3D;SAWOQ,sBAAsB,IAAI,IAAjC;CAdF;;AAiBA,MAAMT,WAAW,GAAI1J,IAAD,IAAU;SACrB,IAAIqD,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;IACtC4B,OAAI,CAACnF,IAAD,EAAO,CAACiF,KAAD,EAAQqF,UAAR,KAAuB;UAC5BrF,KAAJ,EAAW;YACLA,KAAK,CAACC,IAAN,KAAe,QAAnB,EAA6B5B,OAAO,CAAC,IAAD,CAAP,CAA7B,KACKC,MAAM,CAAC0B,KAAD,CAAN;OAFP,MAGO;QACL3B,OAAO,CAACgH,UAAD,CAAP;;KALA,CAAJ;GADK,CAAP;CADF;;AAaA,MAAMtB,iCAAiC,GAAG,CAAC;EACzChC,eADyC;EAEzC0B,oBAFyC;EAGzCC;CAHwC,KAInC;EACLD,oBAAqB;MACjBA,oBAAqB;EACzBC,qBAAsB;;EAEtBjJ,6BAA6B,CAACsH,eAAD,CAAkB;CATjD;;AAYA,MAAMuC,4BAA4B,GAAG,CAAC;EACpCvC,eADoC;EAEpC0B,oBAFoC;EAGpCC,qBAHoC;EAIpCa;CAJmC,KAK9B;oCAC6Bd,oBAAqB;MACnDA,oBAAqB;EACzBC,qBAAsB;;EAEtBa,YAAa;;EAEb9J,6BAA6B,CAACsH,eAAD,CAAkB;;EAE/C8B,uBAAuB,CAAChE,IAAxB,CAA8B,GAA9B,CAAkC;CAdpC;;AC5LO,MAAMyF,mBAAmB,GAAG,CAAC;EAAEnD,MAAF;EAAUJ,eAAV;EAA2BL;CAA5B,KAA8C;QACzE6D,wBAAwB,GAAG,EAAjC;QAEM;IAAExJ,OAAO,EAAEyJ;MAAmB9D,WAApC;;MACI,OAAO8D,cAAP,KAA0B,QAA1B,IAAsCA,cAAc,KAAK,IAA7D,EAAmE;IACjErD,MAAM,CAACW,IAAP,CACE2C,wBAAwB,CAAC;MACvB1D,eADuB;MAEvByD;KAFsB,CAD1B;WAMOD,wBAAP;;;EAGFhJ,MAAM,CAACC,IAAP,CAAYgJ,cAAZ,EAA4B/I,OAA5B,CAAqCiJ,SAAD,IAAe;QAC7CpC,SAAS,CAACoC,SAAD,CAAT,IAAwBA,SAAS,CAAC5B,UAAV,CAAqB,IAArB,CAAxB,IAAsD4B,SAAS,CAAC5B,UAAV,CAAqB,KAArB,CAA1D,EAAuF;MACrF3B,MAAM,CAACW,IAAP,CACE6C,4BAA4B,CAAC;QAC3B5D,eAD2B;QAE3B2D;OAF0B,CAD9B;;;;UASIE,OAAO,GAAGJ,cAAc,CAACE,SAAD,CAA9B;;QACI,OAAOE,OAAP,KAAmB,QAAvB,EAAiC;MAC/BzD,MAAM,CAACW,IAAP,CACE+C,wBAAwB,CAAC;QACvB9D,eADuB;QAEvB2D,SAFuB;QAGvBE;OAHsB,CAD1B;;;;QASEtC,SAAS,CAACsC,OAAD,CAAT,IAAsBA,OAAO,CAAC9B,UAAR,CAAmB,IAAnB,CAAtB,IAAkD8B,OAAO,CAAC9B,UAAR,CAAmB,KAAnB,CAAtD,EAAiF;MAC/E3B,MAAM,CAACW,IAAP,CACEgD,0BAA0B,CAAC;QACzB/D,eADyB;QAEzB2D,SAFyB;QAGzBE;OAHwB,CAD5B;;;;QAUEG,IAAJ;;QACIL,SAAS,CAAC,CAAD,CAAT,KAAiB,GAArB,EAA0B;MACxBK,IAAI,GAAGL,SAAP;KADF,MAEO,IAAIA,SAAS,CAAC5B,UAAV,CAAqB,IAArB,CAAJ,EAAgC;MACrCiC,IAAI,GAAGL,SAAP;KADK,MAEA;MACLK,IAAI,GAAGL,SAAP;;;UAGIM,EAAE,GAAGJ,OAAX;IAEAL,wBAAwB,CAACQ,IAAD,CAAxB,GAAiCC,EAAjC;GA5CF;SA+COT,wBAAP;CA7DK;;AAgEP,MAAME,wBAAwB,GAAG,CAAC;EAAE1D,eAAF;EAAmByD;CAApB,KAA0C;;;EAGzEA,cAAe;;EAEf/K,6BAA6B,CAACsH,eAAD,CAAkB;CALjD;;AAQA,MAAM8D,wBAAwB,GAAG,CAAC;EAAE9D,eAAF;EAAmB2D,SAAnB;EAA8BE;CAA/B,KAA8C;;;EAG7EA,OAAQ;;EAERF,SAAU;;EAEVjL,6BAA6B,CAACsH,eAAD,CAAkB;CAPjD;;AAUA,MAAM4D,4BAA4B,GAAG,CAAC;EAAE5D,eAAF;EAAmB2D;CAApB,KAAqC;;;EAGxEA,SAAU;;EAEVjL,6BAA6B,CAACsH,eAAD,CAAkB;CALjD;;AAQA,MAAM+D,0BAA0B,GAAG,CAAC;EAAE/D,eAAF;EAAmB2D,SAAnB;EAA8BE;CAA/B,KAA8C;;;EAG/EA,OAAQ;;EAERF,SAAU;;EAEVjL,6BAA6B,CAACsH,eAAD,CAAkB;CAPjD;;AC1FO,MAAMkE,mBAAmB,GAAG,CAAC;EAClC9D,MADkC;EAElCJ,eAFkC;EAGlCmE,WAHkC;EAIlCxE,WAJkC;EAKlCyE,eAAe,EAAE;IAAEC,aAAF;IAAiBC;;CALD,KAM7B;QACEC,wBAAwB,GAAG,EAAjC;;MAEIF,aAAJ,EAAmB;WACVE,wBAAP;;;QAGI;IAAEC,OAAO,EAAEC;MAAmB9E,WAApC;;MACI,OAAO8E,cAAP,KAA0B,QAA1B,IAAsCA,cAAc,KAAK,IAA7D,EAAmE;IACjErE,MAAM,CAACW,IAAP,CACE2D,0BAA0B,CAAC;MACzBD,cADyB;MAEzBzE;KAFwB,CAD5B;WAMOuE,wBAAP;;;EAGF/J,MAAM,CAACC,IAAP,CAAYgK,cAAZ,EAA4B/J,OAA5B,CAAqCiJ,SAAD,IAAe;QAC7CpC,SAAS,CAACoC,SAAD,CAAT,IAAwBA,SAAS,CAAC5B,UAAV,CAAqB,IAArB,CAAxB,IAAsD4B,SAAS,CAAC5B,UAAV,CAAqB,KAArB,CAA1D,EAAuF;MACrF3B,MAAM,CAACW,IAAP,CACE6C,8BAA4B,CAAC;QAC3B5D,eAD2B;QAE3B2D;OAF0B,CAD9B;;;;UASIE,OAAO,GAAGY,cAAc,CAACd,SAAD,CAA9B;;QACI,OAAOE,OAAP,KAAmB,QAAvB,EAAiC;MAC/BzD,MAAM,CAACW,IAAP,CACE+C,0BAAwB,CAAC;QACvB9D,eADuB;QAEvB2D,SAFuB;QAGvBE;OAHsB,CAD1B;;;;QASEtC,SAAS,CAACsC,OAAD,CAAT,IAAsBA,OAAO,CAAC9B,UAAR,CAAmB,IAAnB,CAAtB,IAAkD8B,OAAO,CAAC9B,UAAR,CAAmB,KAAnB,CAAtD,EAAiF;MAC/E3B,MAAM,CAACW,IAAP,CACEgD,4BAA0B,CAAC;QACzB/D,eADyB;QAEzB2D,SAFyB;QAGzBE;OAHwB,CAD5B;;;;QAUEG,IAAJ;;QACIL,SAAS,CAAC,CAAD,CAAT,KAAiB,GAArB,EAA0B;MACxBK,IAAI,GAAGL,SAAP;KADF,MAEO,IAAIA,SAAS,CAAC5B,UAAV,CAAqB,IAArB,CAAJ,EAAgC;MACrCiC,IAAI,GAAI,GAAEG,WAAY,GAAER,SAAS,CAAC7K,KAAV,CAAgB,CAAhB,CAAmB,EAA3C;KADK,MAEA;MACLkL,IAAI,GAAI,GAAEG,WAAY,IAAGR,SAAU,EAAnC;;;QAGEM,EAAJ;;QACIJ,OAAO,CAAC,CAAD,CAAP,KAAe,GAAnB,EAAwB;MACtBI,EAAE,GAAGJ,OAAL;KADF,MAEO,IAAIA,OAAO,CAAC9B,UAAR,CAAmB,IAAnB,CAAJ,EAA8B;MACnCkC,EAAE,GAAI,IAAGK,kBAAmB,GAAET,OAAO,CAAC/K,KAAR,CAAc,CAAd,CAAiB,EAA/C;KADK,MAEA;MACLmL,EAAE,GAAI,IAAGK,kBAAmB,IAAGT,OAAQ,EAAvC;;;IAGFU,wBAAwB,CAACP,IAAD,CAAxB,GAAiCC,EAAjC;GAnDF;SAsDOM,wBAAP;CA9EK;;AAiFP,MAAMG,0BAA0B,GAAG,CAAC;EAAE1E,eAAF;EAAmByE;CAApB,KAA0C;;;EAG3EA,cAAe;;EAEf/L,6BAA6B,CAACsH,eAAD,CAAkB;CALjD;;AAQA,MAAM4D,8BAA4B,GAAG,CAAC;EAAE5D,eAAF;EAAmB2D;CAApB,KAAqC;;;EAGxEA,SAAU;;EAEVjL,6BAA6B,CAACsH,eAAD,CAAkB;CALjD;;AAQA,MAAM8D,0BAAwB,GAAG,CAAC;EAAE9D,eAAF;EAAmB2D,SAAnB;EAA8BE;CAA/B,KAA8C;;;EAG7EA,OAAQ;;EAERF,SAAU;;EAEVjL,6BAA6B,CAACsH,eAAD,CAAkB;CAPjD;;AAUA,MAAM+D,4BAA0B,GAAG,CAAC;EAAE/D,eAAF;EAAmB2D,SAAnB;EAA8BE;CAA/B,KAA8C;;;EAG/EA,OAAQ;;EAERF,SAAU;;EAEVjL,6BAA6B,CAACsH,eAAD,CAAkB;CAPjD;;AC9GA;AACA,MAca2E,2BAA2B,GAAG,OAAO;EAChDC,WADgD;EAEhDC,eAAe,GAAGD,WAF8B;EAGhDE,sBAAsB,GAAG,KAHuB;EAIhD1E;CAJyC,KAKrC;QACE2E,eAAe,GAAG7L,6BAA6B,CAAC0L,WAAD,CAArD;QACMI,sBAAsB,GAAI,GAAED,eAAgB,eAAlD;QACME,mBAAmB,GAAG/L,6BAA6B,CAAC2L,eAAD,CAAzD;QACMK,gBAAgB,GAAGhC,aAAQ,CAAC+B,mBAAD,CAAjC;QACME,mBAAmB,GAAI,GAAEF,mBAAoB,eAAnD;QAEMjL,OAAO,GAAG,EAAhB;QACME,MAAM,GAAG,EAAf;QACMkL,IAAI,GAAG,EAAb;;QAEMC,iBAAiB,GAAG,CAACrF,eAAD,EAAkBsF,uBAAlB,KAA8C;QAClEtF,eAAe,IAAIoF,IAAvB,EAA6B;MAC3BA,IAAI,CAACpF,eAAD,CAAJ,CAAsB9C,IAAtB,CAA2BoI,uBAA3B;KADF,MAEO;MACLF,IAAI,CAACpF,eAAD,CAAJ,GAAwB,CAACsF,uBAAD,CAAxB;;GAJJ;;QAQMC,aAAa,GAAG,CAACvF,eAAD,EAAkBsF,uBAAlB,KAA8C;WAC3DtF,eAAe,IAAIoF,IAAnB,IAA2BA,IAAI,CAACpF,eAAD,CAAJ,CAAsBwF,QAAtB,CAA+BF,uBAA/B,CAAlC;GADF;;QAIM9I,KAAK,GAAG,OAAO;IACnBwD,eADmB;IAEnBL,WAFmB;IAGnBmF,sBAHmB;IAInBX,WAJmB;IAKnBmB;GALY,KAMR;UACEG,YAAY,CAAC;MACjBzF,eADiB;MAEjBL,WAFiB;MAGjBwE,WAHiB;MAIjBmB;KAJgB,CAAlB;UAMMI,iBAAiB,CAAC;MACtB1F,eADsB;MAEtBL,WAFsB;MAGtBmF;KAHqB,CAAvB;GAbF;;QAoBMW,YAAY,GAAG,OAAO;IAC1BzF,eAD0B;IAE1BL,WAF0B;IAG1BwE,WAH0B;IAI1BmB;GAJmB,KAKf;UACElB,eAAe,GAAGuB,sBAAsB,CAAC;MAC7C3F,eAD6C;MAE7CmE,WAF6C;MAG7CmB;KAH4C,CAA9C;UAMMM,gBAAgB,CAAC;MACrB5F,eADqB;MAErBmE,WAFqB;MAGrBxE,WAHqB;MAIrByE;KAJoB,CAAtB;;QAOI,aAAazE,WAAjB,EAA8B;YACtB6D,wBAAwB,GAAGD,mBAAmB,CAAC;QACnDvD,eADmD;QAEnDmE,WAFmD;QAGnDxE,WAHmD;QAInDyE;OAJkD,CAApD;YAOM;QAAEC,aAAF;QAAiBC;UAAuBF,eAA9C;MACA5J,MAAM,CAACC,IAAP,CAAY+I,wBAAZ,EAAsC9I,OAAtC,CAA+CsJ,IAAD,IAAU;cAChDC,EAAE,GAAGT,wBAAwB,CAACQ,IAAD,CAAnC;;YAEIK,aAAJ,EAAmB;UACjBwB,gBAAgB,CAAC;YAAE7B,IAAF;YAAQC;WAAT,CAAhB;SADF,MAEO;gBACC6B,QAAQ,GACZ7B,EAAE,CAAC,CAAD,CAAF,KAAU,GAAV,GACIA,EADJ,GAEK,IAAGK,kBAAmB,GAAEL,EAAE,CAAClC,UAAH,CAAc,IAAd,IAAsBkC,EAAE,CAACnL,KAAH,CAAS,CAAT,CAAtB,GAAqC,IAAGmL,EAAG,EAAE,EAH5E;UAKA8B,sBAAsB,CAAC;YACrBC,KAAK,EAAG,IAAG1B,kBAAmB,GADT;YAErBN,IAFqB;YAGrBC,EAAE,EAAE6B;WAHgB,CAAtB,CANK;;;;cAeD9B,IAAI,KAAK,IAAT,IAAiBC,EAAE,KAAK,IAA5B,EAAkC;YAChC8B,sBAAsB,CAAC;cACrBC,KAAK,EAAG,IAAG1B,kBAAmB,GADT;cAErBN,IAAI,EAAG,IAAGM,kBAAmB,GAFR;cAGrBL,EAAE,EAAG,IAAGK,kBAAmB;aAHP,CAAtB;WADF,MAMO,IAAIN,IAAI,KAAK,GAAT,IAAgBC,EAAE,KAAK,GAA3B,EAAgC;YACrC8B,sBAAsB,CAAC;cACrBC,KAAK,EAAG,IAAG1B,kBAAmB,GADT;cAErBN,IAAI,EAAG,IAAGM,kBAAmB,GAFR;cAGrBL,EAAE,EAAG,IAAGK,kBAAmB;aAHP,CAAtB;;;OA3BN;;;QAqCE,aAAa3E,WAAjB,EAA8B;YACtB4E,wBAAwB,GAAGL,mBAAmB,CAAC;QACnDlE,eADmD;QAEnDmE,WAFmD;QAGnDxE,WAHmD;QAInDyE;OAJkD,CAApD;YAOM;QAAE6B,YAAF;QAAgB3B,kBAAhB;QAAoC4B;UAAyB9B,eAAnE;MACA5J,MAAM,CAACC,IAAP,CAAY8J,wBAAZ,EAAsC7J,OAAtC,CAA+CsJ,IAAD,IAAU;cAChDC,EAAE,GAAGM,wBAAwB,CAACP,IAAD,CAAnC;;YAEIiC,YAAY,KAAKf,gBAArB,EAAuC;UACrCW,gBAAgB,CAAC;YAAE7B,IAAF;YAAQC;WAAT,CAAhB;SADF,MAEO;UACL8B,sBAAsB,CAAC;YAAEC,KAAK,EAAG,KAAIC,YAAa,GAA3B;YAA+BjC,IAA/B;YAAqCC;WAAtC,CAAtB;;;YAEEK,kBAAkB,KAAK4B,oBAA3B,EAAiD;UAC/CH,sBAAsB,CAAC;YACrBC,KAAK,EAAG,KAAIC,YAAa,GADJ;YAErBjC,IAFqB;YAGrBC;WAHoB,CAAtB;;OATJ;;GA1EJ;;QA6FM2B,gBAAgB,GAAG,OAAO;IAC9B5F,eAD8B;IAE9BL,WAF8B;IAG9BwE,WAH8B;IAI9BC,eAAe,EAAE;MACfC,aADe;MAEf8B,gBAFe;MAGfC,qBAHe;MAIfH,YAJe;MAKf3B,kBALe;MAMf4B;;GAVqB,KAYnB;QACA7B,aAAJ,EAAmB;QACf8B,gBAAJ,EAAsB;UAEhBlE,gBAAgB,GAAG,MAAMT,kBAAkB,CAAC;MAChDxB,eADgD;MAEhDL,WAFgD;MAGhDS;KAH+C,CAAjD,CAJI;;;;QAaA,CAAC6B,gBAAL,EAAuB;UAEjB+B,IAAI,GAAGG,WAAb;UACMF,EAAE,GAAI,IAAGK,kBAAmB,GAAErC,gBAAiB,EAArD;;QAEImE,qBAAJ,EAA2B;MACzBP,gBAAgB,CAAC;QAAE7B,IAAF;QAAQC;OAAT,CAAhB;KADF,MAEO;MACL8B,sBAAsB,CAAC;QAAEC,KAAK,EAAG,KAAIC,YAAa,GAA3B;QAA+BjC,IAA/B;QAAqCC;OAAtC,CAAtB;;;QAEEK,kBAAkB,KAAK4B,oBAA3B,EAAiD;MAC/CH,sBAAsB,CAAC;QAAEC,KAAK,EAAG,KAAIC,YAAa,GAA3B;QAA+BjC,IAA/B;QAAqCC;OAAtC,CAAtB;;GApCJ;;QAwCMyB,iBAAiB,GAAG,OAAO;IAAE1F,eAAF;IAAmBL,WAAnB;IAAgCmF;GAAvC,KAAoE;UACtFuB,aAAa,GAAG,EAAtB;UAEM;MAAEC,YAAY,GAAG;QAAO3G,WAA9B;IACAnF,MAAM,CAACC,IAAP,CAAY6L,YAAZ,EAA0B5L,OAA1B,CAAmCuF,cAAD,IAAoB;MACpDoG,aAAa,CAACpG,cAAD,CAAb,GAAgC;QAC9BvG,IAAI,EAAE,YADwB;QAE9B6M,cAAc,EAAED,YAAY,CAACrG,cAAD;OAF9B;KADF;UAOM;MAAEuG,gBAAgB,GAAG;QAAO7G,WAAlC;IACAnF,MAAM,CAACC,IAAP,CAAY+L,gBAAZ,EAA8B9L,OAA9B,CAAuCuF,cAAD,IAAoB;MACxDoG,aAAa,CAACpG,cAAD,CAAb,GAAgC;QAC9BvG,IAAI,EAAE,gBADwB;QAE9B6M,cAAc,EAAEC,gBAAgB,CAACvG,cAAD;OAFlC;KADF;UAOMwG,gBAAgB,GAAGzG,eAAe,KAAKgF,sBAA7C;;QACIF,sBAAsB,IAAI2B,gBAA9B,EAAgD;YACxC;QAAEC,eAAe,GAAG;UAAO/G,WAAjC;MACAnF,MAAM,CAACC,IAAP,CAAYiM,eAAZ,EAA6BhM,OAA7B,CAAsCuF,cAAD,IAAoB;YACnD,CAACoG,aAAa,CAACzL,cAAd,CAA6BqF,cAA7B,CAAL,EAAmD;UACjDoG,aAAa,CAACpG,cAAD,CAAb,GAAgC;YAC9BvG,IAAI,EAAE,eADwB;YAE9B6M,cAAc,EAAEG,eAAe,CAACzG,cAAD;WAFjC;;OAFJ;;;UAUI5D,OAAO,CAACsK,GAAR,CACJnM,MAAM,CAACC,IAAP,CAAY4L,aAAZ,EAA2B1I,GAA3B,CAA+B,MAAOsC,cAAP,IAA0B;YACjD2G,UAAU,GAAGP,aAAa,CAACpG,cAAD,CAAhC;YACM4G,eAAe,CAAC;QACpB7G,eADoB;QAEpBL,WAFoB;QAGpBM,cAHoB;QAIpBE,cAAc,EAAEyG,UAAU,CAAClN,IAJP;QAKpBwG,wBAAwB,EAAE0G,UAAU,CAACL;OALlB,CAArB;KAFF,CADI,CAAN;GAhCF;;QA8CMM,eAAe,GAAG,OAAO;IAC7B7G,eAD6B;IAE7BL,WAF6B;IAG7BM,cAH6B;IAI7BE,cAJ6B;IAK7BD;GALsB,KAMlB;UACE4G,cAAc,GAAG,MAAMC,cAAc,CAAC;MAC1C/G,eAD0C;MAE1CL,WAF0C;MAG1CM,cAH0C;MAI1CE,cAJ0C;MAK1CD;KALyC,CAA3C;;QAOI,CAAC4G,cAAL,EAAqB;;;;UAIf;MACJ9G,eAAe,EAAEgH,yBADb;MAEJrH,WAAW,EAAEsH;QACXH,cAHJ;;QAKIvB,aAAa,CAACyB,yBAAD,EAA4BhH,eAA5B,CAAjB,EAA+D;;;;IAG/DqF,iBAAiB,CAAC2B,yBAAD,EAA4BhH,eAA5B,CAAjB;UACMxD,KAAK,CAAC;MACVwD,eAAe,EAAEgH,yBADP;MAEVrH,WAAW,EAAEsH,qBAFH;MAGV9C,WAAW,EAAElE,cAHH;MAIVqF,uBAAuB,EAAEtF;KAJhB,CAAX;GA3BF;;QAmCM2F,sBAAsB,GAAG,CAAC;IAAE3F,eAAF;IAAmBmE,WAAnB;IAAgCmB;GAAjC,KAA+D;UACtFjB,aAAa,GAAGrE,eAAe,KAAKmF,mBAA1C;UAEMgB,gBAAgB,GAAGnG,eAAe,KAAKgF,sBAA7C;UAEMoB,qBAAqB,GAAGd,uBAAuB,KAAKH,mBAA1D;UAEM+B,wBAAwB,GAAG5B,uBAAuB,KAAKN,sBAA7D;UAEMiB,YAAY,GAAGG,qBAAqB,GACtClB,gBADsC,GAEtCvJ,iBAAiB,CACfvC,0BAA0B,CAACkM,uBAAD,EAA0BL,mBAA1B,CADX,CAAjB,CAEEnM,KAFF,CAEQ,CAFR,CAFJ;UAMMqO,cAAc,GAAGxL,iBAAiB,CAACqE,eAAD,CAAxC;UACMsE,kBAAkB,GAAGlL,0BAA0B,CAAC+N,cAAD,EAAiBlC,mBAAjB,CAArD;QACImC,gBAAJ;;QACIjB,gBAAgB,IAAI,CAAC9B,aAAzB,EAAwC;MACtC+C,gBAAgB,GAAGzL,iBAAiB,CAAC2J,uBAAD,CAApC;KADF,MAEO;MACL8B,gBAAgB,GAAI,GAAEzL,iBAAiB,CAAC2J,uBAAD,CAA0B,iBAAgBnB,WAAY,EAA7F;;;UAEI+B,oBAAoB,GAAG9M,0BAA0B,CAACgO,gBAAD,EAAmBnC,mBAAnB,CAAvD;WAEO;MACLmB,qBADK;MAELc,wBAFK;MAGLjB,YAHK;MAIL5B,aAJK;MAKL8B,gBALK;MAML7B,kBANK;MAOL4B;KAPF;GAzBF;;QAoCML,gBAAgB,GAAG,CAAC;IAAE7B,IAAF;IAAQC;GAAT,KAAkB;;;;QAIrCD,IAAI,KAAKC,EAAb,EAAiB;;;;;;;;;;;UAWXD,IAAI,KAAK,GAAb,EAAkB;;;IAGpBhK,OAAO,CAACgK,IAAD,CAAP,GAAgBC,EAAhB;GAlBF;;QAqBM8B,sBAAsB,GAAG,CAAC;IAAEC,KAAF;IAAShC,IAAT;IAAeC;GAAhB,KAAyB;IACtD/J,MAAM,CAAC8L,KAAD,CAAN,GAAgB,EACd,IAAI9L,MAAM,CAAC8L,KAAD,CAAN,IAAiB,EAArB,CADc;OAEbhC,IAAD,GAAQC;KAFV;GADF;;QAOMoD,iBAAiB,GAAG,EAA1B;;QACMN,cAAc,GAAG,CAAC;IACtB/G,eADsB;IAEtBL,WAFsB;IAGtBM,cAHsB;IAItBE,cAJsB;IAKtBD;GALqB,KAMjB;QACAF,eAAe,IAAIqH,iBAAnB,KAAyC,KAA7C,EAAoD;MAClDA,iBAAiB,CAACrH,eAAD,CAAjB,GAAqC,EAArC;;;QAEEC,cAAc,IAAIoH,iBAAiB,CAACrH,eAAD,CAAvC,EAA0D;aACjDqH,iBAAiB,CAACrH,eAAD,CAAjB,CAAmCC,cAAnC,CAAP;;;UAEIqH,iBAAiB,GAAGxH,iBAAiB,CAAC;MAC1CC,YAAY,EAAEkF,mBAD4B;MAE1CjF,eAF0C;MAG1CL,WAH0C;MAI1CM,cAJ0C;MAK1CE,cAL0C;MAM1CD,wBAN0C;MAO1CE;KAPyC,CAA3C;IASAiH,iBAAiB,CAACrH,eAAD,CAAjB,CAAmCC,cAAnC,IAAqDqH,iBAArD;WACOA,iBAAP;GAvBF;;QA0BMC,kBAAkB,GAAG,MAAM9H,eAAe,CAAC;IAC/CzG,IAAI,EAAEN,6BAA6B,CAACsM,sBAAD;GADW,CAAhD;EAGAK,iBAAiB,CAACL,sBAAD,EAAyBA,sBAAzB,CAAjB;QACMxI,KAAK,CAAC;IACVwD,eAAe,EAAEgF,sBADP;IAEVrF,WAAW,EAAE4H,kBAFH;IAGVzC,sBAHU;IAIVX,WAAW,EAAEoD,kBAAkB,CAAClM,IAJtB;IAKViK,uBAAuB,EAAEN;GALhB,CAAX;SAQOnK,aAAa,CAAC;IAAEb,OAAF;IAAWE;GAAZ,CAApB;CA7WK;;ACfA,MAAMsN,aAAa,GAAG,KAAtB;AAEP,AAAO,MAAMC,eAAe,GAAG,OAAxB;AAEP,AAAO,MAAMC,cAAc,GAAG,MAAvB;AAEP,AAAO,MAAMC,cAAc,GAAG,MAAvB;AAEP,AAAO,MAAMC,eAAe,GAAG,OAAxB;;ACAA,MAAMC,YAAY,GAAG,CAAC;EAAEC,QAAQ,GAAGH;IAAmB,EAAjC,KAAwC;MAC9DG,QAAQ,KAAKF,eAAjB,EAAkC;WACzB;MACLG,KADK;MAELC,IAFK;MAGLjH,IAHK;MAIL9C;KAJF;;;MAQE6J,QAAQ,KAAKH,cAAjB,EAAiC;WACxB;MACLI,KAAK,EAAEE,aADF;MAELD,IAFK;MAGLjH,IAHK;MAIL9C;KAJF;;;MAQE6J,QAAQ,KAAKJ,cAAjB,EAAiC;WACxB;MACLK,KAAK,EAAEE,aADF;MAELD,IAAI,EAAEE,YAFD;MAGLnH,IAHK;MAIL9C;KAJF;;;MAQE6J,QAAQ,KAAKL,eAAjB,EAAkC;WACzB;MACLM,KAAK,EAAEE,aADF;MAELD,IAAI,EAAEE,YAFD;MAGLnH,IAAI,EAAEoH,YAHD;MAILlK;KAJF;;;MAQE6J,QAAQ,KAAKN,aAAjB,EAAgC;WACvB;MACLO,KAAK,EAAEE,aADF;MAELD,IAAI,EAAEE,YAFD;MAGLnH,IAAI,EAAEoH,YAHD;MAILlK,KAAK,EAAEmK;KAJT;;;QAQI,IAAIxP,KAAJ,CAAUyP,+BAA+B,CAAC;IAAEP;GAAH,CAAzC,CAAN;CA9CK;;AAiDP,MAAMO,+BAA+B,GAAG,CAAC;EAAEP;CAAH,KAAmB;;EAEzDA,QAAS;;EAETN,aAAc;EACdC,eAAgB;EAChBC,cAAe;EACfC,cAAe;EACfC,eAAgB;CARlB;;AAWA,MAAMG,KAAK,GAAGO,OAAO,CAACP,KAAtB;;AAEA,MAAME,aAAa,GAAG,MAAM,EAA5B;;AAEA,MAAMD,IAAI,GAAGM,OAAO,CAACC,GAArB;;AAEA,MAAML,YAAY,GAAG,MAAM,EAA3B;;AAEA,MAAMnH,IAAI,GAAGuH,OAAO,CAACvH,IAArB;;AAEA,MAAMoH,YAAY,GAAG,MAAM,EAA3B;;AAEA,MAAMlK,KAAK,GAAGqK,OAAO,CAACrK,KAAtB;;AAEA,MAAMmK,aAAa,GAAG,MAAM,EAA5B;;AClFA;AACA,AASO,MAAMI,aAAa,GAAIhP,KAAD,IAAW;SAC/BA,KAAK,IAAI,OAAOA,KAAP,KAAiB,QAA1B,IAAsCA,KAAK,CAAC6B,IAAN,KAAe,cAA5D;CADK;;ACRA,MAAMoN,8BAA8B,GAAIC,aAAD,IAAmB;SACxDA,aAAa,GAAGC,KAAhB,CAAuB1K,KAAD,IAAW;QAClCuK,aAAa,CAACvK,KAAD,CAAjB,EAA0B;UACpBA,KAAN;GAFK,CAAP;CADK;;ACFA,MAAM2K,4BAA4B,GAAG,CAAC;EAAE5O,OAAO,GAAG;CAAb,KAAsB;QAC1D6O,KAAK,GAAG,EAAd;;QAEMC,eAAe,GAAG,CAACC,WAAD,EAAcC,cAAd,KAAiC;QACnDhQ,IAAJ;;QACI+P,WAAW,CAAC7G,QAAZ,CAAqB,GAArB,CAAJ,EAA+B;MAC7BlJ,IAAI,GAAI,GAAE+P,WAAY,GAAtB;KADF,MAEO;MACL/P,IAAI,GAAG+P,WAAP;;;UAGIE,cAAc,GAAG,OAAOD,cAAP,KAA0B,QAA1B,GAAqC,CAACA,cAAD,CAArC,GAAwDA,cAA/E;UACME,UAAU,GAAGD,cAAc,CAC9BE,MADgB,CACRC,SAAD,IAAe,CAACA,SAAS,CAAClH,QAAV,CAAmB,GAAnB,CADP,EAEhBvE,GAFgB,CAEXyL,SAAD,IAAgB,IAAGA,SAAU,EAFjB,CAAnB;;QAIIF,UAAU,CAAC5P,MAAf,EAAuB;UACjBN,IAAI,IAAI6P,KAAZ,EAAmB;QACjBA,KAAK,CAAC7P,IAAD,CAAL,GAAc,CAAC,GAAG6P,KAAK,CAAC7P,IAAD,CAAT,EAAiB,GAAGkQ,UAApB,CAAd;OADF,MAEO;QACLL,KAAK,CAAC7P,IAAD,CAAL,GAAckQ,UAAd;;;GAjBN;;EAsBA1O,MAAM,CAACC,IAAP,CAAYT,OAAZ,EAAqBU,OAArB,CAA8B2O,aAAD,IAAmB;IAC9CP,eAAe,CAACO,aAAD,EAAgBrP,OAAO,CAACqP,aAAD,CAAvB,CAAf;GADF;SAIOR,KAAP;CA7BK;;MCWMS,kCAAkC,GAAG,OAAO;EACvD1E,WADuD;EAEvD2E,cAFuD;EAGvDzE,sBAHuD;EAIvDgD,QAJuD;EAKvD0B,cAAc,GAAG,IALsC;EAMvDC,aAAa,GAAG,KANuC;EAOvDC,yBAAyB,GAAG,iBAP2B;EAQvDC,gBAAgB,GAAG,IARoC;EASvDC,YAAY,GAAG,KATwC;EAUvDC,eAAe,GAAG;CAV8B,KAYhDpB,8BAA8B,CAAC,YAAY;QACnCzM,KAAK,GAAG,YAAY;UAClBoE,MAAM,GAAGyH,YAAY,CAAC;MAAEC;KAAH,CAA3B;UACMgC,uBAAuB,GAAG,MAAMnF,2BAA2B,CAAC;MAChEC,WADgE;MAEhEE,sBAFgE;MAGhE1E;KAH+D,CAAjE;UAKMtF,SAAS,GAAGyO,cAAc,GAC5B1P,oBAAoB,CAAC0P,cAAD,EAAiBO,uBAAjB,CADQ,GAE5BA,uBAFJ;;QAIIL,aAAJ,EAAmB;YACX1E,eAAe,GAAG7L,6BAA6B,CAAC0L,WAAD,CAArD;YACMmF,aAAa,GAAGrR,6BAA6B,CAChD,GAAEqM,eAAgB,GAAE2E,yBAA0B,EADE,CAAnD;YAGMrK,SAAS,CAAC0K,aAAD,EAAgBnK,IAAI,CAACoK,SAAL,CAAelP,SAAf,EAA0B,IAA1B,EAAgC,IAAhC,CAAhB,CAAf;;UACI6O,gBAAJ,EAAsB;QACpBvJ,MAAM,CAAC4H,IAAP,CAAa,MAAK+B,aAAc,EAAhC;;;;QAGAH,YAAJ,EAAkB;YACV7E,eAAe,GAAG7L,6BAA6B,CAAC0L,WAAD,CAArD;YACMqF,YAAY,GAAGvR,6BAA6B,CAAE,GAAEqM,eAAgB,gBAApB,CAAlD;;UACI;cACImF,QAAQ,GAAG;UACfC,eAAe,EAAE;YACfC,OAAO,EAAE,GADM;YAEfvB,KAAK,EAAE;oBACC,CAAC,KAAD,CADD;iBAEFD,4BAA4B,CAAC9N,SAAD;;;SALrC;cASMuE,SAAS,CAAC4K,YAAD,EAAerK,IAAI,CAACoK,SAAL,CAAeE,QAAf,EAAyB,IAAzB,EAA+B,IAA/B,CAAf,CAAf;;YACIL,eAAJ,EAAqB;UACnBzJ,MAAM,CAAC4H,IAAP,CAAa,MAAKiC,YAAa,EAA/B;;OAZJ,CAcE,OAAOtJ,CAAP,EAAU;YACNA,CAAC,CAACzC,IAAF,KAAW,QAAf,EAAyB;gBACjByC,CAAN;;;;;WAKC7F,SAAP;GA7CF;;QAgDMuP,OAAO,GAAGrO,KAAK,EAArB;MACI,CAACwN,cAAL,EAAqB,OAAOa,OAAP;SACdA,OAAO,CAAC1B,KAAR,CAAehI,CAAD,IAAO;IAC1B2J,UAAU,CAAC,MAAM;YACT3J,CAAN;KADQ,CAAV;GADK,CAAP;CAnD4B,CAZzB;;;;;"}