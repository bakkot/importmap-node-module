{
  "version": 3,
  "file": "jsenv_importmap_node_module.cjs",
  "sources": [
    "../../src/internal/assertInitialImportMap.js",
    "../../src/internal/package_conditions.js",
    "../../src/internal/logs.js",
    "../../src/internal/resolveFile.js",
    "../../src/internal/from-package/resolvePackageMain.js",
    "../../src/internal/from-package/visitPackageImportMap.js",
    "../../src/internal/from-package/specifierIsRelative.js",
    "../../src/internal/from-package/visitPackageImports.js",
    "../../src/internal/from-package/visitPackageExports.js",
    "../../src/internal/memoizeAsyncFunction.js",
    "../../src/internal/from-package/readPackageFile.js",
    "../../src/internal/from-package/applyPackageManualOverride.js",
    "../../src/internal/from-package/node-module-resolution.js",
    "../../src/internal/from-package/visitNodeModuleResolution.js",
    "../../src/internal/optimizeImportMap.js",
    "../../src/internal/from-js/resolveProjectEntryPoint.js",
    "../../node_modules/@jsenv/core/helpers/import-meta/import-meta-url-commonjs.js",
    "../../src/internal/from-js/parseImportSpecifiers.js",
    "../../src/internal/from-js/showSource.js",
    "../../src/internal/from-js/visitSourceFiles.js",
    "../../src/internal/importMapToVsCodeConfigPaths.js",
    "../../src/writeImportMapFiles.js"
  ],
  "sourcesContent": [
    "export const assertInitialImportMap = (value) => {\n  if (value === null) {\n    throw new TypeError(`initialImportMap must be an object, got null`)\n  }\n\n  const type = typeof value\n  if (type !== \"object\") {\n    throw new TypeError(`initialImportMap must be an object, received ${value}`)\n  }\n\n  const { imports = {}, scopes = {}, ...rest } = value\n  const extraKeys = Object.keys(rest)\n  if (extraKeys.length > 0) {\n    throw new TypeError(\n      `initialImportMap can have \"imports\" and \"scopes\", found unexpected keys ${extraKeys}`,\n    )\n  }\n\n  if (typeof imports !== \"object\") {\n    throw new TypeError(\n      `initialImportMap.imports must be an object, found ${imports}`,\n    )\n  }\n\n  if (typeof scopes !== \"object\") {\n    throw new TypeError(\n      `initialImportMap.scopes must be an object, found ${imports}`,\n    )\n  }\n}\n",
    "export const packageConditionsFromPackageUserConditions = ({\n  runtime,\n  packageUserConditions,\n}) => {\n  if (typeof packageUserConditions === \"undefined\") {\n    return [\"import\", runtime, \"default\"]\n  }\n\n  if (!Array.isArray(packageUserConditions)) {\n    throw new TypeError(\n      `packageUserConditions must be an array, got ${packageUserConditions}`,\n    )\n  }\n\n  packageUserConditions.forEach((userCondition) => {\n    if (typeof userCondition !== \"string\") {\n      throw new TypeError(\n        `user condition must be a string, got ${userCondition}`,\n      )\n    }\n  })\n\n  return [...packageUserConditions, \"import\", runtime, \"default\"]\n}\n",
    "import { createDetailedMessage } from \"@jsenv/logger\"\nimport {\n  urlToFileSystemPath,\n  urlToRelativeUrl,\n  resolveUrl,\n} from \"@jsenv/filesystem\"\n\nexport const createPreferExportsFieldWarning = ({\n  packageInfo,\n  packageEntryFieldName,\n}) => {\n  const packageName = packageInfo.object.name\n  const packageEntrySpecifier = packageInfo.object[packageEntryFieldName]\n\n  return {\n    code: \"PREFER_EXPORTS_FIELD\",\n    message: createDetailedMessage(\n      `A package is using a non-standard \"${packageEntryFieldName}\" field. To get rid of this warning check suggestion below`,\n      {\n        \"package.json path\": urlToFileSystemPath(packageInfo.url),\n        \"suggestion 1\": `Add the following to \"packageManualOverrides\"\n{\n  \"${packageName}\": {\n    exports: {\n      import: \"${packageEntrySpecifier}\"\n    }\n  }\n}\nAs explained in https://github.com/jsenv/importmap-node-module#packagesmanualoverrides`,\n        ...getCreatePullRequestSuggestion({\n          packageInfo,\n          packageEntryFieldName,\n        }),\n      },\n    ),\n  }\n}\n\nconst getCreatePullRequestSuggestion = ({\n  packageInfo,\n  packageEntryFieldName,\n}) => {\n  const repositoryUrl = getRepositoryUrl(packageInfo)\n  if (!repositoryUrl) {\n    return null\n  }\n  return {\n    \"suggestion 2\": `Create a pull request in ${repositoryUrl} to use \"exports\" instead of \"${packageEntryFieldName}\"`,\n  }\n}\n\nconst getRepositoryUrl = (packageInfo) => {\n  const repository = packageInfo.object.repository\n  if (typeof repository === \"string\") {\n    return repository\n  }\n  if (typeof repository === \"object\") {\n    return repository.url\n  }\n  return undefined\n}\n\nexport const createPackageNameMustBeAStringWarning = ({\n  packageName,\n  packageInfo,\n}) => {\n  return {\n    code: \"PACKAGE_NAME_MUST_BE_A_STRING\",\n    message: createDetailedMessage(`Package name field must be a string`, {\n      \"package name field\": packageName,\n      \"package.json path\": urlToFileSystemPath(packageInfo.url),\n    }),\n  }\n}\n\nexport const createImportResolutionFailedWarning = ({\n  specifier,\n  importedBy,\n  gotBareSpecifierError,\n  magicExtension,\n  suggestsNodeRuntime,\n  automapping,\n}) => {\n  return {\n    code: \"IMPORT_RESOLUTION_FAILED\",\n    message: createDetailedMessage(\n      `Import resolution failed for \"${specifier}\"`,\n      {\n        \"import source\": importedBy,\n        \"reason\": gotBareSpecifierError\n          ? `there is no mapping for this bare specifier`\n          : `file not found on filesystem`,\n        ...getImportResolutionFailedSuggestions({\n          suggestsNodeRuntime,\n          gotBareSpecifierError,\n          magicExtension,\n          automapping,\n        }),\n        // \"extensions tried\": magicExtensions.join(`, `),\n      },\n    ),\n  }\n}\n\nexport const createBareSpecifierAutomappingMessage = ({\n  specifier,\n  importedBy,\n  automapping,\n}) => {\n  return createDetailedMessage(`Auto mapping for \"${specifier}\"`, {\n    \"import source\": importedBy,\n    \"mapping\": mappingToImportmapString(automapping),\n    \"reason\": `bare specifier and \"bareSpecifierAutomapping\" enabled`,\n  })\n}\n\nexport const createExtensionLessAutomappingMessage = ({\n  specifier,\n  importedBy,\n  automapping,\n  mappingFoundInPackageExports,\n}) => {\n  return createDetailedMessage(`Auto mapping for \"${specifier}\"`, {\n    \"import source\": importedBy,\n    \"mapping\": mappingToImportmapString(automapping),\n    \"reason\": mappingFoundInPackageExports\n      ? `no file extension and mapping found in package exports`\n      : `no file extension and \"bareSpecifierAutomapping\" enabled`,\n  })\n}\n\nconst getImportResolutionFailedSuggestions = ({\n  suggestsNodeRuntime,\n  gotBareSpecifierError,\n  magicExtension,\n  automapping,\n}) => {\n  const suggestions = {}\n\n  const addSuggestion = (suggestion) => {\n    const suggestionCount = Object.keys(suggestions).length\n    suggestions[`suggestion ${suggestionCount + 1}`] = suggestion\n  }\n\n  if (suggestsNodeRuntime) {\n    addSuggestion(`use runtime: \"node\"`)\n  }\n  if (automapping) {\n    addSuggestion(\n      `update import specifier to \"${mappingToUrlRelativeToFile(automapping)}\"`,\n    )\n    if (gotBareSpecifierError) {\n      addSuggestion(`use bareSpecifierAutomapping: true`)\n    }\n    if (magicExtension) {\n      addSuggestion(`use extensionlessAutomapping: true`)\n    }\n    addSuggestion(`add mapping to \"initialImportMap\"\n${mappingToImportmapString(automapping)}`)\n  }\n\n  return suggestions\n}\n\nconst mappingToUrlRelativeToFile = (mapping) => {\n  if (!mapping.scope) {\n    return mapping.to\n  }\n  const scopeUrl = resolveUrl(mapping.scope, \"file:///\")\n  const toUrl = resolveUrl(mapping.to, \"file:///\")\n  return `./${urlToRelativeUrl(toUrl, scopeUrl)}`\n}\n\nconst mappingToImportmapString = ({ scope, from, to }) => {\n  if (scope) {\n    return JSON.stringify(\n      {\n        scopes: {\n          [scope]: {\n            [from]: to,\n          },\n        },\n      },\n      null,\n      \"  \",\n    )\n  }\n\n  return JSON.stringify(\n    {\n      imports: {\n        [from]: to,\n      },\n    },\n    null,\n    \"  \",\n  )\n}\n\n// const mappingToExportsFieldString = ({ scope, from, to }) => {\n//   if (scope) {\n//     const scopeUrl = resolveUrl(scope, \"file://\")\n//     const toUrl = resolveUrl(to, \"file://\")\n//     to = `./${urlToRelativeUrl(toUrl, scopeUrl)}`\n//   }\n\n//   return JSON.stringify(\n//     {\n//       exports: {\n//         [from]: to,\n//       },\n//     },\n//     null,\n//     \"  \",\n//   )\n// }\n",
    "import {\n  resolveUrl,\n  readFileSystemNodeStat,\n  urlToFilename,\n  urlToExtension,\n} from \"@jsenv/filesystem\"\nimport { firstOperationMatching } from \"@jsenv/cancellation\"\n\nexport const resolveFile = async (\n  fileUrl,\n  { magicDirectoryIndexEnabled, magicExtensionEnabled, magicExtensions },\n) => {\n  const fileStat = await readFileSystemNodeStat(fileUrl, {\n    nullIfNotFound: true,\n  })\n\n  // file found\n  if (fileStat && fileStat.isFile()) {\n    return {\n      found: true,\n      url: fileUrl,\n    }\n  }\n\n  // directory found\n  if (fileStat && fileStat.isDirectory()) {\n    if (magicDirectoryIndexEnabled) {\n      const indexFileSuffix = fileUrl.endsWith(\"/\") ? \"index\" : \"/index\"\n      const indexFileUrl = `${fileUrl}${indexFileSuffix}`\n      const result = await resolveFile(indexFileUrl, {\n        magicExtensionEnabled,\n        magicDirectoryIndexEnabled: false,\n        magicExtensions,\n      })\n      return {\n        magicDirectoryIndex: true,\n        ...result,\n      }\n    }\n\n    return {\n      found: false,\n      url: fileUrl,\n    }\n  }\n\n  if (!magicExtensionEnabled) {\n    return {\n      found: false,\n      url: fileUrl,\n    }\n  }\n\n  // file already has an extension, magic extension cannot be used\n  const extension = urlToExtension(fileUrl)\n  if (extension !== \"\") {\n    return {\n      found: false,\n      url: fileUrl,\n    }\n  }\n\n  const extensionLeadingToAFile = await findExtensionLeadingToFile(\n    fileUrl,\n    magicExtensions,\n  )\n  // magic extension not found\n  if (extensionLeadingToAFile === null) {\n    return {\n      found: false,\n      url: fileUrl,\n    }\n  }\n  // magic extension worked\n  return {\n    magicExtension: extensionLeadingToAFile,\n    found: true,\n    url: `${fileUrl}${extensionLeadingToAFile}`,\n  }\n}\n\nconst findExtensionLeadingToFile = async (fileUrl, magicExtensions) => {\n  const urlDirectoryUrl = resolveUrl(\"./\", fileUrl)\n  const urlFilename = urlToFilename(fileUrl)\n  const extensionLeadingToFile = await firstOperationMatching({\n    array: magicExtensions,\n    start: async (extensionCandidate) => {\n      const urlCandidate = `${urlDirectoryUrl}${urlFilename}${extensionCandidate}`\n      const stats = await readFileSystemNodeStat(urlCandidate, {\n        nullIfNotFound: true,\n      })\n      return stats && stats.isFile() ? extensionCandidate : null\n    },\n    predicate: (extension) => Boolean(extension),\n  })\n  return extensionLeadingToFile || null\n}\n",
    "import { createDetailedMessage } from \"@jsenv/logger\"\nimport {\n  resolveUrl,\n  urlToFileSystemPath,\n  urlToExtension,\n  urlToRelativeUrl,\n} from \"@jsenv/filesystem\"\n\nimport { resolveFile } from \"../resolveFile.js\"\n\nexport const resolvePackageMain = async ({\n  packageInfo,\n  packageConditions,\n}) => {\n  const packageDirectoryUrl = resolveUrl(\"./\", packageInfo.url)\n  const packageEntryFieldName = decidePackageEntryFieldName({\n    packageConditions,\n    packageInfo,\n  })\n  return tryToResolvePackageEntryFile({\n    packageEntryFieldName,\n    packageDirectoryUrl,\n    packageInfo,\n  })\n}\n\nconst decidePackageEntryFieldName = ({ packageConditions, packageInfo }) => {\n  if (packageConditions.includes(\"import\")) {\n    const packageModule = packageInfo.object.module\n    if (typeof packageModule === \"string\") {\n      return \"module\"\n    }\n\n    const packageJsNextMain = packageInfo.object[\"jsnext:main\"]\n    if (typeof packageJsNextMain === \"string\") {\n      return \"jsnext:main\"\n    }\n  }\n\n  return \"main\"\n}\n\nconst tryToResolvePackageEntryFile = async ({\n  packageEntryFieldName,\n  packageDirectoryUrl,\n  packageInfo,\n}) => {\n  const packageEntrySpecifier = packageInfo.object[packageEntryFieldName]\n  // explicitely empty meaning\n  // it is assumed that we should not find a file\n  if (packageEntrySpecifier === \"\") {\n    return { found: false, packageEntryFieldName }\n  }\n\n  const relativeUrlToTry = packageEntrySpecifier\n    ? packageEntrySpecifier.endsWith(\"/\")\n      ? `${packageEntrySpecifier}index`\n      : packageEntrySpecifier\n    : \"./index\"\n\n  const urlFirstCandidate = resolveUrl(relativeUrlToTry, packageDirectoryUrl)\n\n  if (!urlFirstCandidate.startsWith(packageDirectoryUrl)) {\n    return {\n      found: false,\n      packageEntryFieldName,\n      warning: createPackageEntryMustBeRelativeWarning({\n        packageEntryFieldName,\n        packageInfo,\n      }),\n    }\n  }\n\n  const { found, url } = await resolveFile(urlFirstCandidate, {\n    magicDirectoryIndexEnabled: true,\n    magicExtensionEnabled: true,\n    magicExtensions: [\".js\", \".json\", \".node\"],\n  })\n\n  if (!found) {\n    const warning = createPackageEntryNotFoundWarning({\n      packageEntryFieldName,\n      packageInfo,\n      fileUrl: urlFirstCandidate,\n      magicExtensions: [\".js\", \".json\", \".node\"],\n    })\n\n    return {\n      found: false,\n      packageEntryFieldName,\n      relativeUrl: urlToRelativeUrl(urlFirstCandidate, packageInfo.url),\n      warning,\n    }\n  }\n\n  return {\n    found: true,\n    packageEntryFieldName,\n    relativeUrl: urlToRelativeUrl(url, packageInfo.url),\n  }\n}\n\nconst createPackageEntryMustBeRelativeWarning = ({\n  packageEntryFieldName,\n  packageInfo,\n}) => {\n  return {\n    code: \"PACKAGE_ENTRY_MUST_BE_RELATIVE\",\n    message: createDetailedMessage(\n      `\"${packageEntryFieldName}\" field in package.json must be inside package.json directory`,\n      {\n        [packageEntryFieldName]: packageInfo.object[packageEntryFieldName],\n        \"package.json path\": urlToFileSystemPath(packageInfo.url),\n      },\n    ),\n  }\n}\n\nconst createPackageEntryNotFoundWarning = ({\n  packageEntryFieldName,\n  packageInfo,\n  fileUrl,\n  magicExtensions,\n}) => {\n  return {\n    code: \"PACKAGE_ENTRY_NOT_FOUND\",\n    message: createDetailedMessage(\n      `File not found for package.json \"${packageEntryFieldName}\" field`,\n      {\n        [packageEntryFieldName]: packageInfo.object[packageEntryFieldName],\n        \"package.json path\": urlToFileSystemPath(packageInfo.url),\n        \"url tried\": urlToFileSystemPath(fileUrl),\n        ...(urlToExtension(fileUrl) === \"\"\n          ? { [\"extensions tried\"]: magicExtensions.join(`, `) }\n          : {}),\n      },\n    ),\n  }\n}\n",
    "import { resolveUrl, moveImportMap } from \"@jsenv/importmap\"\nimport { readFile, urlToFileSystemPath } from \"@jsenv/filesystem\"\n\nexport const visitPackageImportMap = async ({\n  warn,\n  packageInfo,\n  packageImportmap = packageInfo.object.importmap,\n  projectDirectoryUrl,\n}) => {\n  if (typeof packageImportmap === \"undefined\") {\n    return {}\n  }\n\n  if (typeof packageImportmap === \"string\") {\n    const importmapFileUrl = resolveUrl(packageImportmap, packageInfo.url)\n    try {\n      const importmap = await readFile(importmapFileUrl, { as: \"json\" })\n      return moveImportMap(importmap, importmapFileUrl, projectDirectoryUrl)\n    } catch (e) {\n      if (e.code === \"ENOENT\") {\n        warn(\n          createPackageImportMapNotFoundWarning({\n            importmapFileUrl,\n            packageInfo,\n          }),\n        )\n        return {}\n      }\n      throw e\n    }\n  }\n\n  if (typeof packageImportmap === \"object\" && packageImportmap !== null) {\n    return packageImportmap\n  }\n\n  warn(\n    createPackageImportMapUnexpectedWarning({\n      packageImportmap,\n      packageInfo,\n    }),\n  )\n  return {}\n}\n\nconst createPackageImportMapNotFoundWarning = ({\n  importmapFileUrl,\n  packageInfo,\n}) => {\n  return {\n    code: \"PACKAGE_IMPORTMAP_NOT_FOUND\",\n    message: `importmap file specified in a package.json cannot be found,\n--- importmap file path ---\n${importmapFileUrl}\n--- package.json path ---\n${urlToFileSystemPath(packageInfo.url)}`,\n  }\n}\n\nconst createPackageImportMapUnexpectedWarning = ({\n  packageImportmap,\n  packageInfo,\n}) => {\n  return {\n    code: \"PACKAGE_IMPORTMAP_UNEXPECTED\",\n    message: `unexpected value in package.json importmap field: value must be a string or an object.\n--- value ---\n${packageImportmap}\n--- package.json path ---\n${urlToFileSystemPath(packageInfo.url)}`,\n  }\n}\n",
    "export const specifierIsRelative = (specifier) => {\n  if (specifier.startsWith(\"//\")) {\n    return false\n  }\n  if (specifier.startsWith(\"../\")) {\n    return false\n  }\n  // starts with http:// or file:// or ftp: for instance\n  if (/^[a-zA-Z]+\\:/.test(specifier)) {\n    return false\n  }\n  return true\n}\n",
    "/*\n\nhttps://nodejs.org/docs/latest-v15.x/api/packages.html#packages_node_js_package_json_field_definitions\n\n*/\n\nimport { urlToFileSystemPath } from \"@jsenv/filesystem\"\nimport { specifierIsRelative } from \"./specifierIsRelative.js\"\n\nexport const visitPackageImports = ({\n  warn,\n  packageInfo,\n  packageImports = packageInfo.object.imports,\n  packageConditions,\n}) => {\n  const importsSubpaths = {}\n  const onImportsSubpath = ({ key, value, trace }) => {\n    if (!specifierIsRelative(value)) {\n      warn(\n        createSubpathValueMustBeRelativeWarning({\n          value,\n          valueTrace: trace,\n          packageInfo,\n        }),\n      )\n      return\n    }\n\n    const keyNormalized = key\n    const valueNormalized = value\n    importsSubpaths[keyNormalized] = valueNormalized\n  }\n\n  const visitSubpathValue = (subpathValue, subpathValueTrace) => {\n    if (typeof subpathValue === \"string\") {\n      return handleString(subpathValue, subpathValueTrace)\n    }\n\n    if (typeof subpathValue === \"object\" && subpathValue !== null) {\n      return handleObject(subpathValue, subpathValueTrace)\n    }\n\n    return handleRemaining(subpathValue, subpathValueTrace)\n  }\n\n  const handleString = (subpathValue, subpathValueTrace) => {\n    const firstBareKey = subpathValueTrace\n      .slice()\n      .reverse()\n      .find((key) => key.startsWith(\"#\"))\n    onImportsSubpath({\n      key: firstBareKey,\n      value: subpathValue,\n      trace: subpathValueTrace,\n    })\n    return true\n  }\n\n  const handleObject = (subpathValue, subpathValueTrace) => {\n    // From Node.js documentation:\n    // \"If a nested conditional does not have any mapping it will continue\n    // checking the remaining conditions of the parent condition\"\n    // https://nodejs.org/docs/latest-v14.x/api/packages.html#packages_nested_conditions\n    //\n    // So it seems what we do here is not sufficient\n    // -> if the condition finally does not lead to something\n    // it should be ignored and an other branch be taken until\n    // something resolves\n    const followConditionBranch = (subpathValue, conditionTrace) => {\n      const bareKeys = []\n      const conditionalKeys = []\n      Object.keys(subpathValue).forEach((availableKey) => {\n        if (availableKey.startsWith(\"#\")) {\n          bareKeys.push(availableKey)\n        } else {\n          conditionalKeys.push(availableKey)\n        }\n      })\n\n      if (bareKeys.length > 0 && conditionalKeys.length > 0) {\n        warn(\n          createSubpathKeysAreMixedWarning({\n            subpathValue,\n            subpathValueTrace: [...subpathValueTrace, ...conditionTrace],\n            packageInfo,\n            bareKeys,\n            conditionalKeys,\n          }),\n        )\n        return false\n      }\n\n      // there is no condition, visit all bare keys (starting with #)\n      if (conditionalKeys.length === 0) {\n        let leadsToSomething = false\n        bareKeys.forEach((key) => {\n          leadsToSomething = visitSubpathValue(subpathValue[key], [\n            ...subpathValueTrace,\n            ...conditionTrace,\n            key,\n          ])\n        })\n        return leadsToSomething\n      }\n\n      // there is a condition, keep the first one leading to something\n      return conditionalKeys.some((keyCandidate) => {\n        if (!packageConditions.includes(keyCandidate)) {\n          return false\n        }\n        const valueCandidate = subpathValue[keyCandidate]\n        return visitSubpathValue(valueCandidate, [\n          ...subpathValueTrace,\n          ...conditionTrace,\n          keyCandidate,\n        ])\n      })\n    }\n\n    return followConditionBranch(subpathValue, [])\n  }\n\n  const handleRemaining = (subpathValue, subpathValueTrace) => {\n    warn(\n      createSubpathIsUnexpectedWarning({\n        subpathValue,\n        subpathValueTrace,\n        packageInfo,\n      }),\n    )\n    return false\n  }\n\n  visitSubpathValue(packageImports, [\"imports\"])\n\n  return importsSubpaths\n}\n\nconst createSubpathIsUnexpectedWarning = ({\n  subpathValue,\n  subpathValueTrace,\n  packageInfo,\n}) => {\n  return {\n    code: \"IMPORTS_SUBPATH_UNEXPECTED\",\n    message: `unexpected subpath in package.json imports: value must be an object or a string.\n--- value ---\n${subpathValue}\n--- value at ---\n${subpathValueTrace.join(\".\")}\n--- package.json path ---\n${urlToFileSystemPath(packageInfo.url)}`,\n  }\n}\n\nconst createSubpathKeysAreMixedWarning = ({\n  subpathValue,\n  subpathValueTrace,\n  packageInfo,\n}) => {\n  return {\n    code: \"IMPORTS_SUBPATH_MIXED_KEYS\",\n    message: `unexpected subpath keys in package.json imports: cannot mix bare and conditional keys.\n--- value ---\n${JSON.stringify(subpathValue, null, \"  \")}\n--- value at ---\n${subpathValueTrace.join(\".\")}\n--- package.json path ---\n${urlToFileSystemPath(packageInfo.url)}`,\n  }\n}\n\nconst createSubpathValueMustBeRelativeWarning = ({\n  value,\n  valueTrace,\n  packageInfo,\n}) => {\n  return {\n    code: \"IMPORTS_SUBPATH_VALUE_UNEXPECTED\",\n    message: `unexpected subpath value in package.json imports: value must be relative to package\n--- value ---\n${value}\n--- value at ---\n${valueTrace.join(\".\")}\n--- package.json path ---\n${urlToFileSystemPath(packageInfo.url)}`,\n  }\n}\n",
    "/*\n\nhttps://nodejs.org/docs/latest-v15.x/api/packages.html#packages_node_js_package_json_field_definitions\n\n*/\n\nimport {\n  urlToFileSystemPath,\n  urlToRelativeUrl,\n  resolveUrl,\n} from \"@jsenv/filesystem\"\nimport { specifierIsRelative } from \"./specifierIsRelative.js\"\n\nexport const visitPackageExports = ({\n  projectDirectoryUrl,\n  warn,\n  packageInfo,\n  packageExports = packageInfo.object.exports,\n  packageName = packageInfo.name,\n  packageConditions,\n}) => {\n  const exportsSubpaths = {}\n  const packageDirectoryUrl = resolveUrl(\"./\", packageInfo.url)\n  const packageDirectoryRelativeUrl = urlToRelativeUrl(\n    packageDirectoryUrl,\n    projectDirectoryUrl,\n  )\n  const onExportsSubpath = ({ key, value, trace }) => {\n    if (!specifierIsRelative(value)) {\n      warn(\n        createSubpathValueMustBeRelativeWarning({\n          value,\n          valueTrace: trace,\n          packageInfo,\n        }),\n      )\n      return\n    }\n\n    const keyNormalized = specifierToSource(key, packageName)\n    const valueNormalized = addressToDestination(\n      value,\n      packageDirectoryRelativeUrl,\n    )\n    exportsSubpaths[keyNormalized] = valueNormalized\n  }\n\n  const visitSubpathValue = (subpathValue, subpathValueTrace) => {\n    // false is allowed as alternative to exports: {}\n    if (subpathValue === false) {\n      return handleFalse()\n    }\n\n    if (typeof subpathValue === \"string\") {\n      return handleString(subpathValue, subpathValueTrace)\n    }\n\n    if (subpathValue === null) {\n      return handleNull(subpathValue, subpathValueTrace)\n    }\n\n    if (typeof subpathValue === \"object\") {\n      return handleObject(subpathValue, subpathValueTrace)\n    }\n\n    return handleRemaining(subpathValue, subpathValueTrace)\n  }\n\n  const handleFalse = () => {\n    // nothing to do\n    return true\n  }\n\n  const handleString = (subpathValue, subpathValueTrace) => {\n    const firstRelativeKey = subpathValueTrace\n      .slice()\n      .reverse()\n      .find((key) => key.startsWith(\".\"))\n    const key = firstRelativeKey || \".\"\n    onExportsSubpath({\n      key,\n      value: subpathValue,\n      trace: subpathValueTrace,\n    })\n    return true\n  }\n\n  const handleNull = () => {\n    // see \"null can be used\" in https://nodejs.org/docs/latest-v16.x/api/packages.html#packages_subpath_patterns\n    return false\n  }\n\n  const handleObject = (subpathValue, subpathValueTrace) => {\n    // From Node.js documentation:\n    // \"If a nested conditional does not have any mapping it will continue\n    // checking the remaining conditions of the parent condition\"\n    // https://nodejs.org/docs/latest-v14.x/api/packages.html#packages_nested_conditions\n    //\n    // So it seems what we do here is not sufficient\n    // -> if the condition finally does not lead to something\n    // it should be ignored and an other branch be taken until\n    // something resolves\n    const followConditionBranch = (subpathValue, conditionTrace) => {\n      const relativeKeys = []\n      const conditionalKeys = []\n      Object.keys(subpathValue).forEach((availableKey) => {\n        if (availableKey.startsWith(\".\")) {\n          relativeKeys.push(availableKey)\n        } else {\n          conditionalKeys.push(availableKey)\n        }\n      })\n\n      if (relativeKeys.length > 0 && conditionalKeys.length > 0) {\n        warn(\n          createSubpathKeysAreMixedWarning({\n            subpathValue,\n            subpathValueTrace: [...subpathValueTrace, ...conditionTrace],\n            packageInfo,\n            relativeKeys,\n            conditionalKeys,\n          }),\n        )\n        return false\n      }\n\n      // there is no condition, visit all relative keys\n      if (conditionalKeys.length === 0) {\n        let leadsToSomething = false\n        relativeKeys.forEach((key) => {\n          leadsToSomething = visitSubpathValue(subpathValue[key], [\n            ...subpathValueTrace,\n            ...conditionTrace,\n            key,\n          ])\n        })\n        return leadsToSomething\n      }\n\n      // there is a condition, keep the first one leading to something\n      return conditionalKeys.some((keyCandidate) => {\n        if (!packageConditions.includes(keyCandidate)) {\n          return false\n        }\n        const valueCandidate = subpathValue[keyCandidate]\n        return visitSubpathValue(valueCandidate, [\n          ...subpathValueTrace,\n          ...conditionTrace,\n          keyCandidate,\n        ])\n      })\n    }\n\n    if (Array.isArray(subpathValue)) {\n      subpathValue = exportsObjectFromExportsArray(subpathValue)\n    }\n    return followConditionBranch(subpathValue, [])\n  }\n\n  const handleRemaining = (subpathValue, subpathValueTrace) => {\n    warn(\n      createSubpathIsUnexpectedWarning({\n        subpathValue,\n        subpathValueTrace,\n        packageInfo,\n      }),\n    )\n    return false\n  }\n\n  visitSubpathValue(packageExports, [\"exports\"])\n\n  return exportsSubpaths\n}\n\nconst exportsObjectFromExportsArray = (exportsArray) => {\n  const exportsObject = {}\n\n  exportsArray.forEach((exportValue) => {\n    if (typeof exportValue === \"object\") {\n      Object.assign(exportsObject, exportValue)\n      return\n    }\n    if (typeof exportValue === \"string\") {\n      exportsObject.default = exportValue\n    }\n  })\n\n  return exportsObject\n}\n\nconst specifierToSource = (specifier, packageName) => {\n  if (specifier === \".\") {\n    return packageName\n  }\n\n  if (specifier[0] === \"/\") {\n    return specifier\n  }\n\n  if (specifier.startsWith(\"./\")) {\n    return `${packageName}${specifier.slice(1)}`\n  }\n\n  return `${packageName}/${specifier}`\n}\n\nconst addressToDestination = (address, packageDirectoryRelativeUrl) => {\n  if (address[0] === \"/\") {\n    return address\n  }\n\n  if (address.startsWith(\"./\")) {\n    return `./${packageDirectoryRelativeUrl}${address.slice(2)}`\n  }\n\n  return `./${packageDirectoryRelativeUrl}${address}`\n}\n\nconst createSubpathIsUnexpectedWarning = ({\n  subpathValue,\n  subpathValueTrace,\n  packageInfo,\n}) => {\n  return {\n    code: \"EXPORTS_SUBPATH_UNEXPECTED\",\n    message: `unexpected subpath in package.json exports: value must be an object or a string.\n--- value ---\n${subpathValue}\n--- value at ---\n${subpathValueTrace.join(\".\")}\n--- package.json path ---\n${urlToFileSystemPath(packageInfo)}`,\n  }\n}\n\nconst createSubpathKeysAreMixedWarning = ({\n  subpathValue,\n  subpathValueTrace,\n  packageInfo,\n}) => {\n  return {\n    code: \"EXPORTS_SUBPATH_MIXED_KEYS\",\n    message: `unexpected subpath keys in package.json exports: cannot mix relative and conditional keys.\n--- value ---\n${JSON.stringify(subpathValue, null, \"  \")}\n--- value at ---\n${subpathValueTrace.join(\".\")}\n--- package.json path ---\n${urlToFileSystemPath(packageInfo)}`,\n  }\n}\n\nconst createSubpathValueMustBeRelativeWarning = ({\n  value,\n  valueTrace,\n  packageInfo,\n}) => {\n  return {\n    code: \"EXPORTS_SUBPATH_VALUE_MUST_BE_RELATIVE\",\n    message: `unexpected subpath value in package.json exports: value must be a relative to the package.\n--- value ---\n${value}\n--- value at ---\n${valueTrace.join(\".\")}\n--- package.json path ---\n${urlToFileSystemPath(packageInfo)}`,\n  }\n}\n",
    "export const memoizeAsyncFunctionByUrl = (fn) => {\n  const cache = {}\n  return memoizeAsyncFunction(fn, {\n    getMemoryEntryFromArguments: ([url]) => {\n      return {\n        get: () => {\n          return cache[url]\n        },\n        set: (promise) => {\n          cache[url] = promise\n        },\n        delete: () => {\n          delete cache[url]\n        },\n      }\n    },\n  })\n}\n\nexport const memoizeAsyncFunctionBySpecifierAndImporter = (fn) => {\n  const importerCache = {}\n  return memoizeAsyncFunction(fn, {\n    getMemoryEntryFromArguments: ([specifier, importer]) => {\n      return {\n        get: () => {\n          const specifierCacheForImporter = importerCache[importer]\n          return specifierCacheForImporter\n            ? specifierCacheForImporter[specifier]\n            : null\n        },\n        set: (promise) => {\n          const specifierCacheForImporter = importerCache[importer]\n          if (specifierCacheForImporter) {\n            specifierCacheForImporter[specifier] = promise\n          } else {\n            importerCache[importer] = {\n              [specifier]: promise,\n            }\n          }\n        },\n        delete: () => {\n          const specifierCacheForImporter = importerCache[importer]\n          if (specifierCacheForImporter) {\n            delete specifierCacheForImporter[specifier]\n          }\n        },\n      }\n    },\n  })\n}\n\nconst memoizeAsyncFunction = (fn, { getMemoryEntryFromArguments }) => {\n  const memoized = async (...args) => {\n    const memoryEntry = getMemoryEntryFromArguments(args)\n    const promiseFromMemory = memoryEntry.get()\n    if (promiseFromMemory) {\n      return promiseFromMemory\n    }\n    const { promise, resolve, reject } = createControllablePromise()\n    memoryEntry.set(promise)\n    let value\n    let error\n    try {\n      value = fn(...args)\n      error = false\n    } catch (e) {\n      value = e\n      error = true\n      memoryEntry.delete()\n    }\n    if (error) {\n      reject(error)\n    } else {\n      resolve(value)\n    }\n    return promise\n  }\n  memoized.isInMemory = (...args) => {\n    return Boolean(getMemoryEntryFromArguments(args).get())\n  }\n  return memoized\n}\n\nconst createControllablePromise = () => {\n  let resolve\n  let reject\n  const promise = new Promise((res, rej) => {\n    resolve = res\n    reject = rej\n  })\n  return { promise, resolve, reject }\n}\n",
    "import { readFile, urlToFileSystemPath } from \"@jsenv/filesystem\"\n\nexport const PACKAGE_NOT_FOUND = {}\nexport const PACKAGE_WITH_SYNTAX_ERROR = {}\n\nexport const readPackageFile = async (packageFileUrl) => {\n  try {\n    const packageObject = await readFile(packageFileUrl, { as: \"json\" })\n    return packageObject\n  } catch (e) {\n    if (e.code === \"ENOENT\") {\n      return PACKAGE_NOT_FOUND\n    }\n\n    if (e.name === \"SyntaxError\") {\n      console.error(\n        formatPackageSyntaxErrorLog({ syntaxError: e, packageFileUrl }),\n      )\n      return PACKAGE_WITH_SYNTAX_ERROR\n    }\n\n    throw e\n  }\n}\n\nconst formatPackageSyntaxErrorLog = ({ syntaxError, packageFileUrl }) => {\n  return `\nerror while parsing package.json.\n--- syntax error message ---\n${syntaxError.message}\n--- package.json path ---\n${urlToFileSystemPath(packageFileUrl)}\n`\n}\n",
    "export const applyPackageManualOverride = (\n  packageObject,\n  packagesManualOverrides,\n) => {\n  const { name, version } = packageObject\n  const overrideKey = Object.keys(packagesManualOverrides).find(\n    (overrideKeyCandidate) => {\n      if (name === overrideKeyCandidate) {\n        return true\n      }\n      if (`${name}@${version}` === overrideKeyCandidate) {\n        return true\n      }\n      return false\n    },\n  )\n  if (overrideKey) {\n    return composeObject(packageObject, packagesManualOverrides[overrideKey])\n  }\n  return packageObject\n}\n\nconst composeObject = (leftObject, rightObject) => {\n  const composedObject = {\n    ...leftObject,\n  }\n  Object.keys(rightObject).forEach((key) => {\n    const rightValue = rightObject[key]\n\n    if (\n      rightValue === null ||\n      typeof rightValue !== \"object\" ||\n      key in leftObject === false\n    ) {\n      composedObject[key] = rightValue\n    } else {\n      const leftValue = leftObject[key]\n      if (leftValue === null || typeof leftValue !== \"object\") {\n        composedObject[key] = rightValue\n      } else {\n        composedObject[key] = composeObject(leftValue, rightValue)\n      }\n    }\n  })\n  return composedObject\n}\n",
    "import { firstOperationMatching } from \"@jsenv/cancellation\"\nimport { urlToRelativeUrl, resolveUrl } from \"@jsenv/filesystem\"\n\nimport { memoizeAsyncFunctionByUrl } from \"../memoizeAsyncFunction.js\"\nimport {\n  readPackageFile,\n  PACKAGE_NOT_FOUND,\n  PACKAGE_WITH_SYNTAX_ERROR,\n} from \"./readPackageFile.js\"\nimport { applyPackageManualOverride } from \"./applyPackageManualOverride.js\"\n\nexport const createFindNodeModulePackage = () => {\n  const readPackageFileMemoized = memoizeAsyncFunctionByUrl(\n    (packageFileUrl) => {\n      return readPackageFile(packageFileUrl)\n    },\n  )\n\n  return ({\n    projectDirectoryUrl,\n    packagesManualOverrides = {},\n    packageFileUrl,\n    dependencyName,\n  }) => {\n    const nodeModuleCandidates = getNodeModuleCandidates(\n      packageFileUrl,\n      projectDirectoryUrl,\n    )\n\n    return firstOperationMatching({\n      array: nodeModuleCandidates,\n      start: async (nodeModuleCandidate) => {\n        const packageFileUrlCandidate = `${projectDirectoryUrl}${nodeModuleCandidate}${dependencyName}/package.json`\n        const packageObjectCandidate = await readPackageFileMemoized(\n          packageFileUrlCandidate,\n        )\n\n        return {\n          packageFileUrl: packageFileUrlCandidate,\n          packageJsonObject: applyPackageManualOverride(\n            packageObjectCandidate,\n            packagesManualOverrides,\n          ),\n          syntaxError: packageObjectCandidate === PACKAGE_WITH_SYNTAX_ERROR,\n        }\n      },\n      predicate: ({ packageJsonObject }) => {\n        return packageJsonObject !== PACKAGE_NOT_FOUND\n      },\n    })\n  }\n}\n\nconst getNodeModuleCandidates = (fileUrl, projectDirectoryUrl) => {\n  const fileDirectoryUrl = resolveUrl(\"./\", fileUrl)\n\n  if (fileDirectoryUrl === projectDirectoryUrl) {\n    return [`node_modules/`]\n  }\n\n  const fileDirectoryRelativeUrl = urlToRelativeUrl(\n    fileDirectoryUrl,\n    projectDirectoryUrl,\n  )\n  const candidates = []\n  const relativeNodeModuleDirectoryArray =\n    fileDirectoryRelativeUrl.split(\"node_modules/\")\n  // remove the first empty string\n  relativeNodeModuleDirectoryArray.shift()\n\n  let i = relativeNodeModuleDirectoryArray.length\n  while (i--) {\n    candidates.push(\n      `node_modules/${relativeNodeModuleDirectoryArray\n        .slice(0, i + 1)\n        .join(\"node_modules/\")}node_modules/`,\n    )\n  }\n\n  return [...candidates, \"node_modules/\"]\n}\n",
    "import { createDetailedMessage } from \"@jsenv/logger\"\nimport {\n  resolveUrl,\n  readFile,\n  urlToRelativeUrl,\n  urlToFileSystemPath,\n} from \"@jsenv/filesystem\"\n\nimport {\n  createPreferExportsFieldWarning,\n  createPackageNameMustBeAStringWarning,\n} from \"../logs.js\"\n\nimport { resolvePackageMain } from \"./resolvePackageMain.js\"\nimport { visitPackageImportMap } from \"./visitPackageImportMap.js\"\nimport { visitPackageImports } from \"./visitPackageImports.js\"\nimport { visitPackageExports } from \"./visitPackageExports.js\"\nimport { createFindNodeModulePackage } from \"./node-module-resolution.js\"\n\nexport const visitNodeModuleResolution = async ({\n  // nothing is actually listening for this cancellationToken for now\n  // it's not very important but it would be better to register on it\n  // an stops what we are doing if asked to do so\n  // cancellationToken = createCancellationTokenForProcess(),\n  logger,\n  warn,\n  projectDirectoryUrl,\n  visitors,\n  packagesManualOverrides,\n  exportsFieldWarningConfig,\n}) => {\n  const projectPackageFileUrl = resolveUrl(\n    \"./package.json\",\n    projectDirectoryUrl,\n  )\n  const findNodeModulePackage = createFindNodeModulePackage()\n\n  const seen = {}\n  const markPackageAsSeen = (packageFileUrl, importerPackageFileUrl) => {\n    if (packageFileUrl in seen) {\n      seen[packageFileUrl].push(importerPackageFileUrl)\n    } else {\n      seen[packageFileUrl] = [importerPackageFileUrl]\n    }\n  }\n  const packageIsSeen = (packageFileUrl, importerPackageFileUrl) => {\n    return (\n      packageFileUrl in seen &&\n      seen[packageFileUrl].includes(importerPackageFileUrl)\n    )\n  }\n\n  const visit = async ({\n    packageVisitors,\n    packageInfo,\n    packageImporterInfo,\n    isDevDependency,\n  }) => {\n    const packageName = packageInfo.object.name\n    if (typeof packageName !== \"string\") {\n      warn(\n        createPackageNameMustBeAStringWarning({\n          packageName,\n          packageInfo,\n        }),\n      )\n      // if package is root, we don't go further\n      // otherwise package name is deduced from file structure\n      // si it's thoerically safe to keep going\n      // in practice it should never happen because npm won't let\n      // a package without name be published\n      if (!packageImporterInfo) {\n        return\n      }\n    }\n\n    packageVisitors = packageVisitors.filter((visitor) => {\n      return (\n        !visitor.packageIncludedPredicate ||\n        visitor.packageIncludedPredicate(packageInfo, packageImporterInfo)\n      )\n    })\n    if (packageVisitors.length === 0) {\n      return\n    }\n\n    await visitDependencies({\n      packageVisitors,\n      packageInfo,\n      isDevDependency,\n    })\n\n    await visitPackage({\n      packageVisitors,\n      packageInfo,\n      packageImporterInfo,\n      isDevDependency,\n    })\n  }\n\n  const visitDependencies = async ({\n    packageVisitors,\n    packageInfo,\n    isDevDependency,\n  }) => {\n    const dependencyMap = packageDependenciesFromPackageObject(\n      packageInfo.object,\n    )\n\n    await Promise.all(\n      Object.keys(dependencyMap).map(async (dependencyName) => {\n        const dependencyInfo = dependencyMap[dependencyName]\n        if (dependencyInfo.type === \"devDependency\") {\n          if (packageInfo.url !== projectPackageFileUrl) {\n            return\n          }\n          const visitorsForDevDependencies = packageVisitors.filter(\n            (visitor) => {\n              return visitor.mappingsForDevDependencies\n            },\n          )\n          if (visitorsForDevDependencies.length === 0) {\n            return\n          }\n\n          await visitDependency({\n            packageVisitors: visitorsForDevDependencies,\n            packageInfo,\n            dependencyName,\n            dependencyInfo,\n            isDevDependency: true,\n          })\n          return\n        }\n\n        await visitDependency({\n          packageVisitors,\n          packageInfo,\n          dependencyName,\n          dependencyInfo,\n          isDevDependency,\n        })\n      }),\n    )\n  }\n\n  const visitDependency = async ({\n    packageVisitors,\n    packageInfo,\n    dependencyName,\n    dependencyInfo,\n    isDevDependency,\n  }) => {\n    const dependencyData = await findDependency({\n      packageFileUrl: packageInfo.url,\n      dependencyName,\n    })\n    if (!dependencyData) {\n      const cannotFindPackageWarning = createCannotFindPackageWarning({\n        dependencyName,\n        dependencyInfo,\n        packageInfo,\n      })\n      if (dependencyInfo.isOptional) {\n        logger.debug(cannotFindPackageWarning.message)\n      } else {\n        warn(cannotFindPackageWarning)\n      }\n      return\n    }\n    if (dependencyData.syntaxError) {\n      return\n    }\n\n    const {\n      packageFileUrl: dependencyPackageFileUrl,\n      packageJsonObject: dependencyPackageJsonObject,\n    } = dependencyData\n\n    if (packageIsSeen(dependencyPackageFileUrl, packageInfo.url)) {\n      return\n    }\n    markPackageAsSeen(dependencyPackageFileUrl, packageInfo.url)\n    await visit({\n      packageVisitors,\n      packageInfo: {\n        url: dependencyPackageFileUrl,\n        name: dependencyName,\n        object: dependencyPackageJsonObject,\n      },\n      packageImporterInfo: packageInfo,\n      isDevDependency,\n    })\n  }\n\n  const visitPackage = async ({\n    packageVisitors,\n    packageInfo,\n    packageImporterInfo,\n    isDevDependency,\n  }) => {\n    const packageDerivedInfo = computePackageDerivedInfo({\n      projectDirectoryUrl,\n      packageInfo,\n      packageImporterInfo,\n    })\n\n    const addImportMapForPackage = (visitor, importMap) => {\n      if (packageDerivedInfo.packageIsRoot) {\n        const { imports = {}, scopes = {} } = importMap\n        Object.keys(imports).forEach((from) => {\n          triggerVisitorOnMapping(visitor, {\n            from,\n            to: imports[from],\n          })\n        })\n        Object.keys(scopes).forEach((scope) => {\n          const scopeMappings = scopes[scope]\n          Object.keys(scopeMappings).forEach((key) => {\n            triggerVisitorOnMapping(visitor, {\n              scope,\n              from: key,\n              to: scopeMappings[key],\n            })\n          })\n        })\n        return\n      }\n\n      const { imports = {}, scopes = {} } = importMap\n      const scope = `./${packageDerivedInfo.packageDirectoryRelativeUrl}`\n      Object.keys(imports).forEach((from) => {\n        const to = imports[from]\n        const toMoved = moveMappingValue(\n          to,\n          packageInfo.url,\n          projectDirectoryUrl,\n        )\n        triggerVisitorOnMapping(visitor, {\n          scope,\n          from,\n          to: toMoved,\n        })\n      })\n      Object.keys(scopes).forEach((scope) => {\n        const scopeMappings = scopes[scope]\n        const scopeMoved = moveMappingValue(\n          scope,\n          packageInfo.url,\n          projectDirectoryUrl,\n        )\n        Object.keys(scopeMappings).forEach((key) => {\n          const to = scopeMappings[key]\n          const toMoved = moveMappingValue(\n            to,\n            packageInfo.url,\n            projectDirectoryUrl,\n          )\n          triggerVisitorOnMapping(visitor, {\n            scope: scopeMoved,\n            from: key,\n            to: toMoved,\n          })\n        })\n      })\n    }\n\n    const addMappingsForPackageAndImporter = (visitor, mappings) => {\n      if (packageDerivedInfo.packageIsRoot) {\n        Object.keys(mappings).forEach((from) => {\n          const to = mappings[from]\n          triggerVisitorOnMapping(visitor, {\n            from,\n            to,\n          })\n        })\n        return\n      }\n\n      if (packageDerivedInfo.importerIsRoot) {\n        // own package mappings available to himself\n        Object.keys(mappings).forEach((from) => {\n          const to = mappings[from]\n          triggerVisitorOnMapping(visitor, {\n            scope: `./${packageDerivedInfo.packageDirectoryRelativeUrl}`,\n            from,\n            to,\n          })\n          triggerVisitorOnMapping(visitor, { from, to })\n        })\n\n        // if importer is root no need to make package mappings available to the importer\n        // because they are already on top level mappings\n        return\n      }\n\n      Object.keys(mappings).forEach((from) => {\n        const to = mappings[from]\n        // own package exports available to himself\n        triggerVisitorOnMapping(visitor, {\n          scope: `./${packageDerivedInfo.packageDirectoryRelativeUrl}`,\n          from,\n          to,\n        })\n        // now make package exports available to the importer\n        // here if the importer is himself we could do stuff\n        // we should even handle the case earlier to prevent top level remapping\n        triggerVisitorOnMapping(visitor, {\n          scope: `./${packageDerivedInfo.importerRelativeUrl}`,\n          from,\n          to,\n        })\n      })\n    }\n\n    const importsFromPackageField = await visitPackageImportMap({\n      warn,\n      packageInfo,\n      projectDirectoryUrl,\n    })\n    packageVisitors.forEach((visitor) => {\n      addImportMapForPackage(visitor, importsFromPackageField)\n    })\n\n    if (\"imports\" in packageInfo.object) {\n      packageVisitors.forEach((visitor) => {\n        const packageImports = visitPackageImports({\n          warn,\n          packageInfo,\n          projectDirectoryUrl,\n          packageConditions: visitor.packageConditions,\n        })\n\n        const mappingsFromPackageImports = {}\n        Object.keys(packageImports).forEach((from) => {\n          const to = packageImports[from]\n          mappingsFromPackageImports[from] = to\n        })\n        addImportMapForPackage(visitor, {\n          imports: mappingsFromPackageImports,\n        })\n      })\n    }\n\n    if (\"exports\" in packageInfo.object) {\n      packageVisitors.forEach((visitor) => {\n        const packageExports = visitPackageExports({\n          projectDirectoryUrl,\n          warn,\n          packageInfo,\n          packageConditions: visitor.packageConditions,\n        })\n        const mappingsFromPackageExports = {}\n        Object.keys(packageExports).forEach((from) => {\n          const to = packageExports[from]\n          if (from.indexOf(\"*\") === -1) {\n            mappingsFromPackageExports[from] = to\n            return\n          }\n\n          if (\n            from.endsWith(\"/*\") &&\n            to.endsWith(\"/*\") &&\n            // ensure ends with '*' AND there is only one '*' occurence\n            to.indexOf(\"*\") === to.length - 1\n          ) {\n            const fromWithouTrailingStar = from.slice(0, -1)\n            const toWithoutTrailingStar = to.slice(0, -1)\n            mappingsFromPackageExports[fromWithouTrailingStar] =\n              toWithoutTrailingStar\n            return\n          }\n\n          logger.debug(\n            createExportsWildcardIgnoredWarning({\n              key: from,\n              value: to,\n              packageInfo,\n            }),\n          )\n        })\n        addMappingsForPackageAndImporter(visitor, mappingsFromPackageExports)\n      })\n    } else {\n      // no \"exports\" field means any file can be imported\n      // -> generate a mapping to allow this\n      // https://nodejs.org/docs/latest-v15.x/api/packages.html#packages_name\n      const packageDirectoryRelativeUrl = urlToRelativeUrl(\n        resolveUrl(\"./\", packageInfo.url),\n        projectDirectoryUrl,\n      )\n      packageVisitors.forEach((visitor) => {\n        addMappingsForPackageAndImporter(visitor, {\n          [`${packageInfo.name}/`]: `./${packageDirectoryRelativeUrl}`,\n        })\n      })\n\n      // visit \"main\" only if there is no \"exports\"\n      // https://nodejs.org/docs/latest-v16.x/api/packages.html#packages_main\n      await visitPackageMain({\n        packageVisitors,\n        packageInfo,\n        packageDerivedInfo,\n        isDevDependency,\n      })\n    }\n  }\n\n  const visitPackageMain = async ({\n    packageVisitors,\n    packageInfo,\n    packageDerivedInfo,\n    isDevDependency,\n  }) => {\n    const {\n      packageIsRoot,\n      importerIsRoot,\n      importerRelativeUrl,\n      packageDirectoryUrl,\n      packageDirectoryUrlExpected,\n    } = packageDerivedInfo\n\n    await packageVisitors.reduce(async (previous, visitor) => {\n      await previous\n      const mainResolutionInfo = await resolvePackageMain({\n        packageInfo,\n        packageConditions: visitor.packageConditions,\n      })\n\n      if (mainResolutionInfo.packageEntryFieldName !== \"main\") {\n        const shouldWarn = shouldWarnAboutExportsField({\n          exportsFieldWarningConfig,\n          isDevDependency,\n        })\n        const exportsFieldMessage = createPreferExportsFieldWarning({\n          packageInfo,\n          packageEntryFieldName: mainResolutionInfo.packageEntryFieldName,\n        })\n        if (shouldWarn) {\n          warn(exportsFieldMessage)\n        } else {\n          logger.debug(exportsFieldMessage)\n        }\n      }\n\n      if (!mainResolutionInfo.found) {\n        const { warning } = mainResolutionInfo\n        // main explicitely disabled\n        if (packageInfo.object.main === \"\") {\n          return\n        }\n\n        // main \"should\" be there but if we warn there is many false positive\n        // when package have no main file and that's expected\n        if (packageInfo.object.main === undefined) {\n          logger.debug(warning.message)\n        } else {\n          // we don't know yet if the codebase will rely on main file presence or not\n          // so when main does not lead to a file:\n          // - a warning is logged\n          // - we still generate the mapping\n          warn(warning)\n        }\n      }\n\n      const mainFileRelativeUrl = urlToRelativeUrl(\n        resolveUrl(mainResolutionInfo.relativeUrl, packageInfo.url),\n        projectDirectoryUrl,\n      )\n      const scope =\n        packageIsRoot || importerIsRoot ? null : `./${importerRelativeUrl}`\n      const from = packageInfo.name\n      const to = `./${mainFileRelativeUrl}`\n\n      triggerVisitorOnMapping(visitor, {\n        scope,\n        from,\n        to,\n      })\n\n      if (packageDirectoryUrl !== packageDirectoryUrlExpected) {\n        triggerVisitorOnMapping(visitor, {\n          scope: `./${importerRelativeUrl}`,\n          from,\n          to,\n        })\n      }\n    }, Promise.resolve())\n  }\n\n  const dependenciesCache = {}\n  const findDependency = ({ packageFileUrl, dependencyName }) => {\n    if (packageFileUrl in dependenciesCache === false) {\n      dependenciesCache[packageFileUrl] = {}\n    }\n    if (dependencyName in dependenciesCache[packageFileUrl]) {\n      return dependenciesCache[packageFileUrl][dependencyName]\n    }\n    const dependencyPromise = findNodeModulePackage({\n      projectDirectoryUrl,\n      packageFileUrl,\n      dependencyName,\n      packagesManualOverrides,\n    })\n    dependenciesCache[packageFileUrl][dependencyName] = dependencyPromise\n    return dependencyPromise\n  }\n\n  let projectPackageObject\n  try {\n    projectPackageObject = await readFile(projectPackageFileUrl, { as: \"json\" })\n  } catch (e) {\n    if (e.code === \"ENOENT\") {\n      const error = new Error(\n        createDetailedMessage(`Cannot find project package.json file.`, {\n          \"package.json url\": projectPackageFileUrl,\n        }),\n      )\n      error.code = \"PROJECT_PACKAGE_FILE_NOT_FOUND\"\n      throw error\n    }\n    throw e\n  }\n\n  const importerPackageFileUrl = projectPackageFileUrl\n  markPackageAsSeen(projectPackageFileUrl, importerPackageFileUrl)\n  await visit({\n    packageInfo: {\n      url: projectPackageFileUrl,\n      name: projectPackageObject.name,\n      object: projectPackageObject,\n    },\n    packageImporterInfo: null,\n    packageVisitors: visitors,\n    isDevDependency: false,\n  })\n}\n\nconst triggerVisitorOnMapping = (visitor, { scope, from, to }) => {\n  if (scope) {\n    // when a package says './' maps to './'\n    // we add something to say if we are already inside the package\n    // no need to ensure leading slash are scoped to the package\n    if (from === \"./\" && to === scope) {\n      triggerVisitorOnMapping(visitor, {\n        scope,\n        from: scope,\n        to: scope,\n      })\n      const packageName = scope.slice(\n        scope.lastIndexOf(\"node_modules/\") + `node_modules/`.length,\n      )\n      triggerVisitorOnMapping(visitor, {\n        scope,\n        from: packageName,\n        to: scope,\n      })\n    }\n\n    visitor.onMapping({\n      scope,\n      from,\n      to,\n    })\n    return\n  }\n\n  // we could think it's useless to remap from with to\n  // however it can be used to ensure a weaker remapping\n  // does not win over this specific file or folder\n  if (from === to) {\n    /**\n     * however remapping '/' to '/' is truly useless\n     * moreover it would make wrapImportMap create something like\n     * {\n     *   imports: {\n     *     \"/\": \"/.dist/best/\"\n     *   }\n     * }\n     * that would append the wrapped folder twice\n     * */\n    if (from === \"/\") return\n  }\n  visitor.onMapping({ from, to })\n}\n\nconst packageDependenciesFromPackageObject = (packageObject) => {\n  const packageDependencies = {}\n\n  const { dependencies = {} } = packageObject\n  // https://npm.github.io/using-pkgs-docs/package-json/types/optionaldependencies.html\n  const { optionalDependencies = {} } = packageObject\n  Object.keys(dependencies).forEach((dependencyName) => {\n    packageDependencies[dependencyName] = {\n      type: \"dependency\",\n      isOptional: dependencyName in optionalDependencies,\n      versionPattern: dependencies[dependencyName],\n    }\n  })\n\n  const { peerDependencies = {} } = packageObject\n  const { peerDependenciesMeta = {} } = packageObject\n  Object.keys(peerDependencies).forEach((dependencyName) => {\n    packageDependencies[dependencyName] = {\n      type: \"peerDependency\",\n      versionPattern: peerDependencies[dependencyName],\n      isOptional:\n        dependencyName in peerDependenciesMeta &&\n        peerDependenciesMeta[dependencyName].optional,\n    }\n  })\n\n  const { devDependencies = {} } = packageObject\n  Object.keys(devDependencies).forEach((dependencyName) => {\n    if (!packageDependencies.hasOwnProperty(dependencyName)) {\n      packageDependencies[dependencyName] = {\n        type: \"devDependency\",\n        versionPattern: devDependencies[dependencyName],\n      }\n    }\n  })\n\n  return packageDependencies\n}\n\nconst moveMappingValue = (address, from, to) => {\n  const url = resolveUrl(address, from)\n  const relativeUrl = urlToRelativeUrl(url, to)\n  if (relativeUrl.startsWith(\"../\")) {\n    return relativeUrl\n  }\n  if (relativeUrl.startsWith(\"./\")) {\n    return relativeUrl\n  }\n  if (/^[a-zA-Z]{2,}:/.test(relativeUrl)) {\n    // has sheme\n    return relativeUrl\n  }\n  return `./${relativeUrl}`\n}\n\nconst computePackageDerivedInfo = ({\n  projectDirectoryUrl,\n  packageInfo,\n  packageImporterInfo,\n}) => {\n  if (!packageImporterInfo) {\n    const packageDirectoryUrl = resolveUrl(\"./\", packageInfo.url)\n    urlToRelativeUrl(packageDirectoryUrl, projectDirectoryUrl)\n\n    return {\n      importerIsRoot: false,\n      importerRelativeUrl: \"\",\n      packageIsRoot: true,\n      packageDirectoryUrl,\n      packageDirectoryUrlExpected: packageDirectoryUrl,\n      packageDirectoryRelativeUrl: urlToRelativeUrl(\n        packageDirectoryUrl,\n        projectDirectoryUrl,\n      ),\n    }\n  }\n\n  const projectPackageFileUrl = resolveUrl(\n    \"./package.json\",\n    projectDirectoryUrl,\n  )\n\n  const importerIsRoot = packageImporterInfo.url === projectPackageFileUrl\n\n  const importerPackageDirectoryUrl = resolveUrl(\"./\", packageImporterInfo.url)\n\n  const importerRelativeUrl = urlToRelativeUrl(\n    importerPackageDirectoryUrl,\n    projectDirectoryUrl,\n  )\n\n  const packageIsRoot = packageInfo.url === projectPackageFileUrl\n\n  const packageDirectoryUrl = resolveUrl(\"./\", packageInfo.url)\n\n  const packageDirectoryUrlExpected = `${importerPackageDirectoryUrl}node_modules/${packageInfo.name}/`\n\n  const packageDirectoryRelativeUrl = urlToRelativeUrl(\n    packageDirectoryUrl,\n    projectDirectoryUrl,\n  )\n\n  return {\n    importerIsRoot,\n    importerRelativeUrl,\n    packageIsRoot,\n    packageDirectoryUrl,\n    packageDirectoryUrlExpected,\n    packageDirectoryRelativeUrl,\n  }\n}\n\nconst shouldWarnAboutExportsField = ({\n  exportsFieldWarningConfig,\n  isDevDependency,\n}) => {\n  if (!exportsFieldWarningConfig) {\n    return false\n  }\n\n  if (isDevDependency) {\n    return exportsFieldWarningConfig.devDependencies\n  }\n\n  return exportsFieldWarningConfig.dependencies\n}\n\nconst createExportsWildcardIgnoredWarning = ({ key, value, packageInfo }) => {\n  return {\n    code: \"EXPORTS_WILDCARD\",\n    message: `Ignoring export using \"*\" because it is not supported by importmap.\n--- key ---\n${key}\n--- value ---\n${value}\n--- package.json path ---\n${urlToFileSystemPath(packageInfo.url)}\n--- see also ---\nhttps://github.com/WICG/import-maps/issues/232`,\n  }\n}\n\nconst createCannotFindPackageWarning = ({\n  dependencyName,\n  dependencyInfo,\n  packageInfo,\n}) => {\n  const dependencyIsOptional = dependencyInfo.isOptional\n  const dependencyType = dependencyInfo.type\n  const dependencyVersionPattern = dependencyInfo.versionPattern\n  return {\n    code: \"CANNOT_FIND_PACKAGE\",\n    message: createDetailedMessage(\n      dependencyIsOptional\n        ? `cannot find an optional ${dependencyType}.`\n        : `cannot find a ${dependencyType}.`,\n      {\n        [dependencyType]: `${dependencyName}@${dependencyVersionPattern}`,\n        \"required by\": urlToFileSystemPath(packageInfo.url),\n      },\n    ),\n  }\n}\n",
    "export const optimizeImportMap = ({ imports, scopes }) => {\n  // remove useless duplicates (scoped key+value already defined on imports)\n  const scopesOptimized = {}\n  Object.keys(scopes).forEach((scope) => {\n    const scopeMappings = scopes[scope]\n    const scopeMappingsOptimized = {}\n    Object.keys(scopeMappings).forEach((mappingKey) => {\n      const topLevelMappingValue = imports[mappingKey]\n      const mappingValue = scopeMappings[mappingKey]\n      if (!topLevelMappingValue || topLevelMappingValue !== mappingValue) {\n        scopeMappingsOptimized[mappingKey] = mappingValue\n      }\n    })\n    if (Object.keys(scopeMappingsOptimized).length > 0) {\n      scopesOptimized[scope] = scopeMappingsOptimized\n    }\n  })\n  return { imports, scopes: scopesOptimized }\n}\n",
    "import { createDetailedMessage } from \"@jsenv/logger\"\nimport {\n  resolveUrl,\n  readFile,\n  readFileSystemNodeStat,\n  urlToRelativeUrl,\n} from \"@jsenv/filesystem\"\n\nimport { createPackageNameMustBeAStringWarning } from \"../logs.js\"\nimport { packageConditionsFromPackageUserConditions } from \"../package_conditions.js\"\nimport { visitPackageExports } from \"../from-package/visitPackageExports.js\"\nimport { resolvePackageMain } from \"../from-package/resolvePackageMain.js\"\n\nconst entryPointResolutionFailureMessage = `Cannot find project entry point`\n\nexport const resolveProjectEntryPoint = async ({\n  projectDirectoryUrl,\n  warn,\n  packageUserConditions,\n  runtime,\n}) => {\n  const packageConditions = packageConditionsFromPackageUserConditions({\n    runtime,\n    packageUserConditions,\n  })\n\n  const projectPackageFileUrl = resolveUrl(\n    \"./package.json\",\n    projectDirectoryUrl,\n  )\n  const projectPackageObject = await readFile(projectPackageFileUrl, {\n    as: \"json\",\n  })\n  const projectPackageName = projectPackageObject.name\n  if (typeof projectPackageName !== \"string\") {\n    warn(\n      createPackageNameMustBeAStringWarning({\n        packageName: projectPackageName,\n        packageFileUrl: projectPackageFileUrl,\n      }),\n    )\n    return null\n  }\n\n  const projectPackageInfo = {\n    name: projectPackageName,\n    url: projectPackageFileUrl,\n    object: projectPackageObject,\n  }\n\n  if (\"exports\" in projectPackageObject) {\n    const packageExports = projectPackageObject.exports\n\n    if (packageExports === false || packageExports === null) {\n      warn({\n        code: \"PROJECT_ENTRY_POINT_RESOLUTION_FAILED\",\n        message: createDetailedMessage(entryPointResolutionFailureMessage, {\n          reason: `explicitely disabled in package.json (\"exports\" is ${packageExports})`,\n        }),\n      })\n      return null\n    }\n\n    if (typeof packageExports === \"string\") {\n      return tryExportSubpath({\n        warn,\n        exportSubpath: packageExports,\n        projectPackageFileUrl,\n      })\n    }\n\n    const packageSubpaths = visitPackageExports({\n      projectDirectoryUrl,\n      warn,\n      packageInfo: projectPackageInfo,\n      packageExports,\n      packageConditions,\n    })\n    const subpathKey = Object.keys(packageSubpaths).find(\n      (from) => from === projectPackageName,\n    )\n    if (!subpathKey) {\n      warn({\n        code: \"PROJECT_ENTRY_POINT_RESOLUTION_FAILED\",\n        message: createDetailedMessage(entryPointResolutionFailureMessage, {\n          reason: `no subpath found in package.json \"exports\"`,\n        }),\n      })\n      return null\n    }\n    return tryExportSubpath({\n      warn,\n      exportSubpath: packageSubpaths[subpathKey],\n      projectPackageFileUrl,\n    })\n  }\n\n  // visit \"main\" only if there is no \"exports\"\n  // https://nodejs.org/docs/latest-v16.x/api/packages.html#packages_main\n  const main = projectPackageObject.main\n  if (main === \"\") {\n    warn({\n      code: \"PROJECT_ENTRY_POINT_RESOLUTION_FAILED\",\n      message: createDetailedMessage(entryPointResolutionFailureMessage, {\n        reason: `explicitely disabled in package.json (\"main\" is an empty string)`,\n      }),\n    })\n    return null\n  }\n\n  const packageMainResolutionInfo = await resolvePackageMain({\n    packageInfo: projectPackageInfo,\n    packageConditions,\n  })\n  if (!packageMainResolutionInfo.found) {\n    warn({\n      code: \"PROJECT_ENTRY_POINT_RESOLUTION_FAILED\",\n      message: createDetailedMessage(entryPointResolutionFailureMessage, {\n        reason: packageMainResolutionInfo.warning.message,\n      }),\n    })\n    return null\n  }\n\n  return packageMainResolutionInfo.relativeUrl\n}\n\nconst tryExportSubpath = async ({\n  warn,\n  exportSubpath,\n  projectPackageFileUrl,\n}) => {\n  const subpathUrl = resolveUrl(exportSubpath, projectPackageFileUrl)\n  const filesystemStat = await readFileSystemNodeStat(subpathUrl, {\n    nullIfNotFound: true,\n  })\n  if (filesystemStat === null || !filesystemStat.isFile()) {\n    warn({\n      code: \"PROJECT_ENTRY_POINT_RESOLUTION_FAILED\",\n      message: createDetailedMessage(entryPointResolutionFailureMessage, {\n        reason: `file not found for \"${exportSubpath}\" declared in package.json \"exports\"`,\n      }),\n    })\n    return null\n  }\n  return urlToRelativeUrl(subpathUrl, projectPackageFileUrl)\n}\n",
    "/* global __filename */\n\nconst filenameContainsBackSlashes = __filename.indexOf(\"\\\\\") > -1\n\nconst url = filenameContainsBackSlashes\n  ? `file:///${__filename.replace(/\\\\/g, \"/\")}`\n  : `file://${__filename}`\n\nexport default url\n",
    "import { createRequire } from \"node:module\"\nimport { parseAsync } from \"@babel/core\"\nimport { urlToFileSystemPath } from \"@jsenv/filesystem\"\n\nconst require = createRequire(import.meta.url)\n\nconst traverse = require(\"@babel/traverse\")\n\nexport const parseImportSpecifiers = async (\n  url,\n  { urlResponseText, babelOptions } = {},\n) => {\n  const ast = await parseAsync(urlResponseText, {\n    ...babelOptions,\n    sourceType: \"module\",\n    filename: url.startsWith(\"file://\") ? urlToFileSystemPath(url) : url,\n    plugins: babelOptions.plugins,\n    // ranges: true,\n    parserOpts: {\n      ranges: true,\n    },\n  })\n\n  const specifiers = {}\n\n  const addSpecifier = ({ path, type }) => {\n    const specifier = path.node.value\n    specifiers[specifier] = {\n      line: path.node.loc.start.line,\n      column: path.node.loc.start.column,\n      type,\n    }\n  }\n\n  traverse.default(ast, {\n    // \"ImportExpression is replaced with a CallExpression whose callee is an Import node.\"\n    // https://babeljs.io/docs/en/babel-parser#output\n    // ImportExpression: (path) => {\n    //   if (path.node.arguments[0].type !== \"StringLiteral\") {\n    //     // Non-string argument, probably a variable or expression, e.g.\n    //     // import(moduleId)\n    //     // import('./' + moduleName)\n    //     return\n    //   }\n    //   addSpecifier(path.get(\"arguments\")[0])\n    // },\n    CallExpression: (path) => {\n      if (path.node.callee.type !== \"Import\") {\n        // Some other function call, not import();\n        return\n      }\n      if (path.node.arguments[0].type !== \"StringLiteral\") {\n        // Non-string argument, probably a variable or expression, e.g.\n        // import(moduleId)\n        // import('./' + moduleName)\n        return\n      }\n      addSpecifier({\n        path: path.get(\"arguments\")[0],\n        type: \"import-dynamic\",\n      })\n    },\n    ExportAllDeclaration: (path) => {\n      addSpecifier({\n        path: path.get(\"source\"),\n        type: \"export-all\",\n      })\n    },\n    ExportNamedDeclaration: (path) => {\n      if (!path.node.source) {\n        // This export has no \"source\", so it's probably\n        // a local variable or function, e.g.\n        // export { varName }\n        // export const constName = ...\n        // export function funcName() {}\n        return\n      }\n      addSpecifier({\n        path: path.get(\"source\"),\n        type: \"export-named\",\n      })\n    },\n    ImportDeclaration: (path) => {\n      addSpecifier({\n        path: path.get(\"source\"),\n        type: \"import-static\",\n      })\n    },\n  })\n\n  return specifiers\n}\n",
    "// https://github.com/postcss/postcss/blob/fd30d3df5abc0954a0ec642a3cdc644ab2aacf9c/lib/css-syntax-error.js#L43\n// https://github.com/postcss/postcss/blob/fd30d3df5abc0954a0ec642a3cdc644ab2aacf9c/lib/terminal-highlight.js#L50\n// https://github.com/babel/babel/blob/eea156b2cb8deecfcf82d52aa1b71ba4995c7d68/packages/babel-code-frame/src/index.js#L1\n\nexport const showSource = ({ url, line, column, source }) => {\n  let message = \"\"\n\n  message += typeof url === \"undefined\" ? \"Anonymous\" : url\n  if (typeof line !== \"number\") {\n    return message\n  }\n\n  message += `:${line}`\n  if (typeof column === \"number\") {\n    message += `:${column}`\n  }\n\n  if (!source) {\n    return message\n  }\n\n  return `${message}\n${showSourceLocation(source, {\n  line,\n  column,\n})}`\n}\n\nconst red = \"\\x1b[31m\"\nconst grey = \"\\x1b[39m\"\nconst ansiResetSequence = \"\\x1b[0m\"\n\nconst showSourceLocation = (\n  source,\n  {\n    line,\n    column,\n    numberOfSurroundingLinesToShow = 1,\n    lineMaxLength = 120,\n    color = false,\n    markColor = red,\n    asideColor = grey,\n    colorMark = (string) => `${markColor}${string}${ansiResetSequence}`,\n    colorAside = (string) => `${asideColor}${string}${ansiResetSequence}`,\n  },\n) => {\n  const mark = color ? colorMark : (string) => string\n  const aside = color ? colorAside : (string) => string\n\n  const lines = source.split(/\\r?\\n/)\n  let lineRange = {\n    start: line - 1,\n    end: line,\n  }\n  lineRange = moveLineRangeUp(lineRange, numberOfSurroundingLinesToShow)\n  lineRange = moveLineRangeDown(lineRange, numberOfSurroundingLinesToShow)\n  lineRange = lineRangeWithinLines(lineRange, lines)\n  const linesToShow = lines.slice(lineRange.start, lineRange.end)\n  const endLineNumber = lineRange.end\n  const lineNumberMaxWidth = String(endLineNumber).length\n\n  const columnRange = {}\n  if (column === undefined) {\n    columnRange.start = 0\n    columnRange.end = lineMaxLength\n  } else if (column > lineMaxLength) {\n    columnRange.start = column - Math.floor(lineMaxLength / 2)\n    columnRange.end = column + Math.ceil(lineMaxLength / 2)\n  } else {\n    columnRange.start = 0\n    columnRange.end = lineMaxLength\n  }\n\n  return linesToShow.map((lineSource, index) => {\n    const lineNumber = lineRange.start + index + 1\n    const isMainLine = lineNumber === line\n    const lineSourceTruncated = applyColumnRange(columnRange, lineSource)\n    const lineNumberWidth = String(lineNumber).length\n    // ensure if line moves from 7,8,9 to 10 the display is still great\n    const lineNumberRightSpacing = \" \".repeat(\n      lineNumberMaxWidth - lineNumberWidth,\n    )\n    const asideSource = `${lineNumber}${lineNumberRightSpacing} |`\n    const lineFormatted = `${aside(asideSource)} ${lineSourceTruncated}`\n    if (isMainLine) {\n      if (column === undefined) {\n        return `${mark(\">\")} ${lineFormatted}`\n      }\n      const lineSourceUntilColumn = lineSourceTruncated.slice(\n        0,\n        column - columnRange.start,\n      )\n      const spacing = stringToSpaces(lineSourceUntilColumn)\n      const mainLineFormatted = `${mark(\">\")} ${lineFormatted}\n  ${\" \".repeat(lineNumberWidth)} ${aside(\"|\")}${spacing}${mark(\"^\")}`\n      return mainLineFormatted\n    }\n    return `  ${lineFormatted}`\n  }).join(`\n`)\n}\n\nconst applyColumnRange = ({ start, end }, line) => {\n  if (typeof start !== \"number\") {\n    throw new TypeError(`start must be a number, received ${start}`)\n  }\n  if (typeof end !== \"number\") {\n    throw new TypeError(`end must be a number, received ${end}`)\n  }\n  if (end < start) {\n    throw new Error(\n      `end must be greater than start, but ${end} is smaller than ${start}`,\n    )\n  }\n\n  const prefix = \"…\"\n  const suffix = \"…\"\n  const lastIndex = line.length\n\n  if (line.length === 0) {\n    // don't show any ellipsis if the line is empty\n    // because it's not truncated in that case\n    return \"\"\n  }\n\n  const startTruncated = start > 0\n  const endTruncated = lastIndex > end\n\n  let from = startTruncated ? start + prefix.length : start\n  let to = endTruncated ? end - suffix.length : end\n  if (to > lastIndex) to = lastIndex\n\n  if (start >= lastIndex || from === to) {\n    return \"\"\n  }\n\n  let result = \"\"\n  while (from < to) {\n    result += line[from]\n    from++\n  }\n\n  if (result.length === 0) {\n    return \"\"\n  }\n  if (startTruncated && endTruncated) {\n    return `${prefix}${result}${suffix}`\n  }\n  if (startTruncated) {\n    return `${prefix}${result}`\n  }\n  if (endTruncated) {\n    return `${result}${suffix}`\n  }\n  return result\n}\n\nconst stringToSpaces = (string) => string.replace(/[^\\t]/g, \" \")\n\n// const getLineRangeLength = ({ start, end }) => end - start\n\nconst moveLineRangeUp = ({ start, end }, number) => {\n  return {\n    start: start - number,\n    end,\n  }\n}\n\nconst moveLineRangeDown = ({ start, end }, number) => {\n  return {\n    start,\n    end: end + number,\n  }\n}\n\nconst lineRangeWithinLines = ({ start, end }, lines) => {\n  return {\n    start: start < 0 ? 0 : start,\n    end: end > lines.length ? lines.length : end,\n  }\n}\n",
    "import { loadOptionsAsync } from \"@babel/core\"\n\nimport {\n  resolveUrl,\n  readFile,\n  urlToExtension,\n  urlToRelativeUrl,\n  urlIsInsideOf,\n  urlToFileSystemPath,\n} from \"@jsenv/filesystem\"\nimport {\n  normalizeImportMap,\n  resolveImport,\n  composeTwoImportMaps,\n} from \"@jsenv/importmap\"\nimport { isSpecifierForNodeCoreModule } from \"@jsenv/importmap/src/isSpecifierForNodeCoreModule.js\"\n\nimport {\n  memoizeAsyncFunctionByUrl,\n  memoizeAsyncFunctionBySpecifierAndImporter,\n} from \"../memoizeAsyncFunction.js\"\n\nimport { parseImportSpecifiers } from \"./parseImportSpecifiers.js\"\nimport { showSource } from \"./showSource.js\"\nimport { resolveFile } from \"../resolveFile.js\"\nimport {\n  createBareSpecifierAutomappingMessage,\n  createExtensionLessAutomappingMessage,\n  createImportResolutionFailedWarning,\n} from \"../logs.js\"\n\nexport const visitSourceFiles = async ({\n  logger,\n  warn,\n  projectDirectoryUrl,\n  projectEntryPoint,\n  runtime,\n  importMap,\n  bareSpecifierAutomapping,\n  extensionlessAutomapping,\n  magicExtensions, //  = [\".js\", \".jsx\", \".ts\", \".tsx\", \".node\", \".json\"],\n  removeUnusedMappings,\n}) => {\n  const imports = {}\n  const scopes = {}\n  const addMapping = ({ scope, from, to }) => {\n    if (scope) {\n      scopes[scope] = {\n        ...(scopes[scope] || {}),\n        [from]: to,\n      }\n    } else {\n      imports[from] = to\n    }\n  }\n\n  const topLevelMappingsUsed = []\n  const scopedMappingsUsed = {}\n  const markMappingAsUsed = ({ scope, from, to }) => {\n    if (scope) {\n      if (scope in scopedMappingsUsed) {\n        scopedMappingsUsed[scope].push({ from, to })\n      } else {\n        scopedMappingsUsed[scope] = [{ from, to }]\n      }\n    } else {\n      topLevelMappingsUsed.push({ from, to })\n    }\n  }\n\n  const baseUrl =\n    runtime === \"browser\"\n      ? fileUrlToHttpUrl(projectDirectoryUrl, {\n          projectDirectoryUrl,\n          baseUrl: \"http://jsenv.com\",\n        })\n      : projectDirectoryUrl\n\n  // https://babeljs.io/docs/en/babel-core#loadoptions\n  const babelOptions = await loadOptionsAsync({\n    root: urlToFileSystemPath(projectDirectoryUrl),\n  })\n\n  const importResolver = createImportResolver({\n    logger,\n    warn,\n    runtime,\n    importMap,\n    projectDirectoryUrl,\n    baseUrl,\n    bareSpecifierAutomapping,\n    extensionlessAutomapping,\n    magicExtensions,\n    onImportMapping: ({ scope, from }) => {\n      if (scope) {\n        // make scope relative again\n        scope = `./${urlToRelativeUrl(scope, baseUrl)}`\n        // make from relative again\n        if (from.startsWith(baseUrl)) {\n          from = `./${urlToRelativeUrl(from, baseUrl)}`\n        }\n      }\n\n      markMappingAsUsed({\n        scope,\n        from,\n        to: scope ? importMap.scopes[scope][from] : importMap.imports[from],\n      })\n    },\n    performAutomapping: (automapping) => {\n      addMapping(automapping)\n      markMappingAsUsed(automapping)\n    },\n  })\n\n  const visitUrl = memoizeAsyncFunctionBySpecifierAndImporter(\n    async (specifier, importer, { importedBy }) => {\n      const { found, ignore, url, body } =\n        await importResolver.applyImportResolution({\n          specifier,\n          importer,\n          importedBy,\n        })\n\n      if (!found || ignore) {\n        return\n      }\n\n      if (!visitUrlResponse.isInMemory(url)) {\n        await visitUrlResponse(url, { body })\n      }\n    },\n  )\n\n  const visitUrlResponse = memoizeAsyncFunctionByUrl(async (url, { body }) => {\n    const specifiers = await parseImportSpecifiers(url, {\n      urlResponseText: body,\n      babelOptions,\n    })\n    const fileUrl =\n      httpUrlToFileUrl(url, { projectDirectoryUrl, baseUrl }) || url\n    await Promise.all(\n      Object.keys(specifiers).map(async (specifier) => {\n        const specifierInfo = specifiers[specifier]\n        await visitUrl(specifier, url, {\n          importedBy: showSource({\n            url: fileUrl,\n            line: specifierInfo.line,\n            column: specifierInfo.column,\n            source: body,\n          }),\n        })\n      }),\n    )\n  })\n\n  await visitUrl(`./${projectEntryPoint}`, baseUrl, {\n    importedBy: \"project package.json\",\n  })\n\n  if (removeUnusedMappings) {\n    const importsUsed = {}\n    topLevelMappingsUsed.forEach(({ from, to }) => {\n      importsUsed[from] = to\n    })\n    const scopesUsed = {}\n    Object.keys(scopedMappingsUsed).forEach((scope) => {\n      const mappingsUsed = scopedMappingsUsed[scope]\n      const scopedMappings = {}\n      mappingsUsed.forEach(({ from, to }) => {\n        scopedMappings[from] = to\n      })\n      scopesUsed[scope] = scopedMappings\n    })\n    return {\n      imports: importsUsed,\n      scopes: scopesUsed,\n    }\n  }\n\n  return composeTwoImportMaps(importMap, { imports, scopes })\n}\n\nconst createImportResolver = ({\n  logger,\n  warn,\n  runtime,\n  importMap,\n  baseUrl,\n  projectDirectoryUrl,\n  bareSpecifierAutomapping,\n  extensionlessAutomapping,\n  magicExtensions,\n  onImportMapping,\n  performAutomapping,\n}) => {\n  const importMapNormalized = normalizeImportMap(importMap, baseUrl)\n  const BARE_SPECIFIER_ERROR = {}\n\n  const applyImportResolution = async ({ specifier, importer, importedBy }) => {\n    if (runtime === \"node\" && isSpecifierForNodeCoreModule(specifier)) {\n      return {\n        found: true,\n        ignore: true,\n      }\n    }\n\n    const { gotBareSpecifierError, importUrl } = resolveImportUrl({\n      specifier,\n      importer,\n    })\n\n    const importFileUrl = httpUrlToFileUrl(importUrl, {\n      projectDirectoryUrl,\n      baseUrl,\n    })\n\n    if (importFileUrl) {\n      return handleFileUrl({\n        specifier,\n        importer,\n        importedBy,\n        gotBareSpecifierError,\n        importUrl: importFileUrl,\n      })\n    }\n\n    if (importUrl.startsWith(\"http:\") || importUrl.startsWith(\"https:\")) {\n      return handleHttpUrl()\n    }\n\n    return handleFileUrl({\n      specifier,\n      importer,\n      importedBy,\n      gotBareSpecifierError,\n      importUrl,\n    })\n  }\n\n  const resolveImportUrl = ({ specifier, importer }) => {\n    try {\n      const importUrl = resolveImport({\n        specifier,\n        importer,\n        importMap: importMapNormalized,\n        defaultExtension: false,\n        onImportMapping,\n        createBareSpecifierError: () => BARE_SPECIFIER_ERROR,\n      })\n\n      return {\n        gotBareSpecifierError: false,\n        importUrl,\n      }\n    } catch (e) {\n      return {\n        gotBareSpecifierError: true,\n        importUrl: resolveUrl(specifier, importer),\n      }\n    }\n  }\n\n  const handleHttpUrl = async () => {\n    // NICE TO HAVE: perform an http request and check for 404 and things like that\n    // the day we do the http request, this function would return both\n    // if the file is found and the file content\n    // because once http request is done we can await response body\n    // CURRENT BEHAVIOUR: consider http url as found without checking\n    return {\n      found: true,\n      ignore: true,\n      body: null,\n    }\n  }\n\n  const foundFileUrl = async (url) => {\n    const extension = urlToExtension(url)\n    const isJs = [\".js\", \".jsx\", \".ts\", \".tsx\", \".mjs\", \".cjs\"].includes(\n      extension,\n    )\n    const httpUrl = fileUrlToHttpUrl(url, { projectDirectoryUrl, baseUrl })\n\n    if (isJs) {\n      return {\n        found: true,\n        url: httpUrl || url,\n        body: await readFile(url, { as: \"string\" }),\n      }\n    }\n\n    return {\n      found: true,\n      ignore: true,\n      url: httpUrl || url,\n    }\n  }\n\n  const handleFileUrl = async ({\n    specifier,\n    importer,\n    importedBy,\n    gotBareSpecifierError,\n    importUrl,\n  }) => {\n    const { magicExtension, found, url } = await resolveFile(importUrl, {\n      magicExtensionEnabled: true,\n      magicExtensions: magicExtensionWithImporterExtension(\n        magicExtensions || [],\n        importer,\n      ),\n    })\n    const packageDirectoryUrl = packageDirectoryUrlFromUrl(\n      url,\n      projectDirectoryUrl,\n    )\n    const packageFileUrl = resolveUrl(\"package.json\", packageDirectoryUrl)\n    const scope =\n      packageDirectoryUrl === projectDirectoryUrl\n        ? undefined\n        : `./${urlToRelativeUrl(packageDirectoryUrl, projectDirectoryUrl)}`\n    const automapping = {\n      scope,\n      from: specifier,\n      to: `./${urlToRelativeUrl(url, projectDirectoryUrl)}`,\n    }\n    if (gotBareSpecifierError) {\n      if (!found) {\n        warn(\n          createImportResolutionFailedWarning({\n            specifier,\n            importedBy,\n            gotBareSpecifierError,\n            suggestsNodeRuntime:\n              runtime !== \"node\" && isSpecifierForNodeCoreModule(specifier),\n          }),\n        )\n        return { found: false }\n      }\n      if (!bareSpecifierAutomapping) {\n        warn(\n          createImportResolutionFailedWarning({\n            specifier,\n            importedBy,\n            gotBareSpecifierError,\n            automapping,\n          }),\n        )\n        return { found: false }\n      }\n      logger.debug(\n        createBareSpecifierAutomappingMessage({\n          specifier,\n          importedBy,\n          automapping,\n        }),\n      )\n      performAutomapping(automapping)\n      return foundFileUrl(url)\n    }\n    if (!found) {\n      warn(\n        createImportResolutionFailedWarning({\n          specifier,\n          importedBy,\n        }),\n      )\n      return { found: false }\n    }\n    if (magicExtension) {\n      if (!extensionlessAutomapping) {\n        const mappingFoundInPackageExports =\n          await extensionIsMappedInPackageExports(packageFileUrl)\n        if (!mappingFoundInPackageExports) {\n          warn(\n            createImportResolutionFailedWarning({\n              specifier,\n              importedBy,\n              magicExtension,\n              automapping,\n            }),\n          )\n          return { found: false }\n        }\n        logger.debug(\n          createExtensionLessAutomappingMessage({\n            specifier,\n            importedBy,\n            automapping,\n            mappingFoundInPackageExports,\n          }),\n        )\n        performAutomapping(automapping)\n        return foundFileUrl(url)\n      }\n      logger.debug(\n        createExtensionLessAutomappingMessage({\n          specifier,\n          importedBy,\n          automapping,\n        }),\n      )\n      performAutomapping(automapping)\n      return foundFileUrl(url)\n    }\n    return foundFileUrl(url)\n  }\n\n  return { applyImportResolution }\n}\n\nconst fileUrlToHttpUrl = (url, { projectDirectoryUrl, baseUrl }) =>\n  moveUrl({ url, from: projectDirectoryUrl, to: baseUrl })\n\nconst httpUrlToFileUrl = (url, { projectDirectoryUrl, baseUrl }) =>\n  moveUrl({ url, from: baseUrl, to: projectDirectoryUrl })\n\nconst moveUrl = ({ url, from, to }) => {\n  if (urlIsInsideOf(url, from)) {\n    const relativeUrl = urlToRelativeUrl(url, from)\n    return resolveUrl(relativeUrl, to)\n  }\n  if (url === from) {\n    return to\n  }\n  return null\n}\n\nconst extensionIsMappedInPackageExports = async (packageFileUrl) => {\n  const closestPackageObject = await readFile(packageFileUrl, {\n    as: \"json\",\n  })\n  // it's imprecise because we are not ensuring the wildcard correspond\n  // to the required mapping, but good enough for now\n  const containsWildcard = Object.keys(closestPackageObject.exports || {}).some(\n    (key) => key.includes(\"*\"),\n  )\n  return containsWildcard\n}\n\nconst packageDirectoryUrlFromUrl = (url, projectDirectoryUrl) => {\n  const relativeUrl = urlToRelativeUrl(url, projectDirectoryUrl)\n\n  const lastNodeModulesDirectoryStartIndex =\n    relativeUrl.lastIndexOf(\"node_modules/\")\n  if (lastNodeModulesDirectoryStartIndex === -1) {\n    return projectDirectoryUrl\n  }\n\n  const lastNodeModulesDirectoryEndIndex =\n    lastNodeModulesDirectoryStartIndex + `node_modules/`.length\n\n  const beforeNodeModulesLastDirectory = relativeUrl.slice(\n    0,\n    lastNodeModulesDirectoryEndIndex,\n  )\n  const afterLastNodeModulesDirectory = relativeUrl.slice(\n    lastNodeModulesDirectoryEndIndex,\n  )\n  const remainingDirectories = afterLastNodeModulesDirectory.split(\"/\")\n\n  if (afterLastNodeModulesDirectory[0] === \"@\") {\n    // scoped package\n    return `${projectDirectoryUrl}${beforeNodeModulesLastDirectory}${remainingDirectories\n      .slice(0, 2)\n      .join(\"/\")}`\n  }\n  return `${projectDirectoryUrl}${beforeNodeModulesLastDirectory}${remainingDirectories[0]}/`\n}\n\nconst magicExtensionWithImporterExtension = (magicExtensions, importer) => {\n  const importerExtension = urlToExtension(importer)\n  const magicExtensionsWithoutImporterExtension = magicExtensions.filter(\n    (ext) => ext !== importerExtension,\n  )\n  return [importerExtension, ...magicExtensionsWithoutImporterExtension]\n}\n",
    "export const importMapToVsCodeConfigPaths = ({ imports = {} }) => {\n  const paths = {}\n\n  Object.keys(imports).forEach((importKey) => {\n    const importValue = imports[importKey]\n\n    let key\n    if (importKey.endsWith(\"/\")) {\n      key = `${importKey}*`\n    } else {\n      key = importKey\n    }\n\n    const importValueArray =\n      typeof importValue === \"string\" ? [importValue] : importValue\n    const candidatesForPath = importValueArray.map((importValue) => {\n      if (importValue.endsWith(\"/\")) {\n        return `${importValue}*`\n      }\n      return importValue\n    })\n\n    if (key in paths) {\n      paths[key] = [...paths[key], ...candidatesForPath]\n    } else {\n      paths[key] = candidatesForPath\n    }\n  })\n\n  return paths\n}\n",
    "import { createLogger } from \"@jsenv/logger\"\nimport {\n  assertAndNormalizeDirectoryUrl,\n  writeFile,\n  resolveUrl,\n  readFile,\n  urlToFileSystemPath,\n} from \"@jsenv/filesystem\"\nimport { sortImportMap } from \"@jsenv/importmap\"\n\nimport { assertInitialImportMap } from \"./internal/assertInitialImportMap.js\"\nimport { packageConditionsFromPackageUserConditions } from \"./internal/package_conditions.js\"\nimport { visitNodeModuleResolution } from \"./internal/from-package/visitNodeModuleResolution.js\"\nimport { optimizeImportMap } from \"./internal/optimizeImportMap.js\"\nimport { resolveProjectEntryPoint } from \"./internal/from-js/resolveProjectEntryPoint.js\"\nimport { visitSourceFiles } from \"./internal/from-js/visitSourceFiles.js\"\nimport { importMapToVsCodeConfigPaths } from \"./internal/importMapToVsCodeConfigPaths.js\"\n\nexport const writeImportMapFiles = async ({\n  logLevel,\n  projectDirectoryUrl,\n  importMapFiles,\n  packagesManualOverrides,\n  onWarn = (warning, warn) => {\n    warn(warning)\n  },\n  writeFiles = true,\n  exportsFieldWarningConfig,\n  // for unit test\n  jsConfigFileUrl,\n}) => {\n  const logger = createLogger({ logLevel })\n  const warn = wrapWarnToWarnOnce((warning) => {\n    onWarn(warning, () => {\n      logger.warn(`\\n${warning.message}\\n`)\n    })\n  })\n\n  projectDirectoryUrl = assertAndNormalizeDirectoryUrl(projectDirectoryUrl)\n\n  if (typeof importMapFiles !== \"object\" || importMapFiles === null) {\n    throw new TypeError(\n      `importMapFiles must be an object, received ${importMapFiles}`,\n    )\n  }\n  const importMapFileRelativeUrls = Object.keys(importMapFiles)\n  const importMapFileCount = importMapFileRelativeUrls.length\n  if (importMapFileCount.length) {\n    throw new Error(`importMapFiles object is empty`)\n  }\n\n  const importMaps = {}\n  const nodeResolutionVisitors = []\n  importMapFileRelativeUrls.forEach((importMapFileRelativeUrl) => {\n    const importMapConfig = importMapFiles[importMapFileRelativeUrl]\n\n    const { initialImportMap = {} } = importMapConfig\n    assertInitialImportMap(initialImportMap)\n    const topLevelMappings = initialImportMap.imports || {}\n    const scopedMappings = initialImportMap.scopes || {}\n    const importMap = {\n      imports: topLevelMappings,\n      scopes: scopedMappings,\n    }\n    importMaps[importMapFileRelativeUrl] = importMap\n\n    const {\n      mappingsForNodeResolution,\n      mappingsForDevDependencies,\n      packageUserConditions,\n      packageIncludedPredicate,\n      runtime = \"browser\",\n    } = importMapConfig\n    if (mappingsForNodeResolution) {\n      nodeResolutionVisitors.push({\n        mappingsForDevDependencies,\n        packageConditions: packageConditionsFromPackageUserConditions({\n          runtime,\n          packageUserConditions,\n        }),\n        packageIncludedPredicate,\n        onMapping: ({ scope, from, to }) => {\n          if (scope) {\n            scopedMappings[scope] = {\n              ...(scopedMappings[scope] || {}),\n              [from]: to,\n            }\n          } else {\n            topLevelMappings[from] = to\n          }\n        },\n      })\n    }\n  })\n\n  if (nodeResolutionVisitors.length > 0) {\n    await visitNodeModuleResolution({\n      logger,\n      warn,\n      projectDirectoryUrl,\n      visitors: nodeResolutionVisitors,\n      packagesManualOverrides,\n      exportsFieldWarningConfig,\n    })\n  }\n\n  await importMapFileRelativeUrls.reduce(\n    async (previous, importMapFileRelativeUrl) => {\n      const importMapConfig = importMapFiles[importMapFileRelativeUrl]\n      const {\n        checkImportResolution,\n        // ideally we could enable extensionlessAutomapping and bareSpecifierAutomappingonly for a subset\n        // of files. Not that hard to do, especially using @jsenv/url-meta\n        // but that's super extra fine tuning that I don't have time/energy to do for now\n        bareSpecifierAutomapping,\n        extensionlessAutomapping,\n        magicExtensions,\n        removeUnusedMappings,\n        packageUserConditions,\n        runtime = \"browser\",\n      } = importMapConfig\n\n      if (\n        checkImportResolution ||\n        bareSpecifierAutomapping ||\n        extensionlessAutomapping ||\n        removeUnusedMappings\n      ) {\n        if (checkImportResolution === false) {\n          logger.warn(\n            `\"checkImportResolution\" cannot be disabled when automapping or \"removeUnusedMappings\" are enabled`,\n          )\n        }\n        if (extensionlessAutomapping && !magicExtensions) {\n          logger.warn(\n            `\"magicExtensions\" is required when \"extensionlessAutomapping\" is enabled`,\n          )\n        }\n\n        const projectEntryPoint = await resolveProjectEntryPoint({\n          warn,\n          projectDirectoryUrl,\n          packageUserConditions,\n          runtime,\n        })\n\n        if (projectEntryPoint) {\n          const importMap = await visitSourceFiles({\n            logger,\n            warn,\n            projectDirectoryUrl,\n            projectEntryPoint,\n            importMap: importMaps[importMapFileRelativeUrl],\n            bareSpecifierAutomapping,\n            extensionlessAutomapping,\n            magicExtensions,\n            removeUnusedMappings,\n            runtime,\n          })\n          importMaps[importMapFileRelativeUrl] = importMap\n        }\n      }\n    },\n    Promise.resolve(),\n  )\n\n  Object.keys(importMaps).forEach((key) => {\n    const importMap = importMaps[key]\n    const importMapNormalized = sortImportMap(optimizeImportMap(importMap))\n    importMaps[key] = importMapNormalized\n  })\n\n  if (writeFiles) {\n    await importMapFileRelativeUrls.reduce(\n      async (previous, importMapFileRelativeUrl) => {\n        await previous\n        const importmapFileUrl = resolveUrl(\n          importMapFileRelativeUrl,\n          projectDirectoryUrl,\n        )\n        const importMap = importMaps[importMapFileRelativeUrl]\n        await writeFile(importmapFileUrl, JSON.stringify(importMap, null, \"  \"))\n        logger.info(`-> ${urlToFileSystemPath(importmapFileUrl)}`)\n      },\n      Promise.resolve(),\n    )\n  }\n\n  const firstUpdatingJsConfig = importMapFileRelativeUrls.find(\n    (importMapFileRelativeUrl) => {\n      const importMapFileConfig = importMapFiles[importMapFileRelativeUrl]\n      return importMapFileConfig.useForJsConfigJSON\n    },\n  )\n  if (firstUpdatingJsConfig) {\n    jsConfigFileUrl =\n      jsConfigFileUrl || resolveUrl(\"./jsconfig.json\", projectDirectoryUrl)\n    const jsConfigCurrent = (await readCurrentJsConfig(jsConfigFileUrl)) || {\n      compilerOptions: {},\n    }\n    const importMapUsedForVsCode = importMaps[firstUpdatingJsConfig]\n    const jsConfigPaths = importMapToVsCodeConfigPaths(importMapUsedForVsCode)\n    const jsConfig = {\n      ...jsConfigDefault,\n      ...jsConfigCurrent,\n      compilerOptions: {\n        ...jsConfigDefault.compilerOptions,\n        ...jsConfigCurrent.compilerOptions,\n        // importmap is the source of truth -> paths are overwritten\n        // We coudldn't differentiate which one we created and which one where added manually anyway\n        paths: jsConfigPaths,\n      },\n    }\n    await writeFile(jsConfigFileUrl, JSON.stringify(jsConfig, null, \"  \"))\n    logger.info(`-> ${urlToFileSystemPath(jsConfigFileUrl)}`)\n  }\n\n  return importMaps\n}\n\nconst wrapWarnToWarnOnce = (warn) => {\n  const warnings = []\n  return (warning) => {\n    const alreadyWarned = warnings.some((warningCandidate) => {\n      return JSON.stringify(warningCandidate) === JSON.stringify(warning)\n    })\n    if (alreadyWarned) {\n      return\n    }\n\n    if (warnings.length > 1000) {\n      warnings.shift()\n    }\n    warnings.push(warning)\n    warn(warning)\n  }\n}\n\nconst jsConfigDefault = {\n  compilerOptions: {\n    baseUrl: \".\",\n    paths: {},\n  },\n}\n\nconst readCurrentJsConfig = async (jsConfigFileUrl) => {\n  try {\n    const currentJSConfig = await readFile(jsConfigFileUrl, { as: \"json\" })\n    return currentJSConfig\n  } catch (e) {\n    return null\n  }\n}\n"
  ],
  "names": [
    "assertInitialImportMap",
    "value",
    "TypeError",
    "type",
    "imports",
    "scopes",
    "rest",
    "extraKeys",
    "Object",
    "keys",
    "length",
    "packageConditionsFromPackageUserConditions",
    "runtime",
    "packageUserConditions",
    "Array",
    "isArray",
    "forEach",
    "userCondition",
    "createPreferExportsFieldWarning",
    "packageInfo",
    "packageEntryFieldName",
    "packageName",
    "object",
    "name",
    "packageEntrySpecifier",
    "code",
    "message",
    "createDetailedMessage",
    "urlToFileSystemPath",
    "url",
    "getCreatePullRequestSuggestion",
    "repositoryUrl",
    "getRepositoryUrl",
    "repository",
    "undefined",
    "createPackageNameMustBeAStringWarning",
    "createImportResolutionFailedWarning",
    "specifier",
    "importedBy",
    "gotBareSpecifierError",
    "magicExtension",
    "suggestsNodeRuntime",
    "automapping",
    "getImportResolutionFailedSuggestions",
    "createBareSpecifierAutomappingMessage",
    "mappingToImportmapString",
    "createExtensionLessAutomappingMessage",
    "mappingFoundInPackageExports",
    "suggestions",
    "addSuggestion",
    "suggestion",
    "suggestionCount",
    "mappingToUrlRelativeToFile",
    "mapping",
    "scope",
    "to",
    "scopeUrl",
    "resolveUrl",
    "toUrl",
    "urlToRelativeUrl",
    "from",
    "JSON",
    "stringify",
    "resolveFile",
    "fileUrl",
    "magicDirectoryIndexEnabled",
    "magicExtensionEnabled",
    "magicExtensions",
    "fileStat",
    "readFileSystemNodeStat",
    "nullIfNotFound",
    "isFile",
    "found",
    "isDirectory",
    "indexFileSuffix",
    "endsWith",
    "indexFileUrl",
    "result",
    "magicDirectoryIndex",
    "extension",
    "urlToExtension",
    "extensionLeadingToAFile",
    "findExtensionLeadingToFile",
    "urlDirectoryUrl",
    "urlFilename",
    "urlToFilename",
    "extensionLeadingToFile",
    "firstOperationMatching",
    "array",
    "start",
    "extensionCandidate",
    "urlCandidate",
    "stats",
    "predicate",
    "Boolean",
    "resolvePackageMain",
    "packageConditions",
    "packageDirectoryUrl",
    "decidePackageEntryFieldName",
    "tryToResolvePackageEntryFile",
    "includes",
    "packageModule",
    "module",
    "packageJsNextMain",
    "relativeUrlToTry",
    "urlFirstCandidate",
    "startsWith",
    "warning",
    "createPackageEntryMustBeRelativeWarning",
    "createPackageEntryNotFoundWarning",
    "relativeUrl",
    "join",
    "visitPackageImportMap",
    "warn",
    "packageImportmap",
    "importmap",
    "projectDirectoryUrl",
    "importmapFileUrl",
    "readFile",
    "as",
    "moveImportMap",
    "e",
    "createPackageImportMapNotFoundWarning",
    "createPackageImportMapUnexpectedWarning",
    "specifierIsRelative",
    "test",
    "visitPackageImports",
    "packageImports",
    "importsSubpaths",
    "onImportsSubpath",
    "key",
    "trace",
    "createSubpathValueMustBeRelativeWarning",
    "valueTrace",
    "keyNormalized",
    "valueNormalized",
    "visitSubpathValue",
    "subpathValue",
    "subpathValueTrace",
    "handleString",
    "handleObject",
    "handleRemaining",
    "firstBareKey",
    "slice",
    "reverse",
    "find",
    "followConditionBranch",
    "conditionTrace",
    "bareKeys",
    "conditionalKeys",
    "availableKey",
    "push",
    "createSubpathKeysAreMixedWarning",
    "leadsToSomething",
    "some",
    "keyCandidate",
    "valueCandidate",
    "createSubpathIsUnexpectedWarning",
    "visitPackageExports",
    "packageExports",
    "exports",
    "exportsSubpaths",
    "packageDirectoryRelativeUrl",
    "onExportsSubpath",
    "specifierToSource",
    "addressToDestination",
    "handleFalse",
    "handleNull",
    "firstRelativeKey",
    "relativeKeys",
    "exportsObjectFromExportsArray",
    "exportsArray",
    "exportsObject",
    "exportValue",
    "assign",
    "default",
    "address",
    "memoizeAsyncFunctionByUrl",
    "fn",
    "cache",
    "memoizeAsyncFunction",
    "getMemoryEntryFromArguments",
    "get",
    "set",
    "promise",
    "delete",
    "memoizeAsyncFunctionBySpecifierAndImporter",
    "importerCache",
    "importer",
    "specifierCacheForImporter",
    "memoized",
    "args",
    "memoryEntry",
    "promiseFromMemory",
    "resolve",
    "reject",
    "createControllablePromise",
    "error",
    "isInMemory",
    "Promise",
    "res",
    "rej",
    "PACKAGE_NOT_FOUND",
    "PACKAGE_WITH_SYNTAX_ERROR",
    "readPackageFile",
    "packageFileUrl",
    "packageObject",
    "console",
    "formatPackageSyntaxErrorLog",
    "syntaxError",
    "applyPackageManualOverride",
    "packagesManualOverrides",
    "version",
    "overrideKey",
    "overrideKeyCandidate",
    "composeObject",
    "leftObject",
    "rightObject",
    "composedObject",
    "rightValue",
    "leftValue",
    "createFindNodeModulePackage",
    "readPackageFileMemoized",
    "dependencyName",
    "nodeModuleCandidates",
    "getNodeModuleCandidates",
    "nodeModuleCandidate",
    "packageFileUrlCandidate",
    "packageObjectCandidate",
    "packageJsonObject",
    "fileDirectoryUrl",
    "fileDirectoryRelativeUrl",
    "candidates",
    "relativeNodeModuleDirectoryArray",
    "split",
    "shift",
    "i",
    "visitNodeModuleResolution",
    "logger",
    "visitors",
    "exportsFieldWarningConfig",
    "projectPackageFileUrl",
    "findNodeModulePackage",
    "seen",
    "markPackageAsSeen",
    "importerPackageFileUrl",
    "packageIsSeen",
    "visit",
    "packageVisitors",
    "packageImporterInfo",
    "isDevDependency",
    "filter",
    "visitor",
    "packageIncludedPredicate",
    "visitDependencies",
    "visitPackage",
    "dependencyMap",
    "packageDependenciesFromPackageObject",
    "all",
    "map",
    "dependencyInfo",
    "visitorsForDevDependencies",
    "mappingsForDevDependencies",
    "visitDependency",
    "dependencyData",
    "findDependency",
    "cannotFindPackageWarning",
    "createCannotFindPackageWarning",
    "isOptional",
    "debug",
    "dependencyPackageFileUrl",
    "dependencyPackageJsonObject",
    "packageDerivedInfo",
    "computePackageDerivedInfo",
    "addImportMapForPackage",
    "importMap",
    "packageIsRoot",
    "triggerVisitorOnMapping",
    "scopeMappings",
    "toMoved",
    "moveMappingValue",
    "scopeMoved",
    "addMappingsForPackageAndImporter",
    "mappings",
    "importerIsRoot",
    "importerRelativeUrl",
    "importsFromPackageField",
    "mappingsFromPackageImports",
    "mappingsFromPackageExports",
    "indexOf",
    "fromWithouTrailingStar",
    "toWithoutTrailingStar",
    "createExportsWildcardIgnoredWarning",
    "visitPackageMain",
    "packageDirectoryUrlExpected",
    "reduce",
    "previous",
    "mainResolutionInfo",
    "shouldWarn",
    "shouldWarnAboutExportsField",
    "exportsFieldMessage",
    "main",
    "mainFileRelativeUrl",
    "dependenciesCache",
    "dependencyPromise",
    "projectPackageObject",
    "Error",
    "lastIndexOf",
    "onMapping",
    "packageDependencies",
    "dependencies",
    "optionalDependencies",
    "versionPattern",
    "peerDependencies",
    "peerDependenciesMeta",
    "optional",
    "devDependencies",
    "hasOwnProperty",
    "importerPackageDirectoryUrl",
    "dependencyIsOptional",
    "dependencyType",
    "dependencyVersionPattern",
    "optimizeImportMap",
    "scopesOptimized",
    "scopeMappingsOptimized",
    "mappingKey",
    "topLevelMappingValue",
    "mappingValue",
    "entryPointResolutionFailureMessage",
    "resolveProjectEntryPoint",
    "projectPackageName",
    "projectPackageInfo",
    "reason",
    "tryExportSubpath",
    "exportSubpath",
    "packageSubpaths",
    "subpathKey",
    "packageMainResolutionInfo",
    "subpathUrl",
    "filesystemStat",
    "filenameContainsBackSlashes",
    "__filename",
    "replace",
    "require",
    "createRequire",
    "traverse",
    "parseImportSpecifiers",
    "urlResponseText",
    "babelOptions",
    "ast",
    "parseAsync",
    "sourceType",
    "filename",
    "plugins",
    "parserOpts",
    "ranges",
    "specifiers",
    "addSpecifier",
    "path",
    "node",
    "line",
    "loc",
    "column",
    "CallExpression",
    "callee",
    "arguments",
    "ExportAllDeclaration",
    "ExportNamedDeclaration",
    "source",
    "ImportDeclaration",
    "showSource",
    "showSourceLocation",
    "red",
    "grey",
    "ansiResetSequence",
    "numberOfSurroundingLinesToShow",
    "lineMaxLength",
    "color",
    "markColor",
    "asideColor",
    "colorMark",
    "string",
    "colorAside",
    "mark",
    "aside",
    "lines",
    "lineRange",
    "end",
    "moveLineRangeUp",
    "moveLineRangeDown",
    "lineRangeWithinLines",
    "linesToShow",
    "endLineNumber",
    "lineNumberMaxWidth",
    "String",
    "columnRange",
    "Math",
    "floor",
    "ceil",
    "lineSource",
    "index",
    "lineNumber",
    "isMainLine",
    "lineSourceTruncated",
    "applyColumnRange",
    "lineNumberWidth",
    "lineNumberRightSpacing",
    "repeat",
    "asideSource",
    "lineFormatted",
    "lineSourceUntilColumn",
    "spacing",
    "stringToSpaces",
    "mainLineFormatted",
    "prefix",
    "suffix",
    "lastIndex",
    "startTruncated",
    "endTruncated",
    "number",
    "visitSourceFiles",
    "projectEntryPoint",
    "bareSpecifierAutomapping",
    "extensionlessAutomapping",
    "removeUnusedMappings",
    "addMapping",
    "topLevelMappingsUsed",
    "scopedMappingsUsed",
    "markMappingAsUsed",
    "baseUrl",
    "fileUrlToHttpUrl",
    "loadOptionsAsync",
    "root",
    "importResolver",
    "createImportResolver",
    "onImportMapping",
    "performAutomapping",
    "visitUrl",
    "ignore",
    "body",
    "applyImportResolution",
    "visitUrlResponse",
    "httpUrlToFileUrl",
    "specifierInfo",
    "importsUsed",
    "scopesUsed",
    "mappingsUsed",
    "scopedMappings",
    "composeTwoImportMaps",
    "importMapNormalized",
    "normalizeImportMap",
    "BARE_SPECIFIER_ERROR",
    "isSpecifierForNodeCoreModule",
    "importUrl",
    "resolveImportUrl",
    "importFileUrl",
    "handleFileUrl",
    "handleHttpUrl",
    "resolveImport",
    "defaultExtension",
    "createBareSpecifierError",
    "foundFileUrl",
    "isJs",
    "httpUrl",
    "magicExtensionWithImporterExtension",
    "packageDirectoryUrlFromUrl",
    "extensionIsMappedInPackageExports",
    "moveUrl",
    "urlIsInsideOf",
    "closestPackageObject",
    "containsWildcard",
    "lastNodeModulesDirectoryStartIndex",
    "lastNodeModulesDirectoryEndIndex",
    "beforeNodeModulesLastDirectory",
    "afterLastNodeModulesDirectory",
    "remainingDirectories",
    "importerExtension",
    "magicExtensionsWithoutImporterExtension",
    "ext",
    "importMapToVsCodeConfigPaths",
    "paths",
    "importKey",
    "importValue",
    "importValueArray",
    "candidatesForPath",
    "writeImportMapFiles",
    "logLevel",
    "importMapFiles",
    "onWarn",
    "writeFiles",
    "jsConfigFileUrl",
    "createLogger",
    "wrapWarnToWarnOnce",
    "assertAndNormalizeDirectoryUrl",
    "importMapFileRelativeUrls",
    "importMapFileCount",
    "importMaps",
    "nodeResolutionVisitors",
    "importMapFileRelativeUrl",
    "importMapConfig",
    "initialImportMap",
    "topLevelMappings",
    "mappingsForNodeResolution",
    "checkImportResolution",
    "sortImportMap",
    "writeFile",
    "info",
    "firstUpdatingJsConfig",
    "importMapFileConfig",
    "useForJsConfigJSON",
    "jsConfigCurrent",
    "readCurrentJsConfig",
    "compilerOptions",
    "importMapUsedForVsCode",
    "jsConfigPaths",
    "jsConfig",
    "jsConfigDefault",
    "warnings",
    "alreadyWarned",
    "warningCandidate",
    "currentJSConfig"
  ],
  "mappings": "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"
}