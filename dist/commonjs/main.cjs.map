{
  "version": 3,
  "file": "main.cjs",
  "sources": [
    "../../src/internal/memoizeAsyncFunction.js",
    "../../node_modules/@jsenv/core/helpers/import-meta/import-meta-url-commonjs.js",
    "../../src/internal/from-js/parseSpecifiersFromFile.js",
    "../../src/internal/from-js/showSource.js",
    "../../src/internal/resolveFile.js",
    "../../src/internal/from-js/getImportMapFromJsFiles.js",
    "../../src/internal/optimizeImportMap.js",
    "../../src/internal/from-package/resolvePackageMain.js",
    "../../src/internal/from-package/visitPackageImportMap.js",
    "../../src/internal/from-package/specifierIsRelative.js",
    "../../src/internal/from-package/visitPackageExports.js",
    "../../src/internal/from-package/applyPackageManualOverride.js",
    "../../src/internal/from-package/readPackageFile.js",
    "../../src/internal/from-package/node-module-resolution.js",
    "../../src/internal/from-package/getImportMapFromPackageFiles.js",
    "../../src/getImportMapFromProjectFiles.js",
    "../../src/getImportMapFromFile.js",
    "../../src/internal/importMapToVsCodeConfigPaths.js",
    "../../src/writeImportMapFile.js"
  ],
  "sourcesContent": [
    "export const memoizeAsyncFunctionByUrl = (fn) => {\n  const cache = {}\n  return memoizeAsyncFunction(fn, {\n    getMemoryEntryFromArguments: ([url]) => {\n      return {\n        get: () => {\n          return cache[url]\n        },\n        set: (promise) => {\n          cache[url] = promise\n        },\n        delete: () => {\n          delete cache[url]\n        },\n      }\n    },\n  })\n}\n\nexport const memoizeAsyncFunctionBySpecifierAndImporter = (fn) => {\n  const importerCache = {}\n  return memoizeAsyncFunction(fn, {\n    getMemoryEntryFromArguments: ([specifier, importer]) => {\n      return {\n        get: () => {\n          const specifierCacheForImporter = importerCache[importer]\n          return specifierCacheForImporter ? specifierCacheForImporter[specifier] : null\n        },\n        set: (promise) => {\n          const specifierCacheForImporter = importerCache[importer]\n          if (specifierCacheForImporter) {\n            specifierCacheForImporter[specifier] = promise\n          } else {\n            importerCache[importer] = {\n              [specifier]: promise,\n            }\n          }\n        },\n        delete: () => {\n          const specifierCacheForImporter = importerCache[importer]\n          if (specifierCacheForImporter) {\n            delete specifierCacheForImporter[specifier]\n          }\n        },\n      }\n    },\n  })\n}\n\nconst memoizeAsyncFunction = (fn, { getMemoryEntryFromArguments }) => {\n  const memoized = async (...args) => {\n    const memoryEntry = getMemoryEntryFromArguments(args)\n    const promiseFromMemory = memoryEntry.get()\n    if (promiseFromMemory) {\n      return promiseFromMemory\n    }\n    const { promise, resolve, reject } = createControllablePromise()\n    memoryEntry.set(promise)\n    let value\n    let error\n    try {\n      value = fn(...args)\n      error = false\n    } catch (e) {\n      value = e\n      error = true\n      memoryEntry.delete()\n    }\n    if (error) {\n      reject(error)\n    } else {\n      resolve(value)\n    }\n    return promise\n  }\n  memoized.isInMemory = (...args) => {\n    return Boolean(getMemoryEntryFromArguments(args).get())\n  }\n  return memoized\n}\n\nconst createControllablePromise = () => {\n  let resolve\n  let reject\n  const promise = new Promise((res, rej) => {\n    resolve = res\n    reject = rej\n  })\n  return { promise, resolve, reject }\n}\n",
    "/* global __filename */\n\nconst filenameContainsBackSlashes = __filename.indexOf(\"\\\\\") > -1\n\nconst url = filenameContainsBackSlashes\n  ? `file:///${__filename.replace(/\\\\/g, \"/\")}`\n  : `file://${__filename}`\n\nexport default url\n",
    "import { createRequire } from \"module\"\nimport { readFile, urlToFileSystemPath } from \"@jsenv/util\"\n\nconst require = createRequire(import.meta.url)\n\nconst parser = require(\"@babel/parser\")\nconst traverse = require(\"@babel/traverse\")\n\nexport const parseSpecifiersFromFile = async (\n  fileUrl,\n  {\n    fileContent,\n    sourceType = \"module\",\n    allowImportExportEverywhere = true,\n    allowAwaitOutsideFunction = true,\n    ranges = true,\n    jsx = true,\n    typescript = fileUrl.endsWith(\".ts\") || fileUrl.endsWith(\".tsx\"),\n    flow = false,\n    ...options\n  } = {},\n) => {\n  fileContent = fileContent === undefined ? await readFile(fileUrl, { as: \"string\" }) : fileContent\n\n  const ast = parser.parse(fileContent, {\n    sourceType,\n    sourceFilename: urlToFileSystemPath(fileUrl),\n    allowImportExportEverywhere,\n    allowAwaitOutsideFunction,\n    ranges,\n    plugins: [\n      // \"estree\",\n      \"topLevelAwait\",\n      \"exportDefaultFrom\",\n      ...(jsx ? [\"jsx\"] : []),\n      ...(typescript ? [\"typescript\"] : []),\n      ...(flow ? [\"flow\"] : []),\n    ],\n    ...options,\n  })\n\n  const specifiers = {}\n\n  const addSpecifier = ({ path, type }) => {\n    const specifier = path.node.value\n    specifiers[specifier] = {\n      line: path.node.loc.start.line,\n      column: path.node.loc.start.column,\n      type,\n    }\n  }\n\n  traverse.default(ast, {\n    // ImportExpression: (path) => {\n    //   if (path.node.arguments[0].type !== \"StringLiteral\") {\n    //     // Non-string argument, probably a variable or expression, e.g.\n    //     // import(moduleId)\n    //     // import('./' + moduleName)\n    //     return\n    //   }\n    //   addSpecifier(path.get(\"arguments\")[0])\n    // },\n    CallExpression: (path) => {\n      if (path.node.callee.type !== \"Import\") {\n        // Some other function call, not import();\n        return\n      }\n      if (path.node.arguments[0].type !== \"StringLiteral\") {\n        // Non-string argument, probably a variable or expression, e.g.\n        // import(moduleId)\n        // import('./' + moduleName)\n        return\n      }\n      addSpecifier({\n        path: path.get(\"arguments\")[0],\n        type: \"import-dynamic\",\n      })\n    },\n    ExportAllDeclaration: (path) => {\n      addSpecifier({\n        path: path.get(\"source\"),\n        type: \"export-all\",\n      })\n    },\n    ExportNamedDeclaration: (path) => {\n      if (!path.node.source) {\n        // This export has no \"source\", so it's probably\n        // a local variable or function, e.g.\n        // export { varName }\n        // export const constName = ...\n        // export function funcName() {}\n        return\n      }\n      addSpecifier({\n        path: path.get(\"source\"),\n        type: \"export-named\",\n      })\n    },\n    ImportDeclaration: (path) => {\n      addSpecifier({\n        path: path.get(\"source\"),\n        type: \"import-static\",\n      })\n    },\n  })\n\n  return specifiers\n}\n",
    "// https://github.com/postcss/postcss/blob/fd30d3df5abc0954a0ec642a3cdc644ab2aacf9c/lib/css-syntax-error.js#L43\n// https://github.com/postcss/postcss/blob/fd30d3df5abc0954a0ec642a3cdc644ab2aacf9c/lib/terminal-highlight.js#L50\n// https://github.com/babel/babel/blob/eea156b2cb8deecfcf82d52aa1b71ba4995c7d68/packages/babel-code-frame/src/index.js#L1\n\nexport const showSource = ({ url, line, column, source }) => {\n  let message = \"\"\n\n  message += typeof url === \"undefined\" ? \"Anonymous\" : url\n  if (typeof line !== \"number\") {\n    return message\n  }\n\n  message += `:${line}`\n  if (typeof column === \"number\") {\n    message += `:${column}`\n  }\n\n  if (!source) {\n    return message\n  }\n\n  return `${message}\n${showSourceLocation(source, {\n  line,\n  column,\n})}`\n}\n\nconst red = \"\\x1b[31m\"\nconst grey = \"\\x1b[39m\"\nconst ansiResetSequence = \"\\x1b[0m\"\n\nconst showSourceLocation = (\n  source,\n  {\n    line,\n    column,\n    numberOfSurroundingLinesToShow = 1,\n    lineMaxLength = 120,\n    color = false,\n    markColor = red,\n    asideColor = grey,\n    colorMark = (string) => `${markColor}${string}${ansiResetSequence}`,\n    colorAside = (string) => `${asideColor}${string}${ansiResetSequence}`,\n  },\n) => {\n  const mark = color ? colorMark : (string) => string\n  const aside = color ? colorAside : (string) => string\n\n  const lines = source.split(/\\r?\\n/)\n  let lineRange = {\n    start: line - 1,\n    end: line,\n  }\n  lineRange = moveLineRangeUp(lineRange, numberOfSurroundingLinesToShow)\n  lineRange = moveLineRangeDown(lineRange, numberOfSurroundingLinesToShow)\n  lineRange = lineRangeWithinLines(lineRange, lines)\n  const linesToShow = lines.slice(lineRange.start, lineRange.end)\n  const endLineNumber = lineRange.end\n  const lineNumberMaxWidth = String(endLineNumber).length\n\n  const columnRange = {}\n  if (column === undefined) {\n    columnRange.start = 0\n    columnRange.end = lineMaxLength\n  } else if (column > lineMaxLength) {\n    columnRange.start = column - Math.floor(lineMaxLength / 2)\n    columnRange.end = column + Math.ceil(lineMaxLength / 2)\n  } else {\n    columnRange.start = 0\n    columnRange.end = lineMaxLength\n  }\n\n  return linesToShow.map((lineSource, index) => {\n    const lineNumber = lineRange.start + index + 1\n    const isMainLine = lineNumber === line\n    const lineSourceTruncated = applyColumnRange(columnRange, lineSource)\n    const lineNumberWidth = String(lineNumber).length\n    // ensure if line moves from 7,8,9 to 10 the display is still great\n    const lineNumberRightSpacing = \" \".repeat(lineNumberMaxWidth - lineNumberWidth)\n    const asideSource = `${lineNumber}${lineNumberRightSpacing} |`\n    const lineFormatted = `${aside(asideSource)} ${lineSourceTruncated}`\n    if (isMainLine) {\n      if (column === undefined) {\n        return `${mark(\">\")} ${lineFormatted}`\n      }\n      const lineSourceUntilColumn = lineSourceTruncated.slice(0, column - columnRange.start)\n      const spacing = stringToSpaces(lineSourceUntilColumn)\n      const mainLineFormatted = `${mark(\">\")} ${lineFormatted}\n  ${\" \".repeat(lineNumberWidth)} ${aside(\"|\")}${spacing}${mark(\"^\")}`\n      return mainLineFormatted\n    }\n    return `  ${lineFormatted}`\n  }).join(`\n`)\n}\n\nconst applyColumnRange = ({ start, end }, line) => {\n  if (typeof start !== \"number\") {\n    throw new TypeError(`start must be a number, received ${start}`)\n  }\n  if (typeof end !== \"number\") {\n    throw new TypeError(`end must be a number, received ${end}`)\n  }\n  if (end < start) {\n    throw new Error(`end must be greater than start, but ${end} is smaller than ${start}`)\n  }\n\n  const prefix = \"…\"\n  const suffix = \"…\"\n  const lastIndex = line.length\n\n  if (line.length === 0) {\n    // don't show any ellipsis if the line is empty\n    // because it's not truncated in that case\n    return \"\"\n  }\n\n  const startTruncated = start > 0\n  const endTruncated = lastIndex > end\n\n  let from = startTruncated ? start + prefix.length : start\n  let to = endTruncated ? end - suffix.length : end\n  if (to > lastIndex) to = lastIndex\n\n  if (start >= lastIndex || from === to) {\n    return \"\"\n  }\n\n  let result = \"\"\n  while (from < to) {\n    result += line[from]\n    from++\n  }\n\n  if (result.length === 0) {\n    return \"\"\n  }\n  if (startTruncated && endTruncated) {\n    return `${prefix}${result}${suffix}`\n  }\n  if (startTruncated) {\n    return `${prefix}${result}`\n  }\n  if (endTruncated) {\n    return `${result}${suffix}`\n  }\n  return result\n}\n\nconst stringToSpaces = (string) => string.replace(/[^\\t]/g, \" \")\n\n// const getLineRangeLength = ({ start, end }) => end - start\n\nconst moveLineRangeUp = ({ start, end }, number) => {\n  return {\n    start: start - number,\n    end,\n  }\n}\n\nconst moveLineRangeDown = ({ start, end }, number) => {\n  return {\n    start,\n    end: end + number,\n  }\n}\n\nconst lineRangeWithinLines = ({ start, end }, lines) => {\n  return {\n    start: start < 0 ? 0 : start,\n    end: end > lines.length ? lines.length : end,\n  }\n}\n",
    "import { resolveUrl, readFileSystemNodeStat, urlToFilename, urlToExtension } from \"@jsenv/util\"\nimport { firstOperationMatching } from \"@jsenv/cancellation\"\n\nexport const resolveFile = async (fileUrl, { magicExtensions }) => {\n  const fileStat = await readFileSystemNodeStat(fileUrl, {\n    nullIfNotFound: true,\n  })\n\n  // file found\n  if (fileStat && fileStat.isFile()) {\n    return fileUrl\n  }\n\n  // directory found\n  if (fileStat && fileStat.isDirectory()) {\n    const indexFileSuffix = fileUrl.endsWith(\"/\") ? \"index\" : \"/index\"\n    const indexFileUrl = `${fileUrl}${indexFileSuffix}`\n    const extensionLeadingToAFile = await findExtensionLeadingToFile(indexFileUrl, magicExtensions)\n    if (extensionLeadingToAFile === null) {\n      return null\n    }\n    return `${indexFileUrl}${extensionLeadingToAFile}`\n  }\n\n  // file not found and it has an extension\n  const extension = urlToExtension(fileUrl)\n  if (extension !== \"\") {\n    return null\n  }\n\n  const extensionLeadingToAFile = await findExtensionLeadingToFile(fileUrl, magicExtensions)\n  // magic extension not found\n  if (extensionLeadingToAFile === null) {\n    return null\n  }\n\n  // magic extension worked\n  return `${fileUrl}${extensionLeadingToAFile}`\n}\n\nconst findExtensionLeadingToFile = async (fileUrl, magicExtensions) => {\n  const urlDirectoryUrl = resolveUrl(\"./\", fileUrl)\n  const urlFilename = urlToFilename(fileUrl)\n  const extensionLeadingToFile = await firstOperationMatching({\n    array: magicExtensions,\n    start: async (extensionCandidate) => {\n      const urlCandidate = `${urlDirectoryUrl}${urlFilename}${extensionCandidate}`\n      const stats = await readFileSystemNodeStat(urlCandidate, { nullIfNotFound: true })\n      return stats && stats.isFile() ? extensionCandidate : null\n    },\n    predicate: (extension) => Boolean(extension),\n  })\n  return extensionLeadingToFile || null\n}\n",
    "import { createDetailedMessage } from \"@jsenv/logger\"\nimport { resolveUrl, readFile, urlToExtension, urlToRelativeUrl } from \"@jsenv/util\"\nimport {\n  normalizeImportMap,\n  resolveImport,\n  sortImportMap,\n  composeTwoImportMaps,\n} from \"@jsenv/import-map\"\nimport {\n  memoizeAsyncFunctionByUrl,\n  memoizeAsyncFunctionBySpecifierAndImporter,\n} from \"../memoizeAsyncFunction.js\"\nimport { parseSpecifiersFromFile } from \"./parseSpecifiersFromFile.js\"\nimport { showSource } from \"./showSource.js\"\nimport { resolveFile } from \"../resolveFile.js\"\n\nconst BARE_SPECIFIER_ERROR = {}\n\nexport const getImportMapFromJsFiles = async ({\n  warn,\n  importMap,\n  projectDirectoryUrl,\n  removeUnusedMappings,\n  magicExtensions = [\".js\", \".jsx\", \".ts\", \".tsx\", \".node\", \".json\"],\n}) => {\n  const projectPackageFileUrl = resolveUrl(\"./package.json\", projectDirectoryUrl)\n\n  const imports = {}\n  const scopes = {}\n  const addMapping = ({ scope, from, to }) => {\n    if (scope) {\n      scopes[scope] = {\n        ...(scopes[scope] || {}),\n        [from]: to,\n      }\n    } else {\n      imports[from] = to\n    }\n  }\n\n  const topLevelMappingsUsed = []\n  const scopedMappingsUsed = {}\n  const markMappingAsUsed = ({ scope, from, to }) => {\n    if (scope) {\n      if (scope in scopedMappingsUsed) {\n        scopedMappingsUsed[scope].push({ from, to })\n      } else {\n        scopedMappingsUsed[scope] = [{ from, to }]\n      }\n    } else {\n      topLevelMappingsUsed.push({ from, to })\n    }\n  }\n  const importMapNormalized = normalizeImportMap(importMap, projectDirectoryUrl)\n  const trackAndResolveImport = (specifier, importer) => {\n    return resolveImport({\n      specifier,\n      importer,\n      importMap: importMapNormalized,\n      defaultExtension: false,\n      onImportMapping: ({ scope, from }) => {\n        if (scope) {\n          // make scope relative again\n          scope = `./${urlToRelativeUrl(scope, projectDirectoryUrl)}`\n          // make from relative again\n          if (from.startsWith(projectDirectoryUrl)) {\n            from = `./${urlToRelativeUrl(from, projectDirectoryUrl)}`\n          }\n        }\n\n        markMappingAsUsed({\n          scope,\n          from,\n          to: scope ? importMap.scopes[scope][from] : importMap.imports[from],\n        })\n      },\n      createBareSpecifierError: () => BARE_SPECIFIER_ERROR,\n    })\n  }\n\n  const resolveFileSystemUrl = memoizeAsyncFunctionBySpecifierAndImporter(\n    async (specifier, importer, { importedBy }) => {\n      let fileUrl\n      let gotBareSpecifierError = false\n\n      try {\n        fileUrl = trackAndResolveImport(specifier, importer)\n      } catch (e) {\n        if (e !== BARE_SPECIFIER_ERROR) {\n          throw e\n        }\n        if (importer === projectPackageFileUrl) {\n          // cannot find package main file (package.main is \"\" for instance)\n          // we can't discover main file and parse dependencies\n          return null\n        }\n        gotBareSpecifierError = true\n        fileUrl = resolveUrl(specifier, importer)\n      }\n\n      const fileUrlOnFileSystem = await resolveFile(fileUrl, {\n        magicExtensions: magicExtensionWithImporterExtension(magicExtensions, importer),\n      })\n\n      if (!fileUrlOnFileSystem) {\n        warn(\n          createFileNotFoundWarning({\n            specifier,\n            importedBy,\n            fileUrl,\n            magicExtensions,\n          }),\n        )\n        return null\n      }\n\n      const needsAutoMapping = fileUrlOnFileSystem !== fileUrl || gotBareSpecifierError\n      if (needsAutoMapping) {\n        const packageDirectoryUrl = packageDirectoryUrlFromUrl(fileUrl, projectDirectoryUrl)\n        const packageFileUrl = resolveUrl(\"package.json\", packageDirectoryUrl)\n        const autoMapping = {\n          scope:\n            packageFileUrl === projectPackageFileUrl\n              ? undefined\n              : `./${urlToRelativeUrl(packageDirectoryUrl, projectDirectoryUrl)}`,\n          from: specifier,\n          to: `./${urlToRelativeUrl(fileUrlOnFileSystem, projectDirectoryUrl)}`,\n        }\n        addMapping(autoMapping)\n        markMappingAsUsed(autoMapping)\n        warn(\n          formatAutoMappingSpecifierWarning({\n            specifier,\n            importedBy,\n            autoMapping,\n            closestPackageDirectoryUrl: packageDirectoryUrl,\n            closestPackageObject: await readFile(packageFileUrl, { as: \"json\" }),\n          }),\n        )\n      }\n\n      return fileUrlOnFileSystem\n    },\n  )\n\n  const visitFile = memoizeAsyncFunctionByUrl(async (fileUrl) => {\n    const fileContent = await readFile(fileUrl, { as: \"string\" })\n    const specifiers = await parseSpecifiersFromFile(fileUrl, { fileContent })\n\n    const dependencies = await Promise.all(\n      Object.keys(specifiers).map(async (specifier) => {\n        const specifierInfo = specifiers[specifier]\n        const dependencyUrlOnFileSystem = await resolveFileSystemUrl(specifier, fileUrl, {\n          importedBy: showSource({\n            url: fileUrl,\n            line: specifierInfo.line,\n            column: specifierInfo.column,\n            source: fileContent,\n          }),\n        })\n        return dependencyUrlOnFileSystem\n      }),\n    )\n    const dependenciesToVisit = dependencies.filter((dependency) => {\n      return dependency && !visitFile.isInMemory(dependency)\n    })\n    await Promise.all(\n      dependenciesToVisit.map((dependency) => {\n        return visitFile(dependency)\n      }),\n    )\n  })\n\n  const projectPackageObject = await readFile(projectPackageFileUrl, { as: \"json\" })\n  const projectMainFileUrlOnFileSystem = await resolveFileSystemUrl(\n    projectPackageObject.name,\n    projectPackageFileUrl,\n    {\n      importedBy: projectPackageObject.exports\n        ? `${projectPackageFileUrl}#exports`\n        : `${projectPackageFileUrl}`,\n    },\n  )\n  if (projectMainFileUrlOnFileSystem) {\n    await visitFile(projectMainFileUrlOnFileSystem)\n  }\n\n  if (removeUnusedMappings) {\n    const importsUsed = {}\n    topLevelMappingsUsed.forEach(({ from, to }) => {\n      importsUsed[from] = to\n    })\n    const scopesUsed = {}\n    Object.keys(scopedMappingsUsed).forEach((scope) => {\n      const mappingsUsed = scopedMappingsUsed[scope]\n      const scopedMappings = {}\n      mappingsUsed.forEach(({ from, to }) => {\n        scopedMappings[from] = to\n      })\n      scopesUsed[scope] = scopedMappings\n    })\n    return sortImportMap({\n      imports: importsUsed,\n      scopes: scopesUsed,\n    })\n  }\n\n  return sortImportMap(composeTwoImportMaps(importMap, { imports, scopes }))\n}\n\nconst packageDirectoryUrlFromUrl = (url, projectDirectoryUrl) => {\n  const relativeUrl = urlToRelativeUrl(url, projectDirectoryUrl)\n\n  const lastNodeModulesDirectoryStartIndex = relativeUrl.lastIndexOf(\"node_modules/\")\n  if (lastNodeModulesDirectoryStartIndex === -1) {\n    return projectDirectoryUrl\n  }\n\n  const lastNodeModulesDirectoryEndIndex =\n    lastNodeModulesDirectoryStartIndex + `node_modules/`.length\n\n  const beforeNodeModulesLastDirectory = relativeUrl.slice(0, lastNodeModulesDirectoryEndIndex)\n  const afterLastNodeModulesDirectory = relativeUrl.slice(lastNodeModulesDirectoryEndIndex)\n  const remainingDirectories = afterLastNodeModulesDirectory.split(\"/\")\n\n  if (afterLastNodeModulesDirectory[0] === \"@\") {\n    // scoped package\n    return `${projectDirectoryUrl}${beforeNodeModulesLastDirectory}${remainingDirectories\n      .slice(0, 2)\n      .join(\"/\")}`\n  }\n  return `${projectDirectoryUrl}${beforeNodeModulesLastDirectory}${remainingDirectories[0]}/`\n}\n\nconst magicExtensionWithImporterExtension = (magicExtensions, importer) => {\n  const importerExtension = urlToExtension(importer)\n  const magicExtensionsWithoutImporterExtension = magicExtensions.filter(\n    (ext) => ext !== importerExtension,\n  )\n  return [importerExtension, ...magicExtensionsWithoutImporterExtension]\n}\n\nconst createFileNotFoundWarning = ({ specifier, importedBy, fileUrl, magicExtensions }) => {\n  return {\n    code: \"FILE_NOT_FOUND\",\n    message: createDetailedMessage(`Cannot find file for \"${specifier}\"`, {\n      \"specifier origin\": importedBy,\n      \"file url tried\": fileUrl,\n      ...(urlToExtension(fileUrl) === \"\"\n        ? { [\"extensions tried\"]: magicExtensions.join(`, `) }\n        : {}),\n    }),\n  }\n}\n\nconst formatAutoMappingSpecifierWarning = ({\n  importedBy,\n  autoMapping,\n  closestPackageDirectoryUrl,\n  closestPackageObject,\n}) => {\n  return {\n    code: \"AUTO_MAPPING\",\n    message: createDetailedMessage(`Auto mapping ${autoMapping.from} to ${autoMapping.to}.`, {\n      \"specifier origin\": importedBy,\n      \"suggestion\": decideAutoMappingSuggestion({\n        autoMapping,\n        closestPackageDirectoryUrl,\n        closestPackageObject,\n      }),\n    }),\n  }\n}\n\nconst decideAutoMappingSuggestion = ({\n  autoMapping,\n  closestPackageDirectoryUrl,\n  closestPackageObject,\n}) => {\n  if (typeof closestPackageObject.importmap === \"string\") {\n    const packageImportmapFileUrl = resolveUrl(\n      closestPackageObject.importmap,\n      closestPackageDirectoryUrl,\n    )\n\n    return `To get rid of this warning, add an explicit mapping into importmap file.\n${mappingToImportmapString(autoMapping)}\ninto ${packageImportmapFileUrl}.`\n  }\n\n  return `To get rid of this warning, add an explicit mapping into package.json.\n${mappingToExportsFieldString(autoMapping)}\ninto ${closestPackageDirectoryUrl}package.json.`\n}\n\nconst mappingToImportmapString = ({ scope, from, to }) => {\n  if (scope) {\n    return JSON.stringify(\n      {\n        scopes: {\n          [scope]: {\n            [from]: to,\n          },\n        },\n      },\n      null,\n      \"  \",\n    )\n  }\n\n  return JSON.stringify(\n    {\n      imports: {\n        [from]: to,\n      },\n    },\n    null,\n    \"  \",\n  )\n}\n\nconst mappingToExportsFieldString = ({ scope, from, to }) => {\n  if (scope) {\n    const scopeUrl = resolveUrl(scope, \"file://\")\n    const toUrl = resolveUrl(to, \"file://\")\n    to = `./${urlToRelativeUrl(toUrl, scopeUrl)}`\n  }\n\n  return JSON.stringify(\n    {\n      exports: {\n        [from]: to,\n      },\n    },\n    null,\n    \"  \",\n  )\n}\n",
    "export const optimizeImportMap = ({ imports, scopes }) => {\n  // remove useless duplicates (scoped key+value already defined on imports)\n  const scopesOptimized = {}\n  Object.keys(scopes).forEach((scope) => {\n    const scopeMappings = scopes[scope]\n    const scopeMappingsOptimized = {}\n    Object.keys(scopeMappings).forEach((mappingKey) => {\n      const topLevelMappingValue = imports[mappingKey]\n      const mappingValue = scopeMappings[mappingKey]\n      if (!topLevelMappingValue || topLevelMappingValue !== mappingValue) {\n        scopeMappingsOptimized[mappingKey] = mappingValue\n      }\n    })\n    if (Object.keys(scopeMappingsOptimized).length > 0) {\n      scopesOptimized[scope] = scopeMappingsOptimized\n    }\n  })\n  return { imports, scopes: scopesOptimized }\n}\n",
    "import { createDetailedMessage } from \"@jsenv/logger\"\nimport { resolveUrl, urlToFileSystemPath, urlToExtension } from \"@jsenv/util\"\nimport { resolveFile } from \"../resolveFile.js\"\n\nconst magicExtensions = [\".js\", \".json\", \".node\"]\n\nexport const resolvePackageMain = ({\n  warn,\n  packagesExportsPreference,\n  packageFileUrl,\n  packageJsonObject,\n}) => {\n  if (packagesExportsPreference.includes(\"import\") && \"module\" in packageJsonObject) {\n    return resolveMainFile({\n      warn,\n      packageFileUrl,\n      packageMainFieldName: \"module\",\n      packageMainFieldValue: packageJsonObject.module,\n    })\n  }\n\n  if (packagesExportsPreference.includes(\"import\") && \"jsnext:main\" in packageJsonObject) {\n    return resolveMainFile({\n      warn,\n      packageFileUrl,\n      packageMainFieldName: \"jsnext:main\",\n      packageMainFieldValue: packageJsonObject[\"jsnext:main\"],\n    })\n  }\n\n  if (\n    packagesExportsPreference.includes(\"browser\") &&\n    \"browser\" in packageJsonObject &&\n    // when it's an object it means some files\n    // should be replaced with an other, let's ignore this when we are searching\n    // for the main file\n    typeof packageJsonObject.browser === \"string\"\n  ) {\n    return resolveMainFile({\n      warn,\n      packageFileUrl,\n      packageMainFieldName: \"browser\",\n      packageMainFieldValue: packageJsonObject.browser,\n    })\n  }\n\n  if (\"main\" in packageJsonObject) {\n    return resolveMainFile({\n      warn,\n      packageFileUrl,\n      packageMainFieldName: \"main\",\n      packageMainFieldValue: packageJsonObject.main,\n    })\n  }\n\n  return resolveMainFile({\n    warn,\n    packageFileUrl,\n    packageMainFieldName: \"default\",\n    packageMainFieldValue: \"index\",\n  })\n}\n\nconst resolveMainFile = async ({\n  warn,\n  packageFileUrl,\n  packageMainFieldName,\n  packageMainFieldValue,\n}) => {\n  // main is explicitely empty meaning\n  // it is assumed that we should not find a file\n  if (packageMainFieldValue === \"\") {\n    return null\n  }\n\n  const packageDirectoryUrl = resolveUrl(\"./\", packageFileUrl)\n  const mainFileRelativeUrl = packageMainFieldValue.endsWith(\"/\")\n    ? `${packageMainFieldValue}index`\n    : packageMainFieldValue\n\n  const mainFileUrlFirstCandidate = resolveUrl(mainFileRelativeUrl, packageFileUrl)\n\n  if (!mainFileUrlFirstCandidate.startsWith(packageDirectoryUrl)) {\n    warn(\n      createPackageMainFileMustBeRelativeWarning({\n        packageMainFieldName,\n        packageMainFieldValue,\n        packageFileUrl,\n      }),\n    )\n    return null\n  }\n\n  const mainFileUrl = await resolveFile(mainFileUrlFirstCandidate, {\n    magicExtensions,\n  })\n\n  if (!mainFileUrl) {\n    // we know in advance this remapping does not lead to an actual file.\n    // we only warn because we have no guarantee this remapping will actually be used\n    // in the codebase.\n    // warn only if there is actually a main field\n    // otherwise the package.json is missing the main field\n    // it certainly means it's not important\n    if (packageMainFieldName !== \"default\") {\n      warn(\n        createPackageMainFileNotFoundWarning({\n          specifier: packageMainFieldValue,\n          importedIn: `${packageFileUrl}#${packageMainFieldName}`,\n          fileUrl: mainFileUrlFirstCandidate,\n          magicExtensions,\n        }),\n      )\n    }\n    return mainFileUrlFirstCandidate\n  }\n\n  return mainFileUrl\n}\n\nconst createPackageMainFileMustBeRelativeWarning = ({\n  packageMainFieldName,\n  packageMainFieldValue,\n  packageFileUrl,\n}) => {\n  return {\n    code: \"PACKAGE_MAIN_FILE_MUST_BE_RELATIVE\",\n    message: `${packageMainFieldName} field in package.json must be inside package.json folder.\n--- ${packageMainFieldName} ---\n${packageMainFieldValue}\n--- package.json path ---\n${urlToFileSystemPath(packageFileUrl)}`,\n  }\n}\n\nconst createPackageMainFileNotFoundWarning = ({\n  specifier,\n  importedIn,\n  fileUrl,\n  magicExtensions,\n}) => {\n  return {\n    code: \"PACKAGE_MAIN_FILE_NOT_FOUND\",\n    message: createDetailedMessage(`Cannot find package main file \"${specifier}\"`, {\n      \"imported in\": importedIn,\n      \"file url tried\": fileUrl,\n      ...(urlToExtension(fileUrl) === \"\"\n        ? { [\"extensions tried\"]: magicExtensions.join(`, `) }\n        : {}),\n    }),\n  }\n}\n",
    "import { resolveUrl, moveImportMap } from \"@jsenv/import-map\"\nimport { readFile, urlToFileSystemPath } from \"@jsenv/util\"\n\nexport const visitPackageImportMap = async ({\n  warn,\n  packageFileUrl,\n  packageJsonObject,\n  packageImportmap = packageJsonObject.importmap,\n  projectDirectoryUrl,\n}) => {\n  if (typeof packageImportmap === \"undefined\") {\n    return {}\n  }\n\n  if (typeof packageImportmap === \"string\") {\n    const importmapFileUrl = resolveUrl(packageImportmap, packageFileUrl)\n    const importmap = await readFile(importmapFileUrl, { as: \"json\" })\n    return moveImportMap(importmap, importmapFileUrl, projectDirectoryUrl)\n  }\n\n  if (typeof packageImportmap === \"object\" && packageImportmap !== null) {\n    return packageImportmap\n  }\n\n  warn(\n    createPackageImportMapUnexpectedWarning({\n      packageImportmap,\n      packageFileUrl,\n    }),\n  )\n  return {}\n}\n\nconst createPackageImportMapUnexpectedWarning = ({ packageImportmap, packageFileUrl }) => {\n  return {\n    code: \"PACKAGE_IMPORTMAP_UNEXPECTED\",\n    message: `unexpected value in package.json importmap field: value must be a string or an object.\n--- value ---\n${packageImportmap}\n--- package.json path ---\n${urlToFileSystemPath(packageFileUrl)}`,\n  }\n}\n",
    "export const specifierIsRelative = (specifier) => {\n  if (specifier.startsWith(\"//\")) {\n    return false\n  }\n  if (specifier.startsWith(\"../\")) {\n    return false\n  }\n  // starts with http:// or file:// or ftp: for instance\n  if (/^[a-zA-Z]+\\:/.test(specifier)) {\n    return false\n  }\n  return true\n}\n",
    "// https://nodejs.org/dist/latest-v13.x/docs/api/esm.html#esm_package_exports\n\nimport { urlToFileSystemPath, urlToRelativeUrl, resolveUrl } from \"@jsenv/util\"\nimport { specifierIsRelative } from \"./specifierIsRelative.js\"\n\nexport const visitPackageExports = ({\n  warn,\n  packageFileUrl,\n  packageJsonObject,\n  packageExports = packageJsonObject.exports,\n  packageName = packageJsonObject.name,\n  projectDirectoryUrl,\n  packagesExportsPreference,\n  onExport,\n}) => {\n  const packageDirectoryUrl = resolveUrl(\"./\", packageFileUrl)\n  const packageDirectoryRelativeUrl = urlToRelativeUrl(packageDirectoryUrl, projectDirectoryUrl)\n\n  visitExportsSubpath(packageExports, packagesExportsPreference, {\n    onUnexpectedPackageExports: ({ packageExportsValue, packageExportsValuePath }) => {\n      warn(\n        createExportsValueWarning({\n          packageExportsValue,\n          packageExportsValuePath,\n          packageFileUrl,\n        }),\n      )\n    },\n    onMixedPackageExports: ({ packageExportsValue, packageExportsValuePath }) => {\n      // see https://nodejs.org/dist/latest-v13.x/docs/api/esm.html#esm_exports_sugar\n      warn(\n        createExportsMixedWarning({\n          packageExportsValue,\n          packageExportsValuePath,\n          packageFileUrl,\n        }),\n      )\n    },\n    onSubpathPackageExport: ({ key, value, valuePath }) => {\n      if (!specifierIsRelative(key)) {\n        warn(\n          createExportsMappingKeyMustBeRelativeWarning({\n            key,\n            keyPath: valuePath.slice(0, -1),\n            packageFileUrl,\n          }),\n        )\n        return\n      }\n      if (typeof value !== \"string\") {\n        warn(\n          createExportsMappingValueMustBeAStringWarning({\n            value,\n            valuePath,\n            packageFileUrl,\n          }),\n        )\n        return\n      }\n      if (!specifierIsRelative(value)) {\n        warn(\n          createExportsMappingValueMustBeRelativeWarning({\n            value,\n            valuePath,\n            packageFileUrl,\n          }),\n        )\n        return\n      }\n\n      onExport({\n        key: specifierToSource(key, packageName),\n        value: addressToDestination(value, packageDirectoryRelativeUrl),\n      })\n    },\n  })\n}\n\nconst visitExportsSubpath = (\n  packageExports,\n  packageExportsConditions,\n  { onUnexpectedPackageExports, onMixedPackageExports, onSubpathPackageExport },\n) => {\n  const visitValue = (packageExportsValue, { valuePath }) => {\n    // false is allowed as alternative to exports: {}\n    if (packageExportsValue === false) {\n      return\n    }\n\n    if (typeof packageExportsValue === \"string\") {\n      const firstNonConditionKey = valuePath\n        .slice()\n        .reverse()\n        .find((key) => key.startsWith(\".\"))\n      const key = firstNonConditionKey || \".\"\n      onSubpathPackageExport({\n        value: packageExportsValue,\n        valuePath,\n        key,\n      })\n      return\n    }\n\n    if (typeof packageExportsValue !== \"object\" && packageExportsValue !== null) {\n      onUnexpectedPackageExports({\n        packageExportsValue,\n        packageExportsValuePath: valuePath,\n      })\n      return\n    }\n\n    const keys = Object.keys(packageExportsValue)\n    const everyKeyDoesNotStartsWithDot = keys.every((key) => !key.startsWith(\".\"))\n    if (everyKeyDoesNotStartsWithDot) {\n      const bestConditionKey = findBestConditionKey(keys, packageExportsConditions)\n      if (!bestConditionKey) {\n        return\n      }\n      const bestExports = packageExportsValue[bestConditionKey]\n      visitValue(bestExports, {\n        valuePath: [...valuePath, bestConditionKey],\n      })\n      return\n    }\n\n    const everyKeyStartsWithDot = keys.every((key) => key.startsWith(\".\"))\n    if (everyKeyStartsWithDot) {\n      keys.forEach((key) => {\n        visitValue(packageExportsValue[key], {\n          valuePath: [...valuePath, key],\n        })\n      })\n      return\n    }\n\n    onMixedPackageExports({\n      packageExportsValue,\n      packageExportsValuePath: valuePath,\n    })\n  }\n  visitValue(packageExports, {\n    valuePath: [\"exports\"],\n  })\n}\n\nconst findBestConditionKey = (availableKeys, exportsConditions) => {\n  const conditionKey = exportsConditions.find((key) => availableKeys.includes(key))\n  if (conditionKey) {\n    return conditionKey\n  }\n\n  if (availableKeys.includes(\"default\")) {\n    return \"default\"\n  }\n\n  return undefined\n}\n\nconst specifierToSource = (specifier, packageName) => {\n  if (specifier === \".\") {\n    return packageName\n  }\n\n  if (specifier[0] === \"/\") {\n    return specifier\n  }\n\n  if (specifier.startsWith(\"./\")) {\n    return `${packageName}${specifier.slice(1)}`\n  }\n\n  return `${packageName}/${specifier}`\n}\n\nconst addressToDestination = (address, packageDirectoryRelativeUrl) => {\n  if (address[0] === \"/\") {\n    return address\n  }\n\n  if (address.startsWith(\"./\")) {\n    return `./${packageDirectoryRelativeUrl}${address.slice(2)}`\n  }\n\n  return `./${packageDirectoryRelativeUrl}${address}`\n}\n\nconst createExportsValueWarning = ({\n  packageExportsValue,\n  packageExportsValuePath,\n  packageFileUrl,\n}) => {\n  return {\n    code: \"EXPORTS_VALUE\",\n    message: `unexpected value in package.json exports field: value must be an object or a string.\n--- value ---\n${packageExportsValue}\n--- value path ---\n${packageExportsValuePath.join(\".\")}\n--- package.json path ---\n${urlToFileSystemPath(packageFileUrl)}`,\n  }\n}\n\nconst createExportsMixedWarning = ({\n  packageExportsValue,\n  packageExportsValuePath,\n  packageFileUrl,\n}) => {\n  return {\n    code: \"EXPORTS_MIXED\",\n    message: `unexpected package.json exports field: cannot mix conditional and subpath exports.\n--- value ---\n${JSON.stringify(packageExportsValue, null, \"  \")}\n--- value path ---\n${packageExportsValuePath.join(\".\")}\n--- package.json path ---\n${urlToFileSystemPath(packageFileUrl)}`,\n  }\n}\n\nconst createExportsMappingKeyMustBeRelativeWarning = ({ key, keyPath, packageFileUrl }) => {\n  return {\n    code: \"EXPORTS_MAPPING_KEY_MUST_BE_RELATIVE\",\n    message: `unexpected key in package.json exports field: key must be relative.\n--- key ---\n${key}\n--- key path ---\n${keyPath.join(\".\")}\n--- package.json path ---\n${urlToFileSystemPath(packageFileUrl)}`,\n  }\n}\n\nconst createExportsMappingValueMustBeAStringWarning = ({ value, valuePath, packageFileUrl }) => {\n  return {\n    code: \"EXPORTS_MAPPING_VALUE_MUST_BE_A_STRING\",\n    message: `unexpected value in package.json exports field: value must be a string.\n--- value ---\n${value}\n--- value path ---\n${valuePath.join(\".\")}\n--- package.json path ---\n${urlToFileSystemPath(packageFileUrl)}`,\n  }\n}\n\nconst createExportsMappingValueMustBeRelativeWarning = ({ value, valuePath, packageFileUrl }) => {\n  return {\n    code: \"EXPORTS_MAPPING_VALUE_MUST_BE_RELATIVE\",\n    message: `unexpected value in package.json exports field: value must be relative.\n--- value ---\n${value}\n--- value path ---\n${valuePath.join(\".\")}\n--- package.json path ---\n${urlToFileSystemPath(packageFileUrl)}`,\n  }\n}\n",
    "export const applyPackageManualOverride = (packageObject, packagesManualOverrides) => {\n  const { name, version } = packageObject\n  const overrideKey = Object.keys(packagesManualOverrides).find((overrideKeyCandidate) => {\n    if (name === overrideKeyCandidate) {\n      return true\n    }\n    if (`${name}@${version}` === overrideKeyCandidate) {\n      return true\n    }\n    return false\n  })\n  if (overrideKey) {\n    return composeObject(packageObject, packagesManualOverrides[overrideKey])\n  }\n  return packageObject\n}\n\nconst composeObject = (leftObject, rightObject) => {\n  const composedObject = {\n    ...leftObject,\n  }\n  Object.keys(rightObject).forEach((key) => {\n    const rightValue = rightObject[key]\n\n    if (rightValue === null || typeof rightValue !== \"object\" || key in leftObject === false) {\n      composedObject[key] = rightValue\n    } else {\n      const leftValue = leftObject[key]\n      if (leftValue === null || typeof leftValue !== \"object\") {\n        composedObject[key] = rightValue\n      } else {\n        composedObject[key] = composeObject(leftValue, rightValue)\n      }\n    }\n  })\n  return composedObject\n}\n",
    "import { readFile, urlToFileSystemPath } from \"@jsenv/util\"\nimport { applyPackageManualOverride } from \"./applyPackageManualOverride.js\"\n\nexport const PACKAGE_NOT_FOUND = {}\nexport const PACKAGE_WITH_SYNTAX_ERROR = {}\n\nexport const readPackageFile = async (packageFileUrl, packagesManualOverrides) => {\n  try {\n    const packageObject = await readFile(packageFileUrl, { as: \"json\" })\n    return applyPackageManualOverride(packageObject, packagesManualOverrides)\n  } catch (e) {\n    if (e.code === \"ENOENT\") {\n      return PACKAGE_NOT_FOUND\n    }\n\n    if (e.name === \"SyntaxError\") {\n      console.error(formatPackageSyntaxErrorLog({ syntaxError: e, packageFileUrl }))\n      return PACKAGE_WITH_SYNTAX_ERROR\n    }\n\n    throw e\n  }\n}\n\nconst formatPackageSyntaxErrorLog = ({ syntaxError, packageFileUrl }) => {\n  return `\nerror while parsing package.json.\n--- syntax error message ---\n${syntaxError.message}\n--- package.json path ---\n${urlToFileSystemPath(packageFileUrl)}\n`\n}\n",
    "import { firstOperationMatching } from \"@jsenv/cancellation\"\nimport { urlToRelativeUrl, resolveUrl } from \"@jsenv/util\"\nimport { memoizeAsyncFunctionByUrl } from \"../memoizeAsyncFunction.js\"\nimport { readPackageFile, PACKAGE_NOT_FOUND, PACKAGE_WITH_SYNTAX_ERROR } from \"./readPackageFile.js\"\n\nexport const createFindNodeModulePackage = (packagesManualOverrides) => {\n  const readPackageFileMemoized = memoizeAsyncFunctionByUrl((packageFileUrl) => {\n    return readPackageFile(packageFileUrl, packagesManualOverrides)\n  })\n\n  return ({ projectDirectoryUrl, packageFileUrl, dependencyName }) => {\n    const nodeModuleCandidates = getNodeModuleCandidates(packageFileUrl, projectDirectoryUrl)\n\n    return firstOperationMatching({\n      array: nodeModuleCandidates,\n      start: async (nodeModuleCandidate) => {\n        const packageFileUrlCandidate = `${projectDirectoryUrl}${nodeModuleCandidate}${dependencyName}/package.json`\n        const packageObjectCandidate = await readPackageFileMemoized(packageFileUrlCandidate)\n        return {\n          packageFileUrl: packageFileUrlCandidate,\n          packageJsonObject: packageObjectCandidate,\n          syntaxError: packageObjectCandidate === PACKAGE_WITH_SYNTAX_ERROR,\n        }\n      },\n      predicate: ({ packageJsonObject }) => {\n        return packageJsonObject !== PACKAGE_NOT_FOUND\n      },\n    })\n  }\n}\n\nconst getNodeModuleCandidates = (fileUrl, projectDirectoryUrl) => {\n  const fileDirectoryUrl = resolveUrl(\"./\", fileUrl)\n\n  if (fileDirectoryUrl === projectDirectoryUrl) {\n    return [`node_modules/`]\n  }\n\n  const fileDirectoryRelativeUrl = urlToRelativeUrl(fileDirectoryUrl, projectDirectoryUrl)\n  const candidates = []\n  const relativeNodeModuleDirectoryArray = fileDirectoryRelativeUrl.split(\"node_modules/\")\n  // remove the first empty string\n  relativeNodeModuleDirectoryArray.shift()\n\n  let i = relativeNodeModuleDirectoryArray.length\n  while (i--) {\n    candidates.push(\n      `node_modules/${relativeNodeModuleDirectoryArray\n        .slice(0, i + 1)\n        .join(\"node_modules/\")}node_modules/`,\n    )\n  }\n\n  return [...candidates, \"node_modules/\"]\n}\n",
    "import { createDetailedMessage } from \"@jsenv/logger\"\nimport {\n  resolveUrl,\n  urlToRelativeUrl,\n  assertAndNormalizeDirectoryUrl,\n  urlToFileSystemPath,\n  readFile,\n} from \"@jsenv/util\"\nimport { optimizeImportMap } from \"../optimizeImportMap.js\"\nimport { resolvePackageMain } from \"./resolvePackageMain.js\"\nimport { visitPackageImportMap } from \"./visitPackageImportMap.js\"\nimport { visitPackageExports } from \"./visitPackageExports.js\"\nimport { createFindNodeModulePackage } from \"./node-module-resolution.js\"\n\nexport const getImportMapFromPackageFiles = async ({\n  // nothing is actually listening for this cancellationToken for now\n  // it's not very important but it would be better to register on it\n  // an stops what we are doing if asked to do so\n  // cancellationToken = createCancellationTokenForProcess(),\n  logger,\n  warn,\n  projectDirectoryUrl,\n  projectPackageDevDependenciesIncluded = process.env.NODE_ENV !== \"production\",\n  packagesExportsPreference = [\"import\", \"browser\"],\n  packagesExportsIncluded = true,\n  packagesManualOverrides = {},\n  packageIncludedPredicate = () => true,\n}) => {\n  projectDirectoryUrl = assertAndNormalizeDirectoryUrl(projectDirectoryUrl)\n\n  const projectPackageFileUrl = resolveUrl(\"./package.json\", projectDirectoryUrl)\n  const findNodeModulePackage = createFindNodeModulePackage(packagesManualOverrides)\n\n  const imports = {}\n  const scopes = {}\n  const addMapping = ({ scope, from, to }) => {\n    if (scope) {\n      // when a package says './' maps to './'\n      // we must add something to say if we are already inside the package\n      // no need to ensure leading slash are scoped to the package\n      if (from === \"./\" && to === scope) {\n        addMapping({\n          scope,\n          from: scope,\n          to: scope,\n        })\n        const packageName = scope.slice(scope.lastIndexOf(\"node_modules/\") + `node_modules/`.length)\n        addMapping({\n          scope,\n          from: packageName,\n          to: scope,\n        })\n      }\n\n      scopes[scope] = {\n        ...(scopes[scope] || {}),\n        [from]: to,\n      }\n    } else {\n      // we could think it's useless to remap from with to\n      // however it can be used to ensure a weaker remapping\n      // does not win over this specific file or folder\n      if (from === to) {\n        /**\n         * however remapping '/' to '/' is truly useless\n         * moreover it would make wrapImportMap create something like\n         * {\n         *   imports: {\n         *     \"/\": \"/.dist/best/\"\n         *   }\n         * }\n         * that would append the wrapped folder twice\n         * */\n        if (from === \"/\") return\n      }\n      imports[from] = to\n    }\n  }\n\n  const seen = {}\n  const markPackageAsSeen = (packageFileUrl, importerPackageFileUrl) => {\n    if (packageFileUrl in seen) {\n      seen[packageFileUrl].push(importerPackageFileUrl)\n    } else {\n      seen[packageFileUrl] = [importerPackageFileUrl]\n    }\n  }\n  const packageIsSeen = (packageFileUrl, importerPackageFileUrl) => {\n    return packageFileUrl in seen && seen[packageFileUrl].includes(importerPackageFileUrl)\n  }\n\n  const visit = async ({\n    packageFileUrl,\n    packageName,\n    packageJsonObject,\n    importerPackageFileUrl,\n    importerPackageJsonObject,\n    includeDevDependencies,\n  }) => {\n    if (!packageIncludedPredicate({ packageName, packageFileUrl, packageJsonObject })) {\n      return\n    }\n\n    await visitDependencies({\n      packageFileUrl,\n      packageJsonObject,\n      includeDevDependencies,\n    })\n    await visitPackage({\n      packageFileUrl,\n      packageName,\n      packageJsonObject,\n      importerPackageFileUrl,\n      importerPackageJsonObject,\n    })\n  }\n\n  const visitPackage = async ({\n    packageFileUrl,\n    packageName,\n    packageJsonObject,\n    importerPackageFileUrl,\n  }) => {\n    const packageInfo = computePackageInfo({\n      packageFileUrl,\n      packageName,\n      importerPackageFileUrl,\n    })\n\n    await visitPackageMain({\n      packageFileUrl,\n      packageName,\n      packageJsonObject,\n      packageInfo,\n    })\n\n    const {\n      importerIsRoot,\n      importerRelativeUrl,\n      packageIsRoot,\n      packageDirectoryRelativeUrl,\n      // packageDirectoryUrl,\n      // packageDirectoryUrlExpected,\n    } = packageInfo\n\n    const addImportMapForPackage = (importMap) => {\n      if (packageIsRoot) {\n        const { imports = {}, scopes = {} } = importMap\n        Object.keys(imports).forEach((from) => {\n          addMapping({\n            from,\n            to: imports[from],\n          })\n        })\n        Object.keys(scopes).forEach((scope) => {\n          const scopeMappings = scopes[scope]\n          Object.keys(scopeMappings).forEach((key) => {\n            addMapping({\n              scope,\n              from: key,\n              to: scopeMappings[key],\n            })\n          })\n        })\n        return\n      }\n\n      const { imports = {}, scopes = {} } = importMap\n      const scope = `./${packageDirectoryRelativeUrl}`\n      Object.keys(imports).forEach((from) => {\n        const to = imports[from]\n        const toMoved = moveMappingValue(to, packageFileUrl, projectDirectoryUrl)\n        addMapping({\n          scope,\n          from,\n          to: toMoved,\n        })\n      })\n      Object.keys(scopes).forEach((scope) => {\n        const scopeMappings = scopes[scope]\n        const scopeMoved = moveMappingValue(scope, packageFileUrl, projectDirectoryUrl)\n        Object.keys(scopeMappings).forEach((key) => {\n          const to = scopeMappings[key]\n          const toMoved = moveMappingValue(to, packageFileUrl, projectDirectoryUrl)\n          addMapping({\n            scope: scopeMoved,\n            from: key,\n            to: toMoved,\n          })\n        })\n      })\n    }\n\n    const addMappingsForPackageAndImporter = (mappings) => {\n      if (packageIsRoot) {\n        Object.keys(mappings).forEach((from) => {\n          const to = mappings[from]\n          addMapping({\n            from,\n            to,\n          })\n        })\n        return\n      }\n\n      if (importerIsRoot) {\n        // own package mappings available to himself\n        Object.keys(mappings).forEach((from) => {\n          const to = mappings[from]\n          addMapping({\n            scope: `./${packageDirectoryRelativeUrl}`,\n            from,\n            to,\n          })\n          addMapping({ from, to })\n        })\n\n        // if importer is root no need to make package mappings available to the importer\n        // because they are already on top level mappings\n        return\n      }\n\n      Object.keys(mappings).forEach((from) => {\n        const to = mappings[from]\n        // own package exports available to himself\n        addMapping({\n          scope: `./${packageDirectoryRelativeUrl}`,\n          from,\n          to,\n        })\n        // now make package exports available to the importer\n        // here if the importer is himself we could do stuff\n        // we should even handle the case earlier to prevent top level remapping\n        addMapping({\n          scope: `./${importerRelativeUrl}`,\n          from,\n          to,\n        })\n      })\n    }\n\n    const importsFromPackageField = await visitPackageImportMap({\n      warn,\n      packageFileUrl,\n      packageJsonObject,\n      projectDirectoryUrl,\n    })\n    addImportMapForPackage(importsFromPackageField)\n\n    if (packagesExportsIncluded && \"exports\" in packageJsonObject) {\n      const mappingsFromPackageExports = {}\n      visitPackageExports({\n        warn,\n        packageFileUrl,\n        packageJsonObject,\n        packageName,\n        projectDirectoryUrl,\n        packagesExportsPreference,\n        onExport: ({ key, value }) => {\n          const from = key\n          const to = value\n\n          if (from.indexOf(\"*\") === -1) {\n            mappingsFromPackageExports[from] = to\n            return\n          }\n\n          if (\n            from.endsWith(\"/*\") &&\n            to.endsWith(\"/*\") &&\n            // ensure ends with '*' AND there is only one '*' occurence\n            to.indexOf(\"*\") === to.length - 1\n          ) {\n            const fromWithouTrailingStar = from.slice(0, -1)\n            const toWithoutTrailingStar = to.slice(0, -1)\n            mappingsFromPackageExports[fromWithouTrailingStar] = toWithoutTrailingStar\n            return\n          }\n\n          warn(\n            createExportsWildcardIgnoredWarning({\n              key,\n              value,\n              packageFileUrl,\n            }),\n          )\n        },\n      })\n      addMappingsForPackageAndImporter(mappingsFromPackageExports)\n    }\n  }\n\n  const visitPackageMain = async ({\n    packageFileUrl,\n    packageName,\n    packageJsonObject,\n    packageInfo: {\n      importerIsRoot,\n      importerRelativeUrl,\n      packageDirectoryUrl,\n      packageDirectoryUrlExpected,\n    },\n  }) => {\n    const mainFileUrl = await resolvePackageMain({\n      warn,\n      packagesExportsPreference,\n      packageFileUrl,\n      packageJsonObject,\n    })\n\n    // it's possible to have no main\n    // like { main: \"\" } in package.json\n    // or a main that does not lead to an actual file\n    if (mainFileUrl === null) {\n      return\n    }\n\n    const mainFileRelativeUrl = urlToRelativeUrl(mainFileUrl, projectDirectoryUrl)\n    const from = packageName\n    const to = `./${mainFileRelativeUrl}`\n\n    if (importerIsRoot) {\n      addMapping({ from, to })\n    } else {\n      addMapping({\n        scope: `./${importerRelativeUrl}`,\n        from,\n        to,\n      })\n    }\n    if (packageDirectoryUrl !== packageDirectoryUrlExpected) {\n      addMapping({\n        scope: `./${importerRelativeUrl}`,\n        from,\n        to,\n      })\n    }\n  }\n\n  const visitDependencies = async ({\n    packageFileUrl,\n    packageJsonObject,\n    includeDevDependencies,\n  }) => {\n    const dependencyMap = packageDependenciesFromPackageObject(packageJsonObject, {\n      includeDevDependencies,\n    })\n\n    await Promise.all(\n      Object.keys(dependencyMap).map(async (dependencyName) => {\n        const dependencyInfo = dependencyMap[dependencyName]\n        await visitDependency({\n          packageFileUrl,\n          packageJsonObject,\n          dependencyName,\n          dependencyInfo,\n        })\n      }),\n    )\n  }\n\n  const visitDependency = async ({\n    packageFileUrl,\n    packageJsonObject,\n    dependencyName,\n    dependencyInfo,\n  }) => {\n    const dependencyData = await findDependency({\n      packageFileUrl,\n      dependencyName,\n    })\n    if (!dependencyData) {\n      const cannotFindPackageWarning = createCannotFindPackageWarning({\n        dependencyName,\n        dependencyInfo,\n        packageFileUrl,\n      })\n      if (dependencyInfo.isOptional) {\n        logger.debug(cannotFindPackageWarning.message)\n      } else {\n        warn(cannotFindPackageWarning)\n      }\n\n      return\n    }\n    if (dependencyData.syntaxError) {\n      return\n    }\n\n    const {\n      packageFileUrl: dependencyPackageFileUrl,\n      packageJsonObject: dependencyPackageJsonObject,\n    } = dependencyData\n\n    if (packageIsSeen(dependencyPackageFileUrl, packageFileUrl)) {\n      return\n    }\n    markPackageAsSeen(dependencyPackageFileUrl, packageFileUrl)\n    await visit({\n      packageFileUrl: dependencyPackageFileUrl,\n      packageName: dependencyName,\n      packageJsonObject: dependencyPackageJsonObject,\n      importerPackageFileUrl: packageFileUrl,\n      importerPackageJsonObject: packageJsonObject,\n    })\n  }\n\n  const computePackageInfo = ({ packageFileUrl, packageName, importerPackageFileUrl }) => {\n    const importerIsRoot = importerPackageFileUrl === projectPackageFileUrl\n\n    const importerPackageDirectoryUrl = resolveUrl(\"./\", importerPackageFileUrl)\n\n    const importerRelativeUrl = urlToRelativeUrl(importerPackageDirectoryUrl, projectDirectoryUrl)\n\n    const packageIsRoot = packageFileUrl === projectPackageFileUrl\n\n    const packageDirectoryUrl = resolveUrl(\"./\", packageFileUrl)\n\n    const packageDirectoryUrlExpected = `${importerPackageDirectoryUrl}node_modules/${packageName}/`\n\n    const packageDirectoryRelativeUrl = urlToRelativeUrl(packageDirectoryUrl, projectDirectoryUrl)\n\n    return {\n      importerIsRoot,\n      importerRelativeUrl,\n      packageIsRoot,\n      packageDirectoryUrl,\n      packageDirectoryUrlExpected,\n      packageDirectoryRelativeUrl,\n    }\n  }\n\n  const dependenciesCache = {}\n  const findDependency = ({ packageFileUrl, dependencyName }) => {\n    if (packageFileUrl in dependenciesCache === false) {\n      dependenciesCache[packageFileUrl] = {}\n    }\n    if (dependencyName in dependenciesCache[packageFileUrl]) {\n      return dependenciesCache[packageFileUrl][dependencyName]\n    }\n    const dependencyPromise = findNodeModulePackage({\n      projectDirectoryUrl,\n      packageFileUrl,\n      dependencyName,\n    })\n    dependenciesCache[packageFileUrl][dependencyName] = dependencyPromise\n    return dependencyPromise\n  }\n\n  const projectPackageJsonObject = await readFile(projectPackageFileUrl, { as: \"json\" })\n  const importerPackageFileUrl = projectPackageFileUrl\n  markPackageAsSeen(projectPackageFileUrl, importerPackageFileUrl)\n\n  const packageName = projectPackageJsonObject.name\n  if (typeof packageName !== \"string\") {\n    warn(\n      createPackageNameMustBeAStringWarning({\n        packageName,\n        packageFileUrl: projectPackageFileUrl,\n      }),\n    )\n    return {}\n  }\n\n  await visit({\n    packageFileUrl: projectPackageFileUrl,\n    packageName: projectPackageJsonObject.name,\n    packageJsonObject: projectPackageJsonObject,\n    importerPackageFileUrl,\n    importerPackageJsonObject: null,\n    includeDevDependencies: projectPackageDevDependenciesIncluded,\n  })\n\n  return optimizeImportMap({ imports, scopes })\n}\n\nconst packageDependenciesFromPackageObject = (packageObject, { includeDevDependencies }) => {\n  const packageDependencies = {}\n\n  const { dependencies = {} } = packageObject\n  // https://npm.github.io/using-pkgs-docs/package-json/types/optionaldependencies.html\n  const { optionalDependencies = {} } = packageObject\n  Object.keys(dependencies).forEach((dependencyName) => {\n    packageDependencies[dependencyName] = {\n      type: \"dependency\",\n      isOptional: dependencyName in optionalDependencies,\n      versionPattern: dependencies[dependencyName],\n    }\n  })\n\n  const { peerDependencies = {} } = packageObject\n  const { peerDependenciesMeta = {} } = packageObject\n  Object.keys(peerDependencies).forEach((dependencyName) => {\n    packageDependencies[dependencyName] = {\n      type: \"peerDependency\",\n      versionPattern: peerDependencies[dependencyName],\n      isOptional:\n        dependencyName in peerDependenciesMeta && peerDependenciesMeta[dependencyName].optional,\n    }\n  })\n\n  if (includeDevDependencies) {\n    const { devDependencies = {} } = packageObject\n    Object.keys(devDependencies).forEach((dependencyName) => {\n      if (!packageDependencies.hasOwnProperty(dependencyName)) {\n        packageDependencies[dependencyName] = {\n          type: \"devDependency\",\n          versionPattern: devDependencies[dependencyName],\n        }\n      }\n    })\n  }\n\n  return packageDependencies\n}\n\nconst moveMappingValue = (address, from, to) => {\n  const url = resolveUrl(address, from)\n  const relativeUrl = urlToRelativeUrl(url, to)\n  if (relativeUrl.startsWith(\"../\")) {\n    return relativeUrl\n  }\n  if (relativeUrl.startsWith(\"./\")) {\n    return relativeUrl\n  }\n  if (/^[a-zA-Z]{2,}:/.test(relativeUrl)) {\n    // has sheme\n    return relativeUrl\n  }\n  return `./${relativeUrl}`\n}\n\nconst createExportsWildcardIgnoredWarning = ({ key, value, packageFileUrl }) => {\n  return {\n    code: \"EXPORTS_WILDCARD\",\n    message: `Ignoring export using \"*\" because it is not supported by importmap.\n--- key ---\n${key}\n--- value ---\n${value}\n--- package.json path ---\n${urlToFileSystemPath(packageFileUrl)}\n--- see also ---\nhttps://github.com/WICG/import-maps/issues/232`,\n  }\n}\n\nconst createPackageNameMustBeAStringWarning = ({ packageName, packageFileUrl }) => {\n  return {\n    code: \"PACKAGE_NAME_MUST_BE_A_STRING\",\n    message: `package name field must be a string\n--- package name field ---\n${packageName}\n--- package.json file path ---\n${packageFileUrl}`,\n  }\n}\n\nconst createCannotFindPackageWarning = ({ dependencyName, dependencyInfo, packageFileUrl }) => {\n  const dependencyIsOptional = dependencyInfo.isOptional\n  const dependencyType = dependencyInfo.type\n  const dependencyVersionPattern = dependencyInfo.versionPattern\n  return {\n    code: \"CANNOT_FIND_PACKAGE\",\n    message: createDetailedMessage(\n      dependencyIsOptional\n        ? `cannot find an optional ${dependencyType}.`\n        : `cannot find a ${dependencyType}.`,\n      {\n        [dependencyType]: `${dependencyName}@${dependencyVersionPattern}`,\n        \"required by\": urlToFileSystemPath(packageFileUrl),\n      },\n    ),\n  }\n}\n",
    "import { sortImportMap } from \"@jsenv/import-map\"\nimport { createLogger } from \"@jsenv/logger\"\nimport { getImportMapFromJsFiles } from \"./internal/from-js/getImportMapFromJsFiles.js\"\nimport { getImportMapFromPackageFiles } from \"./internal/from-package/getImportMapFromPackageFiles.js\"\n\nexport const getImportMapFromProjectFiles = async ({\n  logLevel,\n  projectDirectoryUrl,\n  runtime = \"browser\",\n  moduleFormat = \"esm\",\n  dev = false,\n  jsFiles = true,\n  removeUnusedMappings = !dev,\n  magicExtensions,\n  onWarn = (warning, warn) => {\n    warn(warning)\n  },\n  ...rest\n}) => {\n  const packagesExportsPreference = [\n    ...(moduleFormatPreferences[moduleFormat] || [moduleFormat]),\n    ...(runtimeExportsPreferences[runtime] || [runtime]),\n    ...(dev ? \"development\" : \"production\"),\n  ]\n\n  const logger = createLogger({ logLevel })\n  const warn = (warning) => {\n    onWarn(warning, () => {\n      logger.warn(`\\n${warning.message}\\n`)\n    })\n  }\n\n  // At this point, importmap is relative to the project directory url\n  let importMapFromPackageFiles = await getImportMapFromPackageFiles({\n    logger,\n    warn,\n    projectDirectoryUrl,\n    packagesExportsPreference,\n    projectPackageDevDependenciesIncluded: dev,\n    ...rest,\n  })\n  importMapFromPackageFiles = sortImportMap(importMapFromPackageFiles)\n  if (!jsFiles) {\n    return importMapFromPackageFiles\n  }\n\n  let importMapFromJsFiles = await getImportMapFromJsFiles({\n    warn,\n    importMap: importMapFromPackageFiles,\n    removeUnusedMappings,\n    projectDirectoryUrl,\n    magicExtensions,\n    packagesExportsPreference,\n    runtime,\n  })\n  importMapFromJsFiles = sortImportMap(importMapFromJsFiles)\n  return importMapFromJsFiles\n}\n\nconst runtimeExportsPreferences = {\n  browser: [\"browser\"],\n  node: [\"node\"],\n}\n\nconst moduleFormatPreferences = {\n  esm: [\"import\"],\n  cjs: [\"require\"],\n}\n",
    "import { assertAndNormalizeDirectoryUrl, resolveUrl, readFile } from \"@jsenv/util\"\nimport { moveImportMap, sortImportMap } from \"@jsenv/import-map\"\n\nexport const getImportMapFromFile = async ({ projectDirectoryUrl, importMapFileRelativeUrl }) => {\n  projectDirectoryUrl = assertAndNormalizeDirectoryUrl(projectDirectoryUrl)\n\n  const importmapFileUrl = resolveUrl(importMapFileRelativeUrl, projectDirectoryUrl)\n  const importmap = await readFile(importmapFileUrl, { as: \"json\" })\n\n  // ensure the importmap is now relative to the project directory url\n  // we do that because writeImportMapFile expect all importmap\n  // to be relative to the projectDirectoryUrl\n  const importmapFakeRootUrl = resolveUrl(\"whatever.importmap\", projectDirectoryUrl)\n  const importmapRelativeToProject = moveImportMap(\n    importmap,\n    importmapFileUrl,\n    importmapFakeRootUrl,\n  )\n\n  return sortImportMap(importmapRelativeToProject)\n}\n",
    "export const importMapToVsCodeConfigPaths = ({ imports = {} }) => {\n  const paths = {}\n\n  Object.keys(imports).forEach((importKey) => {\n    const importValue = imports[importKey]\n\n    let key\n    if (importKey.endsWith(\"/\")) {\n      key = `${importKey}*`\n    } else {\n      key = importKey\n    }\n\n    const importValueArray = typeof importValue === \"string\" ? [importValue] : importValue\n    const candidatesForPath = importValueArray.map((importValue) => {\n      if (importValue.endsWith(\"/\")) {\n        return `${importValue}*`\n      }\n      return importValue\n    })\n\n    if (key in paths) {\n      paths[key] = [...paths[key], ...candidatesForPath]\n    } else {\n      paths[key] = candidatesForPath\n    }\n  })\n\n  return paths\n}\n",
    "import {\n  resolveUrl,\n  urlToFileSystemPath,\n  assertAndNormalizeDirectoryUrl,\n  writeFile,\n} from \"@jsenv/util\"\nimport { composeTwoImportMaps } from \"@jsenv/import-map\"\nimport { importMapToVsCodeConfigPaths } from \"./internal/importMapToVsCodeConfigPaths.js\"\n\nexport const writeImportMapFile = async (\n  importMapInputs = [],\n  {\n    projectDirectoryUrl,\n\n    importMapFile = true, // in case someone wants the importmap but not write it on filesystem\n    importMapFileRelativeUrl = \"./import-map.importmap\",\n    importMapFileLog = true,\n\n    jsConfigFile = false, // not yet documented, makes vscode aware of the import remapping\n    jsConfigFileLog = true,\n    jsConfigLeadingSlash = false,\n    jsConfigBase = {},\n  },\n) => {\n  projectDirectoryUrl = assertAndNormalizeDirectoryUrl(projectDirectoryUrl)\n\n  if (importMapInputs.length === 0) {\n    console.warn(`importMapInputs is empty, the generated importmap will be empty`)\n  }\n\n  const importMaps = await Promise.all(importMapInputs)\n\n  const importMap = importMaps.reduce((previous, current) => {\n    return composeTwoImportMaps(previous, current)\n  }, {})\n\n  if (importMapFile) {\n    const importMapFileUrl = resolveUrl(importMapFileRelativeUrl, projectDirectoryUrl)\n    await writeFile(importMapFileUrl, JSON.stringify(importMap, null, \"  \"))\n    if (importMapFileLog) {\n      console.info(`-> ${urlToFileSystemPath(importMapFileUrl)}`)\n    }\n  }\n  if (jsConfigFile) {\n    const jsConfigFileUrl = resolveUrl(\"./jsconfig.json\", projectDirectoryUrl)\n    try {\n      const jsConfig = {\n        compilerOptions: {\n          baseUrl: \".\",\n          ...jsConfigBase,\n          paths: {\n            ...(jsConfigLeadingSlash ? { \"/*\": [\"./*\"] } : {}),\n            ...importMapToVsCodeConfigPaths(importMap),\n          },\n        },\n      }\n      await writeFile(jsConfigFileUrl, JSON.stringify(jsConfig, null, \"  \"))\n      if (jsConfigFileLog) {\n        console.info(`-> ${urlToFileSystemPath(jsConfigFileUrl)}`)\n      }\n    } catch (e) {\n      if (e.code !== \"ENOENT\") {\n        throw e\n      }\n    }\n  }\n\n  return importMap\n}\n"
  ],
  "names": [
    "memoizeAsyncFunctionByUrl",
    "fn",
    "cache",
    "memoizeAsyncFunction",
    "getMemoryEntryFromArguments",
    "url",
    "get",
    "set",
    "promise",
    "delete",
    "memoizeAsyncFunctionBySpecifierAndImporter",
    "importerCache",
    "specifier",
    "importer",
    "specifierCacheForImporter",
    "memoized",
    "args",
    "memoryEntry",
    "promiseFromMemory",
    "resolve",
    "reject",
    "createControllablePromise",
    "value",
    "error",
    "e",
    "isInMemory",
    "Boolean",
    "Promise",
    "res",
    "rej",
    "filenameContainsBackSlashes",
    "__filename",
    "indexOf",
    "replace",
    "require",
    "createRequire",
    "parser",
    "traverse",
    "parseSpecifiersFromFile",
    "fileUrl",
    "fileContent",
    "sourceType",
    "allowImportExportEverywhere",
    "allowAwaitOutsideFunction",
    "ranges",
    "jsx",
    "typescript",
    "endsWith",
    "flow",
    "options",
    "undefined",
    "readFile",
    "as",
    "ast",
    "parse",
    "sourceFilename",
    "urlToFileSystemPath",
    "plugins",
    "specifiers",
    "addSpecifier",
    "path",
    "type",
    "node",
    "line",
    "loc",
    "start",
    "column",
    "default",
    "CallExpression",
    "callee",
    "arguments",
    "ExportAllDeclaration",
    "ExportNamedDeclaration",
    "source",
    "ImportDeclaration",
    "showSource",
    "message",
    "showSourceLocation",
    "red",
    "grey",
    "ansiResetSequence",
    "numberOfSurroundingLinesToShow",
    "lineMaxLength",
    "color",
    "markColor",
    "asideColor",
    "colorMark",
    "string",
    "colorAside",
    "mark",
    "aside",
    "lines",
    "split",
    "lineRange",
    "end",
    "moveLineRangeUp",
    "moveLineRangeDown",
    "lineRangeWithinLines",
    "linesToShow",
    "slice",
    "endLineNumber",
    "lineNumberMaxWidth",
    "String",
    "length",
    "columnRange",
    "Math",
    "floor",
    "ceil",
    "map",
    "lineSource",
    "index",
    "lineNumber",
    "isMainLine",
    "lineSourceTruncated",
    "applyColumnRange",
    "lineNumberWidth",
    "lineNumberRightSpacing",
    "repeat",
    "asideSource",
    "lineFormatted",
    "lineSourceUntilColumn",
    "spacing",
    "stringToSpaces",
    "mainLineFormatted",
    "join",
    "TypeError",
    "Error",
    "prefix",
    "suffix",
    "lastIndex",
    "startTruncated",
    "endTruncated",
    "from",
    "to",
    "result",
    "number",
    "resolveFile",
    "magicExtensions",
    "fileStat",
    "readFileSystemNodeStat",
    "nullIfNotFound",
    "isFile",
    "isDirectory",
    "indexFileSuffix",
    "indexFileUrl",
    "extensionLeadingToAFile",
    "findExtensionLeadingToFile",
    "extension",
    "urlToExtension",
    "urlDirectoryUrl",
    "resolveUrl",
    "urlFilename",
    "urlToFilename",
    "extensionLeadingToFile",
    "firstOperationMatching",
    "array",
    "extensionCandidate",
    "urlCandidate",
    "stats",
    "predicate",
    "BARE_SPECIFIER_ERROR",
    "getImportMapFromJsFiles",
    "warn",
    "importMap",
    "projectDirectoryUrl",
    "removeUnusedMappings",
    "projectPackageFileUrl",
    "imports",
    "scopes",
    "addMapping",
    "scope",
    "topLevelMappingsUsed",
    "scopedMappingsUsed",
    "markMappingAsUsed",
    "push",
    "importMapNormalized",
    "normalizeImportMap",
    "trackAndResolveImport",
    "resolveImport",
    "defaultExtension",
    "onImportMapping",
    "urlToRelativeUrl",
    "startsWith",
    "createBareSpecifierError",
    "resolveFileSystemUrl",
    "importedBy",
    "gotBareSpecifierError",
    "fileUrlOnFileSystem",
    "magicExtensionWithImporterExtension",
    "createFileNotFoundWarning",
    "needsAutoMapping",
    "packageDirectoryUrl",
    "packageDirectoryUrlFromUrl",
    "packageFileUrl",
    "autoMapping",
    "formatAutoMappingSpecifierWarning",
    "closestPackageDirectoryUrl",
    "closestPackageObject",
    "visitFile",
    "dependencies",
    "all",
    "Object",
    "keys",
    "specifierInfo",
    "dependencyUrlOnFileSystem",
    "dependenciesToVisit",
    "filter",
    "dependency",
    "projectPackageObject",
    "projectMainFileUrlOnFileSystem",
    "name",
    "exports",
    "importsUsed",
    "forEach",
    "scopesUsed",
    "mappingsUsed",
    "scopedMappings",
    "sortImportMap",
    "composeTwoImportMaps",
    "relativeUrl",
    "lastNodeModulesDirectoryStartIndex",
    "lastIndexOf",
    "lastNodeModulesDirectoryEndIndex",
    "beforeNodeModulesLastDirectory",
    "afterLastNodeModulesDirectory",
    "remainingDirectories",
    "importerExtension",
    "magicExtensionsWithoutImporterExtension",
    "ext",
    "code",
    "createDetailedMessage",
    "decideAutoMappingSuggestion",
    "importmap",
    "packageImportmapFileUrl",
    "mappingToImportmapString",
    "mappingToExportsFieldString",
    "JSON",
    "stringify",
    "scopeUrl",
    "toUrl",
    "optimizeImportMap",
    "scopesOptimized",
    "scopeMappings",
    "scopeMappingsOptimized",
    "mappingKey",
    "topLevelMappingValue",
    "mappingValue",
    "resolvePackageMain",
    "packagesExportsPreference",
    "packageJsonObject",
    "includes",
    "resolveMainFile",
    "packageMainFieldName",
    "packageMainFieldValue",
    "module",
    "browser",
    "main",
    "mainFileRelativeUrl",
    "mainFileUrlFirstCandidate",
    "createPackageMainFileMustBeRelativeWarning",
    "mainFileUrl",
    "createPackageMainFileNotFoundWarning",
    "importedIn",
    "visitPackageImportMap",
    "packageImportmap",
    "importmapFileUrl",
    "moveImportMap",
    "createPackageImportMapUnexpectedWarning",
    "specifierIsRelative",
    "test",
    "visitPackageExports",
    "packageExports",
    "packageName",
    "onExport",
    "packageDirectoryRelativeUrl",
    "visitExportsSubpath",
    "onUnexpectedPackageExports",
    "packageExportsValue",
    "packageExportsValuePath",
    "createExportsValueWarning",
    "onMixedPackageExports",
    "createExportsMixedWarning",
    "onSubpathPackageExport",
    "key",
    "valuePath",
    "createExportsMappingKeyMustBeRelativeWarning",
    "keyPath",
    "createExportsMappingValueMustBeAStringWarning",
    "createExportsMappingValueMustBeRelativeWarning",
    "specifierToSource",
    "addressToDestination",
    "packageExportsConditions",
    "visitValue",
    "firstNonConditionKey",
    "reverse",
    "find",
    "everyKeyDoesNotStartsWithDot",
    "every",
    "bestConditionKey",
    "findBestConditionKey",
    "bestExports",
    "everyKeyStartsWithDot",
    "availableKeys",
    "exportsConditions",
    "conditionKey",
    "address",
    "applyPackageManualOverride",
    "packageObject",
    "packagesManualOverrides",
    "version",
    "overrideKey",
    "overrideKeyCandidate",
    "composeObject",
    "leftObject",
    "rightObject",
    "composedObject",
    "rightValue",
    "leftValue",
    "PACKAGE_NOT_FOUND",
    "PACKAGE_WITH_SYNTAX_ERROR",
    "readPackageFile",
    "console",
    "formatPackageSyntaxErrorLog",
    "syntaxError",
    "createFindNodeModulePackage",
    "readPackageFileMemoized",
    "dependencyName",
    "nodeModuleCandidates",
    "getNodeModuleCandidates",
    "nodeModuleCandidate",
    "packageFileUrlCandidate",
    "packageObjectCandidate",
    "fileDirectoryUrl",
    "fileDirectoryRelativeUrl",
    "candidates",
    "relativeNodeModuleDirectoryArray",
    "shift",
    "i",
    "getImportMapFromPackageFiles",
    "logger",
    "projectPackageDevDependenciesIncluded",
    "packagesExportsIncluded",
    "packageIncludedPredicate",
    "assertAndNormalizeDirectoryUrl",
    "findNodeModulePackage",
    "seen",
    "markPackageAsSeen",
    "importerPackageFileUrl",
    "packageIsSeen",
    "visit",
    "importerPackageJsonObject",
    "includeDevDependencies",
    "visitDependencies",
    "visitPackage",
    "packageInfo",
    "computePackageInfo",
    "visitPackageMain",
    "importerIsRoot",
    "importerRelativeUrl",
    "packageIsRoot",
    "addImportMapForPackage",
    "toMoved",
    "moveMappingValue",
    "scopeMoved",
    "addMappingsForPackageAndImporter",
    "mappings",
    "importsFromPackageField",
    "mappingsFromPackageExports",
    "fromWithouTrailingStar",
    "toWithoutTrailingStar",
    "createExportsWildcardIgnoredWarning",
    "packageDirectoryUrlExpected",
    "dependencyMap",
    "packageDependenciesFromPackageObject",
    "dependencyInfo",
    "visitDependency",
    "dependencyData",
    "findDependency",
    "cannotFindPackageWarning",
    "createCannotFindPackageWarning",
    "isOptional",
    "debug",
    "dependencyPackageFileUrl",
    "dependencyPackageJsonObject",
    "importerPackageDirectoryUrl",
    "dependenciesCache",
    "dependencyPromise",
    "projectPackageJsonObject",
    "createPackageNameMustBeAStringWarning",
    "packageDependencies",
    "optionalDependencies",
    "versionPattern",
    "peerDependencies",
    "peerDependenciesMeta",
    "optional",
    "devDependencies",
    "hasOwnProperty",
    "dependencyIsOptional",
    "dependencyType",
    "dependencyVersionPattern",
    "getImportMapFromProjectFiles",
    "logLevel",
    "runtime",
    "moduleFormat",
    "dev",
    "jsFiles",
    "onWarn",
    "warning",
    "rest",
    "moduleFormatPreferences",
    "runtimeExportsPreferences",
    "createLogger",
    "importMapFromPackageFiles",
    "importMapFromJsFiles",
    "esm",
    "cjs",
    "getImportMapFromFile",
    "importMapFileRelativeUrl",
    "importmapFakeRootUrl",
    "importmapRelativeToProject",
    "importMapToVsCodeConfigPaths",
    "paths",
    "importKey",
    "importValue",
    "importValueArray",
    "candidatesForPath",
    "writeImportMapFile",
    "importMapInputs",
    "importMapFile",
    "importMapFileLog",
    "jsConfigFile",
    "jsConfigFileLog",
    "jsConfigLeadingSlash",
    "jsConfigBase",
    "importMaps",
    "reduce",
    "previous",
    "current",
    "importMapFileUrl",
    "writeFile",
    "info",
    "jsConfigFileUrl",
    "jsConfig",
    "compilerOptions",
    "baseUrl"
  ],
  "mappings": "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"
}