{
  "version": 3,
  "file": "main.cjs",
  "sources": [
    "../../src/internal/memoizeAsyncFunction.js",
    "../../node_modules/@jsenv/core/helpers/import-meta/import-meta-url-commonjs.js",
    "../../src/internal/from-js/parseSpecifiersFromFile.js",
    "../../src/internal/from-js/showSource.js",
    "../../src/internal/resolveFile.js",
    "../../src/internal/from-js/getImportMapFromJsFiles.js",
    "../../src/internal/optimizeImportMap.js",
    "../../src/internal/from-package/resolvePackageMain.js",
    "../../src/internal/from-package/visitPackageImportMap.js",
    "../../src/internal/from-package/specifierIsRelative.js",
    "../../src/internal/from-package/visitPackageExports.js",
    "../../src/internal/from-package/applyPackageManualOverride.js",
    "../../src/internal/from-package/readPackageFile.js",
    "../../src/internal/from-package/node-module-resolution.js",
    "../../src/internal/from-package/getImportMapFromPackageFiles.js",
    "../../src/getImportMapFromProjectFiles.js",
    "../../src/getImportMapFromFile.js",
    "../../src/internal/importMapToVsCodeConfigPaths.js",
    "../../src/writeImportMapFile.js"
  ],
  "sourcesContent": [
    "export const memoizeAsyncFunctionByUrl = (fn) => {\n  const map = new WeakMap()\n  return memoizeAsyncFunction(fn, {\n    getMemoryEntryFromArguments: ([url]) => {\n      return {\n        get: () => {\n          return map.get(url)\n        },\n        set: (promise) => {\n          map.set(url, promise)\n        },\n        delete: () => {\n          map.delete(url)\n        },\n      }\n    },\n  })\n}\n\nexport const memoizeAsyncFunctionBySpecifierAndImporter = (fn) => {\n  const importerCache = {}\n  return memoizeAsyncFunction(fn, {\n    getMemoryEntryFromArguments: ([specifier, importer]) => {\n      return {\n        get: () => {\n          const specifierCacheForImporter = importerCache[importer]\n          return specifierCacheForImporter ? specifierCacheForImporter[specifier] : null\n        },\n        set: (promise) => {\n          const specifierCacheForImporter = importerCache[importer]\n          if (specifierCacheForImporter) {\n            specifierCacheForImporter[specifier] = promise\n          } else {\n            importerCache[importer] = {\n              [specifier]: promise,\n            }\n          }\n        },\n        delete: () => {\n          const specifierCacheForImporter = importerCache[importer]\n          if (specifierCacheForImporter) {\n            delete specifierCacheForImporter[specifier]\n          }\n        },\n      }\n    },\n  })\n}\n\nconst memoizeAsyncFunction = (fn, { getMemoryEntryFromArguments }) => {\n  return async (...args) => {\n    const memoryEntry = getMemoryEntryFromArguments(args)\n    const promiseFromMemory = memoryEntry.get()\n    if (promiseFromMemory) {\n      return promiseFromMemory\n    }\n    const { promise, resolve, reject } = createControllablePromise()\n    memoryEntry.set(promise)\n    let value\n    let error\n    try {\n      value = fn(...args)\n      error = false\n    } catch (e) {\n      value = e\n      error = true\n      memoryEntry.delete()\n    }\n    if (error) {\n      reject(error)\n    } else {\n      resolve(value)\n    }\n    return promise\n  }\n}\n\nconst createControllablePromise = () => {\n  let resolve\n  let reject\n  const promise = new Promise((res, rej) => {\n    resolve = res\n    reject = rej\n  })\n  return { promise, resolve, reject }\n}\n",
    "/* global __filename */\n\nconst filenameContainsBackSlashes = __filename.indexOf(\"\\\\\") > -1\n\nconst url = filenameContainsBackSlashes\n  ? `file:///${__filename.replace(/\\\\/g, \"/\")}`\n  : `file://${__filename}`\n\nexport default url\n",
    "import { createRequire } from \"module\"\nimport { readFile, urlToFileSystemPath } from \"@jsenv/util\"\n\nconst require = createRequire(import.meta.url)\n\nconst parser = require(\"@babel/parser\")\nconst traverse = require(\"@babel/traverse\")\n\nexport const parseSpecifiersFromFile = async (\n  fileUrl,\n  {\n    fileContent,\n    sourceType = \"module\",\n    allowImportExportEverywhere = true,\n    allowAwaitOutsideFunction = true,\n    ranges = true,\n    jsx = true,\n    typescript = fileUrl.endsWith(\".ts\") || fileUrl.endsWith(\".tsx\"),\n    flow = false,\n    ...options\n  } = {},\n) => {\n  fileContent = fileContent === undefined ? await readFile(fileUrl, { as: \"string\" }) : fileContent\n\n  const ast = parser.parse(fileContent, {\n    sourceType,\n    sourceFilename: urlToFileSystemPath(fileUrl),\n    allowImportExportEverywhere,\n    allowAwaitOutsideFunction,\n    ranges,\n    plugins: [\n      // \"estree\",\n      \"topLevelAwait\",\n      \"exportDefaultFrom\",\n      ...(jsx ? [\"jsx\"] : []),\n      ...(typescript ? [\"typescript\"] : []),\n      ...(flow ? [\"flow\"] : []),\n    ],\n    ...options,\n  })\n\n  const specifiers = {}\n\n  const addSpecifier = ({ path, type }) => {\n    const specifier = path.node.value\n    specifiers[specifier] = {\n      line: path.node.loc.start.line,\n      column: path.node.loc.start.column,\n      type,\n    }\n  }\n\n  traverse.default(ast, {\n    // ImportExpression: (path) => {\n    //   if (path.node.arguments[0].type !== \"StringLiteral\") {\n    //     // Non-string argument, probably a variable or expression, e.g.\n    //     // import(moduleId)\n    //     // import('./' + moduleName)\n    //     return\n    //   }\n    //   addSpecifier(path.get(\"arguments\")[0])\n    // },\n    CallExpression: (path) => {\n      if (path.node.callee.type !== \"Import\") {\n        // Some other function call, not import();\n        return\n      }\n      if (path.node.arguments[0].type !== \"StringLiteral\") {\n        // Non-string argument, probably a variable or expression, e.g.\n        // import(moduleId)\n        // import('./' + moduleName)\n        return\n      }\n      addSpecifier({\n        path: path.get(\"arguments\")[0],\n        type: \"import-dynamic\",\n      })\n    },\n    ExportAllDeclaration: (path) => {\n      addSpecifier({\n        path: path.get(\"source\"),\n        type: \"export-all\",\n      })\n    },\n    ExportNamedDeclaration: (path) => {\n      if (!path.node.source) {\n        // This export has no \"source\", so it's probably\n        // a local variable or function, e.g.\n        // export { varName }\n        // export const constName = ...\n        // export function funcName() {}\n        return\n      }\n      addSpecifier({\n        path: path.get(\"source\"),\n        type: \"export-named\",\n      })\n    },\n    ImportDeclaration: (path) => {\n      addSpecifier({\n        path: path.get(\"source\"),\n        type: \"import-static\",\n      })\n    },\n  })\n\n  return specifiers\n}\n",
    "// https://github.com/postcss/postcss/blob/fd30d3df5abc0954a0ec642a3cdc644ab2aacf9c/lib/css-syntax-error.js#L43\n// https://github.com/postcss/postcss/blob/fd30d3df5abc0954a0ec642a3cdc644ab2aacf9c/lib/terminal-highlight.js#L50\n// https://github.com/babel/babel/blob/eea156b2cb8deecfcf82d52aa1b71ba4995c7d68/packages/babel-code-frame/src/index.js#L1\n\nexport const showSource = ({ url, line, column, source }) => {\n  let message = \"\"\n\n  message += typeof url === \"undefined\" ? \"Anonymous\" : url\n  if (typeof line !== \"number\") {\n    return message\n  }\n\n  message += `:${line}`\n  if (typeof column === \"number\") {\n    message += `:${column}`\n  }\n\n  if (!source) {\n    return message\n  }\n\n  return `${message}\n${showSourceLocation(source, {\n  line,\n  column,\n})}`\n}\n\nconst red = \"\\x1b[31m\"\nconst grey = \"\\x1b[39m\"\nconst ansiResetSequence = \"\\x1b[0m\"\n\nconst showSourceLocation = (\n  source,\n  {\n    line,\n    column,\n    numberOfSurroundingLinesToShow = 1,\n    lineMaxLength = 120,\n    color = false,\n    markColor = red,\n    asideColor = grey,\n    colorMark = (string) => `${markColor}${string}${ansiResetSequence}`,\n    colorAside = (string) => `${asideColor}${string}${ansiResetSequence}`,\n  },\n) => {\n  const mark = color ? colorMark : (string) => string\n  const aside = color ? colorAside : (string) => string\n\n  const lines = source.split(/\\r?\\n/)\n  let lineRange = {\n    start: line - 1,\n    end: line,\n  }\n  lineRange = moveLineRangeUp(lineRange, numberOfSurroundingLinesToShow)\n  lineRange = moveLineRangeDown(lineRange, numberOfSurroundingLinesToShow)\n  lineRange = lineRangeWithinLines(lineRange, lines)\n  const linesToShow = lines.slice(lineRange.start, lineRange.end)\n  const endLineNumber = lineRange.end\n  const lineNumberMaxWidth = String(endLineNumber).length\n\n  const columnRange = {}\n  if (column === undefined) {\n    columnRange.start = 0\n    columnRange.end = lineMaxLength\n  } else if (column > lineMaxLength) {\n    columnRange.start = column - Math.floor(lineMaxLength / 2)\n    columnRange.end = column + Math.ceil(lineMaxLength / 2)\n  } else {\n    columnRange.start = 0\n    columnRange.end = lineMaxLength\n  }\n\n  return linesToShow.map((lineSource, index) => {\n    const lineNumber = lineRange.start + index + 1\n    const isMainLine = lineNumber === line\n    const lineSourceTruncated = applyColumnRange(columnRange, lineSource)\n    const lineNumberWidth = String(lineNumber).length\n    // ensure if line moves from 7,8,9 to 10 the display is still great\n    const lineNumberRightSpacing = \" \".repeat(lineNumberMaxWidth - lineNumberWidth)\n    const asideSource = `${lineNumber}${lineNumberRightSpacing} |`\n    const lineFormatted = `${aside(asideSource)} ${lineSourceTruncated}`\n    if (isMainLine) {\n      if (column === undefined) {\n        return `${mark(\">\")} ${lineFormatted}`\n      }\n      const lineSourceUntilColumn = lineSourceTruncated.slice(0, column - columnRange.start)\n      const spacing = stringToSpaces(lineSourceUntilColumn)\n      const mainLineFormatted = `${mark(\">\")} ${lineFormatted}\n  ${\" \".repeat(lineNumberWidth)} ${aside(\"|\")}${spacing}${mark(\"^\")}`\n      return mainLineFormatted\n    }\n    return `  ${lineFormatted}`\n  }).join(`\n`)\n}\n\nconst applyColumnRange = ({ start, end }, line) => {\n  if (typeof start !== \"number\") {\n    throw new TypeError(`start must be a number, received ${start}`)\n  }\n  if (typeof end !== \"number\") {\n    throw new TypeError(`end must be a number, received ${end}`)\n  }\n  if (end < start) {\n    throw new Error(`end must be greater than start, but ${end} is smaller than ${start}`)\n  }\n\n  const prefix = \"…\"\n  const suffix = \"…\"\n  const lastIndex = line.length\n\n  if (line.length === 0) {\n    // don't show any ellipsis if the line is empty\n    // because it's not truncated in that case\n    return \"\"\n  }\n\n  const startTruncated = start > 0\n  const endTruncated = lastIndex > end\n\n  let from = startTruncated ? start + prefix.length : start\n  let to = endTruncated ? end - suffix.length : end\n  if (to > lastIndex) to = lastIndex\n\n  if (start >= lastIndex || from === to) {\n    return \"\"\n  }\n\n  let result = \"\"\n  while (from < to) {\n    result += line[from]\n    from++\n  }\n\n  if (result.length === 0) {\n    return \"\"\n  }\n  if (startTruncated && endTruncated) {\n    return `${prefix}${result}${suffix}`\n  }\n  if (startTruncated) {\n    return `${prefix}${result}`\n  }\n  if (endTruncated) {\n    return `${result}${suffix}`\n  }\n  return result\n}\n\nconst stringToSpaces = (string) => string.replace(/[^\\t]/g, \" \")\n\n// const getLineRangeLength = ({ start, end }) => end - start\n\nconst moveLineRangeUp = ({ start, end }, number) => {\n  return {\n    start: start - number,\n    end,\n  }\n}\n\nconst moveLineRangeDown = ({ start, end }, number) => {\n  return {\n    start,\n    end: end + number,\n  }\n}\n\nconst lineRangeWithinLines = ({ start, end }, lines) => {\n  return {\n    start: start < 0 ? 0 : start,\n    end: end > lines.length ? lines.length : end,\n  }\n}\n",
    "import { resolveUrl, readFileSystemNodeStat, urlToFilename, urlToExtension } from \"@jsenv/util\"\nimport { firstOperationMatching } from \"@jsenv/cancellation\"\n\nexport const resolveFile = async (fileUrl, { magicExtensions }) => {\n  const fileStat = await readFileSystemNodeStat(fileUrl, {\n    nullIfNotFound: true,\n  })\n\n  // file found\n  if (fileStat && fileStat.isFile()) {\n    return fileUrl\n  }\n\n  // directory found\n  if (fileStat && fileStat.isDirectory()) {\n    const indexFileSuffix = fileUrl.endsWith(\"/\") ? \"index\" : \"/index\"\n    const indexFileUrl = `${fileUrl}${indexFileSuffix}`\n    const extensionLeadingToAFile = await findExtensionLeadingToFile(indexFileUrl, magicExtensions)\n    if (extensionLeadingToAFile === null) {\n      return null\n    }\n    return `${indexFileUrl}${extensionLeadingToAFile}`\n  }\n\n  // file not found and it has an extension\n  const extension = urlToExtension(fileUrl)\n  if (extension !== \"\") {\n    return null\n  }\n\n  const extensionLeadingToAFile = await findExtensionLeadingToFile(fileUrl, magicExtensions)\n  // magic extension not found\n  if (extensionLeadingToAFile === null) {\n    return null\n  }\n\n  // magic extension worked\n  return `${fileUrl}${extensionLeadingToAFile}`\n}\n\nconst findExtensionLeadingToFile = async (fileUrl, magicExtensions) => {\n  const urlDirectoryUrl = resolveUrl(\"./\", fileUrl)\n  const urlFilename = urlToFilename(fileUrl)\n  const extensionLeadingToFile = await firstOperationMatching({\n    array: magicExtensions,\n    start: async (extensionCandidate) => {\n      const urlCandidate = `${urlDirectoryUrl}${urlFilename}${extensionCandidate}`\n      const stats = await readFileSystemNodeStat(urlCandidate, { nullIfNotFound: true })\n      return stats && stats.isFile() ? extensionCandidate : null\n    },\n    predicate: (extension) => Boolean(extension),\n  })\n  return extensionLeadingToFile || null\n}\n",
    "import { createDetailedMessage } from \"@jsenv/logger\"\nimport { resolveUrl, readFile, urlToExtension, urlToRelativeUrl } from \"@jsenv/util\"\nimport { normalizeImportMap, resolveImport } from \"@jsenv/import-map\"\nimport {\n  memoizeAsyncFunctionByUrl,\n  memoizeAsyncFunctionBySpecifierAndImporter,\n} from \"../memoizeAsyncFunction.js\"\nimport { parseSpecifiersFromFile } from \"./parseSpecifiersFromFile.js\"\nimport { showSource } from \"./showSource.js\"\nimport { resolveFile } from \"../resolveFile.js\"\n\nconst BARE_SPECIFIER_ERROR = {}\n\nexport const getImportMapFromJsFiles = async ({\n  warn,\n  importMap,\n  projectDirectoryUrl,\n  removeUnusedMappings,\n  magicExtensions = [\".js\", \".jsx\", \".ts\", \".tsx\", \".node\", \".json\"],\n}) => {\n  const projectPackageFileUrl = resolveUrl(\"./package.json\", projectDirectoryUrl)\n\n  const imports = {}\n  const scopes = {}\n  const addMapping = ({ scope, from, to }) => {\n    if (scope) {\n      scopes[scope] = {\n        ...(scopes[scope] || {}),\n        [from]: to,\n      }\n    } else {\n      imports[from] = to\n    }\n  }\n\n  const topLevelMappingsUsed = []\n  const scopedMappingsUsed = {}\n  const markMappingAsUsed = ({ scope, from, to }) => {\n    if (scope) {\n      if (scope in scopedMappingsUsed) {\n        scopedMappingsUsed[scope].push({ from, to })\n      } else {\n        scopedMappingsUsed[scope] = [{ from, to }]\n      }\n    } else {\n      topLevelMappingsUsed.push({ from, to })\n    }\n  }\n  const importMapNormalized = normalizeImportMap(importMap, projectDirectoryUrl)\n  const trackAndResolveImport = (specifier, importer) => {\n    return resolveImport({\n      specifier,\n      importer,\n      importMap: importMapNormalized,\n      defaultExtension: false,\n      onImportMapping: ({ scope, from }) => {\n        markMappingAsUsed({\n          scope,\n          from,\n          to: scope ? importMap.scopes[scope][from] : importMap.imports[from],\n        })\n      },\n      createBareSpecifierError: () => BARE_SPECIFIER_ERROR,\n    })\n  }\n\n  const visitFile = async (specifier, importer, { importedBy }) => {\n    let fileUrl\n    let gotBareSpecifierError = false\n\n    try {\n      fileUrl = trackAndResolveImport(specifier, importer)\n    } catch (e) {\n      if (e !== BARE_SPECIFIER_ERROR) {\n        throw e\n      }\n      if (importer === projectPackageFileUrl) {\n        // cannot find package main file (package.main is \"\" for instance)\n        // we can't discover main file and parse dependencies\n        return\n      }\n      gotBareSpecifierError = true\n      fileUrl = resolveUrl(specifier, importer)\n    }\n\n    const fileUrlOnFileSystem = await resolveFile(fileUrl, {\n      magicExtensions: magicExtensionWithImporterExtension(magicExtensions, importer),\n    })\n\n    if (!fileUrlOnFileSystem) {\n      warn(\n        createFileNotFoundWarning({\n          specifier,\n          importedBy,\n          fileUrl,\n          magicExtensions,\n        }),\n      )\n      return\n    }\n\n    const needsAutoMapping = fileUrlOnFileSystem !== fileUrl || gotBareSpecifierError\n    if (needsAutoMapping) {\n      const packageDirectoryUrl = packageDirectoryUrlFromUrl(fileUrl, projectDirectoryUrl)\n      const packageFileUrl = resolveUrl(\"package.json\", packageDirectoryUrl)\n      const autoMapping = {\n        scope:\n          packageFileUrl === projectPackageFileUrl\n            ? undefined\n            : `./${urlToRelativeUrl(packageDirectoryUrl, projectDirectoryUrl)}`,\n        from: specifier,\n        to: `./${urlToRelativeUrl(fileUrlOnFileSystem, projectDirectoryUrl)}`,\n      }\n      addMapping(autoMapping)\n      markMappingAsUsed(autoMapping)\n      warn(\n        formatAutoMappingSpecifierWarning({\n          specifier,\n          importedBy,\n          autoMapping,\n          closestPackageDirectoryUrl: packageDirectoryUrl,\n          closestPackageObject: await readFile(packageFileUrl, { as: \"json\" }),\n        }),\n      )\n    }\n\n    await visitFileContent(fileUrlOnFileSystem)\n  }\n\n  const visitFileContent = memoizeAsyncFunctionByUrl(async (fileUrl) => {\n    const fileContent = await readFileContent(fileUrl)\n    const specifiers = await parseSpecifiersFromFile(fileUrl, { fileContent })\n\n    await Promise.all(\n      Object.keys(specifiers).map(async (specifier) => {\n        const specifierInfo = specifiers[specifier]\n        await visitFileMemoized(specifier, fileUrl, {\n          importedBy: showSource({\n            url: fileUrl,\n            line: specifierInfo.line,\n            column: specifierInfo.column,\n            source: fileContent,\n          }),\n        })\n      }),\n    )\n  })\n  const visitFileMemoized = memoizeAsyncFunctionBySpecifierAndImporter(visitFile)\n\n  const readFileContent = memoizeAsyncFunctionByUrl((fileUrl) => {\n    return readFile(fileUrl, { as: \"string\" })\n  })\n\n  const projectPackageObject = await readFile(projectPackageFileUrl, { as: \"json\" })\n  await visitFileMemoized(projectPackageObject.name, projectPackageFileUrl, {\n    importedBy: projectPackageObject.exports\n      ? `${projectPackageFileUrl}#exports`\n      : `${projectPackageFileUrl}`,\n  })\n\n  if (removeUnusedMappings) {\n    const importsUsed = {}\n    topLevelMappingsUsed.forEach(({ from, to }) => {\n      importsUsed[from] = to\n    })\n    const scopesUsed = {}\n    Object.keys(scopedMappingsUsed).forEach((scope) => {\n      const mappingsUsed = scopedMappingsUsed[scope]\n      const scopedMappings = {}\n      mappingsUsed.forEach(({ from, to }) => {\n        scopedMappings[from] = to\n      })\n      scopesUsed[scope] = scopedMappings\n    })\n    return {\n      imports: importsUsed,\n      scopes: scopesUsed,\n    }\n  }\n\n  return { imports, scopes }\n}\n\nconst packageDirectoryUrlFromUrl = (url, projectDirectoryUrl) => {\n  const relativeUrl = urlToRelativeUrl(url, projectDirectoryUrl)\n\n  const lastNodeModulesDirectoryStartIndex = relativeUrl.lastIndexOf(\"node_modules/\")\n  if (lastNodeModulesDirectoryStartIndex === -1) {\n    return projectDirectoryUrl\n  }\n\n  const lastNodeModulesDirectoryEndIndex =\n    lastNodeModulesDirectoryStartIndex + `node_modules/`.length\n\n  const beforeNodeModulesLastDirectory = relativeUrl.slice(0, lastNodeModulesDirectoryEndIndex)\n  const afterLastNodeModulesDirectory = relativeUrl.slice(lastNodeModulesDirectoryEndIndex)\n  const remainingDirectories = afterLastNodeModulesDirectory.split(\"/\")\n\n  if (afterLastNodeModulesDirectory[0] === \"@\") {\n    // scoped package\n    return `${projectDirectoryUrl}${beforeNodeModulesLastDirectory}${remainingDirectories\n      .slice(0, 2)\n      .join(\"/\")}`\n  }\n  return `${projectDirectoryUrl}${beforeNodeModulesLastDirectory}${remainingDirectories[0]}/`\n}\n\nconst magicExtensionWithImporterExtension = (magicExtensions, importer) => {\n  const importerExtension = urlToExtension(importer)\n  const magicExtensionsWithoutImporterExtension = magicExtensions.filter(\n    (ext) => ext !== importerExtension,\n  )\n  return [importerExtension, ...magicExtensionsWithoutImporterExtension]\n}\n\nconst createFileNotFoundWarning = ({ specifier, importedBy, fileUrl, magicExtensions }) => {\n  return {\n    code: \"FILE_NOT_FOUND\",\n    message: createDetailedMessage(`Cannot find file for \"${specifier}\"`, {\n      \"specifier origin\": importedBy,\n      \"file url tried\": fileUrl,\n      ...(urlToExtension(fileUrl) === \"\"\n        ? { [\"extensions tried\"]: magicExtensions.join(`, `) }\n        : {}),\n    }),\n  }\n}\n\nconst formatAutoMappingSpecifierWarning = ({\n  importedBy,\n  autoMapping,\n  closestPackageDirectoryUrl,\n  closestPackageObject,\n}) => {\n  return {\n    code: \"AUTO_MAPPING\",\n    message: createDetailedMessage(`Auto mapping ${autoMapping.from} to ${autoMapping.to}.`, {\n      \"specifier origin\": importedBy,\n      \"suggestion\": decideAutoMappingSuggestion({\n        autoMapping,\n        closestPackageDirectoryUrl,\n        closestPackageObject,\n      }),\n    }),\n  }\n}\n\nconst decideAutoMappingSuggestion = ({\n  autoMapping,\n  closestPackageDirectoryUrl,\n  closestPackageObject,\n}) => {\n  if (typeof closestPackageObject.importmap === \"string\") {\n    const packageImportmapFileUrl = resolveUrl(\n      closestPackageObject.importmap,\n      closestPackageDirectoryUrl,\n    )\n\n    return `To get rid of this warning, add an explicit mapping into importmap file.\n${mappingToImportmapString(autoMapping)}\ninto ${packageImportmapFileUrl}.`\n  }\n\n  return `To get rid of this warning, add an explicit mapping into package.json.\n${mappingToExportsFieldString(autoMapping)}\ninto ${closestPackageDirectoryUrl}package.json.`\n}\n\nconst mappingToImportmapString = ({ scope, from, to }) => {\n  if (scope) {\n    return JSON.stringify(\n      {\n        scopes: {\n          [scope]: {\n            [from]: to,\n          },\n        },\n      },\n      null,\n      \"  \",\n    )\n  }\n\n  return JSON.stringify(\n    {\n      imports: {\n        [from]: to,\n      },\n    },\n    null,\n    \"  \",\n  )\n}\n\nconst mappingToExportsFieldString = ({ scope, from, to }) => {\n  if (scope) {\n    const scopeUrl = resolveUrl(scope, \"file://\")\n    const toUrl = resolveUrl(to, \"file://\")\n    to = `./${urlToRelativeUrl(toUrl, scopeUrl)}`\n  }\n\n  return JSON.stringify(\n    {\n      exports: {\n        [from]: to,\n      },\n    },\n    null,\n    \"  \",\n  )\n}\n",
    "export const optimizeImportMap = ({ imports, scopes }) => {\n  // remove useless duplicates (scoped key+value already defined on imports)\n  const scopesOptimized = {}\n  Object.keys(scopes).forEach((scope) => {\n    const scopeMappings = scopes[scope]\n    const scopeMappingsOptimized = {}\n    Object.keys(scopeMappings).forEach((mappingKey) => {\n      const topLevelMappingValue = imports[mappingKey]\n      const mappingValue = scopeMappings[mappingKey]\n      if (!topLevelMappingValue || topLevelMappingValue !== mappingValue) {\n        scopeMappingsOptimized[mappingKey] = mappingValue\n      }\n    })\n    if (Object.keys(scopeMappingsOptimized).length > 0) {\n      scopesOptimized[scope] = scopeMappingsOptimized\n    }\n  })\n  return { imports, scopes: scopesOptimized }\n}\n",
    "import { createDetailedMessage } from \"@jsenv/logger\"\nimport { resolveUrl, urlToFileSystemPath, urlToExtension } from \"@jsenv/util\"\nimport { resolveFile } from \"../resolveFile.js\"\n\nconst magicExtensions = [\".js\", \".json\", \".node\"]\n\nexport const resolvePackageMain = ({\n  warn,\n  packagesExportsPreference,\n  packageFileUrl,\n  packageJsonObject,\n}) => {\n  if (packagesExportsPreference.includes(\"import\") && \"module\" in packageJsonObject) {\n    return resolveMainFile({\n      warn,\n      packageFileUrl,\n      packageMainFieldName: \"module\",\n      packageMainFieldValue: packageJsonObject.module,\n    })\n  }\n\n  if (packagesExportsPreference.includes(\"import\") && \"jsnext:main\" in packageJsonObject) {\n    return resolveMainFile({\n      warn,\n      packageFileUrl,\n      packageMainFieldName: \"jsnext:main\",\n      packageMainFieldValue: packageJsonObject[\"jsnext:main\"],\n    })\n  }\n\n  if (\n    packagesExportsPreference.includes(\"browser\") &&\n    \"browser\" in packageJsonObject &&\n    // when it's an object it means some files\n    // should be replaced with an other, let's ignore this when we are searching\n    // for the main file\n    typeof packageJsonObject.browser === \"string\"\n  ) {\n    return resolveMainFile({\n      warn,\n      packageFileUrl,\n      packageMainFieldName: \"browser\",\n      packageMainFieldValue: packageJsonObject.browser,\n    })\n  }\n\n  if (\"main\" in packageJsonObject) {\n    return resolveMainFile({\n      warn,\n      packageFileUrl,\n      packageMainFieldName: \"main\",\n      packageMainFieldValue: packageJsonObject.main,\n    })\n  }\n\n  return resolveMainFile({\n    warn,\n    packageFileUrl,\n    packageMainFieldName: \"default\",\n    packageMainFieldValue: \"index\",\n  })\n}\n\nconst resolveMainFile = async ({\n  warn,\n  packageFileUrl,\n  packageMainFieldName,\n  packageMainFieldValue,\n}) => {\n  // main is explicitely empty meaning\n  // it is assumed that we should not find a file\n  if (packageMainFieldValue === \"\") {\n    return null\n  }\n\n  const packageDirectoryUrl = resolveUrl(\"./\", packageFileUrl)\n  const mainFileRelativeUrl = packageMainFieldValue.endsWith(\"/\")\n    ? `${packageMainFieldValue}index`\n    : packageMainFieldValue\n\n  const mainFileUrlFirstCandidate = resolveUrl(mainFileRelativeUrl, packageFileUrl)\n\n  if (!mainFileUrlFirstCandidate.startsWith(packageDirectoryUrl)) {\n    warn(\n      createPackageMainFileMustBeRelativeWarning({\n        packageMainFieldName,\n        packageMainFieldValue,\n        packageFileUrl,\n      }),\n    )\n    return null\n  }\n\n  const mainFileUrl = await resolveFile(mainFileUrlFirstCandidate, {\n    magicExtensions,\n  })\n\n  if (!mainFileUrl) {\n    // we know in advance this remapping does not lead to an actual file.\n    // we only warn because we have no guarantee this remapping will actually be used\n    // in the codebase.\n    // warn only if there is actually a main field\n    // otherwise the package.json is missing the main field\n    // it certainly means it's not important\n    if (packageMainFieldName !== \"default\") {\n      warn(\n        createPackageMainFileNotFoundWarning({\n          specifier: packageMainFieldValue,\n          importedIn: `${packageFileUrl}#${packageMainFieldName}`,\n          fileUrl: mainFileUrlFirstCandidate,\n          magicExtensions,\n        }),\n      )\n    }\n    return mainFileUrlFirstCandidate\n  }\n\n  return mainFileUrl\n}\n\nconst createPackageMainFileMustBeRelativeWarning = ({\n  packageMainFieldName,\n  packageMainFieldValue,\n  packageFileUrl,\n}) => {\n  return {\n    code: \"PACKAGE_MAIN_FILE_MUST_BE_RELATIVE\",\n    message: `${packageMainFieldName} field in package.json must be inside package.json folder.\n--- ${packageMainFieldName} ---\n${packageMainFieldValue}\n--- package.json path ---\n${urlToFileSystemPath(packageFileUrl)}`,\n  }\n}\n\nconst createPackageMainFileNotFoundWarning = ({\n  specifier,\n  importedIn,\n  fileUrl,\n  magicExtensions,\n}) => {\n  return {\n    code: \"PACKAGE_MAIN_FILE_NOT_FOUND\",\n    message: createDetailedMessage(`Cannot find package main file \"${specifier}\"`, {\n      \"imported in\": importedIn,\n      \"file url tried\": fileUrl,\n      ...(urlToExtension(fileUrl) === \"\"\n        ? { [\"extensions tried\"]: magicExtensions.join(`, `) }\n        : {}),\n    }),\n  }\n}\n",
    "import { resolveUrl, moveImportMap } from \"@jsenv/import-map\"\nimport { readFile, urlToFileSystemPath } from \"@jsenv/util\"\n\nexport const visitPackageImportMap = async ({\n  warn,\n  packageFileUrl,\n  packageJsonObject,\n  packageImportmap = packageJsonObject.importmap,\n  projectDirectoryUrl,\n}) => {\n  if (typeof packageImportmap === \"undefined\") {\n    return {}\n  }\n\n  if (typeof packageImportmap === \"string\") {\n    const importmapFileUrl = resolveUrl(packageImportmap, packageFileUrl)\n    const importmap = await readFile(importmapFileUrl, { as: \"json\" })\n    return moveImportMap(importmap, importmapFileUrl, projectDirectoryUrl)\n  }\n\n  if (typeof packageImportmap === \"object\" && packageImportmap !== null) {\n    return packageImportmap\n  }\n\n  warn(\n    createPackageImportMapUnexpectedWarning({\n      packageImportmap,\n      packageFileUrl,\n    }),\n  )\n  return {}\n}\n\nconst createPackageImportMapUnexpectedWarning = ({ packageImportmap, packageFileUrl }) => {\n  return {\n    code: \"PACKAGE_IMPORTMAP_UNEXPECTED\",\n    message: `unexpected value in package.json importmap field: value must be a string or an object.\n--- value ---\n${packageImportmap}\n--- package.json path ---\n${urlToFileSystemPath(packageFileUrl)}`,\n  }\n}\n",
    "export const specifierIsRelative = (specifier) => {\n  if (specifier.startsWith(\"//\")) {\n    return false\n  }\n  if (specifier.startsWith(\"../\")) {\n    return false\n  }\n  // starts with http:// or file:// or ftp: for instance\n  if (/^[a-zA-Z]+\\:/.test(specifier)) {\n    return false\n  }\n  return true\n}\n",
    "// https://nodejs.org/dist/latest-v13.x/docs/api/esm.html#esm_package_exports\n\nimport { urlToFileSystemPath, urlToRelativeUrl, resolveUrl } from \"@jsenv/util\"\nimport { specifierIsRelative } from \"./specifierIsRelative.js\"\n\nexport const visitPackageExports = ({\n  warn,\n  packageFileUrl,\n  packageJsonObject,\n  packageExports = packageJsonObject.exports,\n  packageName = packageJsonObject.name,\n  projectDirectoryUrl,\n  packagesExportsPreference,\n  onExport,\n}) => {\n  const packageDirectoryUrl = resolveUrl(\"./\", packageFileUrl)\n  const packageDirectoryRelativeUrl = urlToRelativeUrl(packageDirectoryUrl, projectDirectoryUrl)\n\n  visitExportsSubpath(packageExports, packagesExportsPreference, {\n    onUnexpectedPackageExports: ({ packageExportsValue, packageExportsValuePath }) => {\n      warn(\n        createExportsValueWarning({\n          packageExportsValue,\n          packageExportsValuePath,\n          packageFileUrl,\n        }),\n      )\n    },\n    onMixedPackageExports: ({ packageExportsValue, packageExportsValuePath }) => {\n      // see https://nodejs.org/dist/latest-v13.x/docs/api/esm.html#esm_exports_sugar\n      warn(\n        createExportsMixedWarning({\n          packageExportsValue,\n          packageExportsValuePath,\n          packageFileUrl,\n        }),\n      )\n    },\n    onSubpathPackageExport: ({ key, value, valuePath }) => {\n      if (!specifierIsRelative(key)) {\n        warn(\n          createExportsMappingKeyMustBeRelativeWarning({\n            key,\n            keyPath: valuePath.slice(0, -1),\n            packageFileUrl,\n          }),\n        )\n        return\n      }\n      if (typeof value !== \"string\") {\n        warn(\n          createExportsMappingValueMustBeAStringWarning({\n            value,\n            valuePath,\n            packageFileUrl,\n          }),\n        )\n        return\n      }\n      if (!specifierIsRelative(value)) {\n        warn(\n          createExportsMappingValueMustBeRelativeWarning({\n            value,\n            valuePath,\n            packageFileUrl,\n          }),\n        )\n        return\n      }\n\n      onExport({\n        key: specifierToSource(key, packageName),\n        value: addressToDestination(value, packageDirectoryRelativeUrl),\n      })\n    },\n  })\n}\n\nconst visitExportsSubpath = (\n  packageExports,\n  packageExportsConditions,\n  { onUnexpectedPackageExports, onMixedPackageExports, onSubpathPackageExport },\n) => {\n  const visitValue = (packageExportsValue, { valuePath }) => {\n    // false is allowed as alternative to exports: {}\n    if (packageExportsValue === false) {\n      return\n    }\n\n    if (typeof packageExportsValue === \"string\") {\n      const firstNonConditionKey = valuePath\n        .slice()\n        .reverse()\n        .find((key) => key.startsWith(\".\"))\n      const key = firstNonConditionKey || \".\"\n      onSubpathPackageExport({\n        value: packageExportsValue,\n        valuePath,\n        key,\n      })\n      return\n    }\n\n    if (typeof packageExportsValue !== \"object\" && packageExportsValue !== null) {\n      onUnexpectedPackageExports({\n        packageExportsValue,\n        packageExportsValuePath: valuePath,\n      })\n      return\n    }\n\n    const keys = Object.keys(packageExportsValue)\n    const everyKeyDoesNotStartsWithDot = keys.every((key) => !key.startsWith(\".\"))\n    if (everyKeyDoesNotStartsWithDot) {\n      const bestConditionKey = findBestConditionKey(keys, packageExportsConditions)\n      if (!bestConditionKey) {\n        return\n      }\n      const bestExports = packageExportsValue[bestConditionKey]\n      visitValue(bestExports, {\n        valuePath: [...valuePath, bestConditionKey],\n      })\n      return\n    }\n\n    const everyKeyStartsWithDot = keys.every((key) => key.startsWith(\".\"))\n    if (everyKeyStartsWithDot) {\n      keys.forEach((key) => {\n        visitValue(packageExportsValue[key], {\n          valuePath: [...valuePath, key],\n        })\n      })\n      return\n    }\n\n    onMixedPackageExports({\n      packageExportsValue,\n      packageExportsValuePath: valuePath,\n    })\n  }\n  visitValue(packageExports, {\n    valuePath: [\"exports\"],\n  })\n}\n\nconst findBestConditionKey = (availableKeys, exportsConditions) => {\n  const conditionKey = exportsConditions.find((key) => availableKeys.includes(key))\n  if (conditionKey) {\n    return conditionKey\n  }\n\n  if (availableKeys.includes(\"default\")) {\n    return \"default\"\n  }\n\n  return undefined\n}\n\nconst specifierToSource = (specifier, packageName) => {\n  if (specifier === \".\") {\n    return packageName\n  }\n\n  if (specifier[0] === \"/\") {\n    return specifier\n  }\n\n  if (specifier.startsWith(\"./\")) {\n    return `${packageName}${specifier.slice(1)}`\n  }\n\n  return `${packageName}/${specifier}`\n}\n\nconst addressToDestination = (address, packageDirectoryRelativeUrl) => {\n  if (address[0] === \"/\") {\n    return address\n  }\n\n  if (address.startsWith(\"./\")) {\n    return `./${packageDirectoryRelativeUrl}${address.slice(2)}`\n  }\n\n  return `./${packageDirectoryRelativeUrl}${address}`\n}\n\nconst createExportsValueWarning = ({\n  packageExportsValue,\n  packageExportsValuePath,\n  packageFileUrl,\n}) => {\n  return {\n    code: \"EXPORTS_VALUE\",\n    message: `unexpected value in package.json exports field: value must be an object or a string.\n--- value ---\n${packageExportsValue}\n--- value path ---\n${packageExportsValuePath.join(\".\")}\n--- package.json path ---\n${urlToFileSystemPath(packageFileUrl)}`,\n  }\n}\n\nconst createExportsMixedWarning = ({\n  packageExportsValue,\n  packageExportsValuePath,\n  packageFileUrl,\n}) => {\n  return {\n    code: \"EXPORTS_MIXED\",\n    message: `unexpected package.json exports field: cannot mix conditional and subpath exports.\n--- value ---\n${JSON.stringify(packageExportsValue, null, \"  \")}\n--- value path ---\n${packageExportsValuePath.join(\".\")}\n--- package.json path ---\n${urlToFileSystemPath(packageFileUrl)}`,\n  }\n}\n\nconst createExportsMappingKeyMustBeRelativeWarning = ({ key, keyPath, packageFileUrl }) => {\n  return {\n    code: \"EXPORTS_MAPPING_KEY_MUST_BE_RELATIVE\",\n    message: `unexpected key in package.json exports field: key must be relative.\n--- key ---\n${key}\n--- key path ---\n${keyPath.join(\".\")}\n--- package.json path ---\n${urlToFileSystemPath(packageFileUrl)}`,\n  }\n}\n\nconst createExportsMappingValueMustBeAStringWarning = ({ value, valuePath, packageFileUrl }) => {\n  return {\n    code: \"EXPORTS_MAPPING_VALUE_MUST_BE_A_STRING\",\n    message: `unexpected value in package.json exports field: value must be a string.\n--- value ---\n${value}\n--- value path ---\n${valuePath.join(\".\")}\n--- package.json path ---\n${urlToFileSystemPath(packageFileUrl)}`,\n  }\n}\n\nconst createExportsMappingValueMustBeRelativeWarning = ({ value, valuePath, packageFileUrl }) => {\n  return {\n    code: \"EXPORTS_MAPPING_VALUE_MUST_BE_RELATIVE\",\n    message: `unexpected value in package.json exports field: value must be relative.\n--- value ---\n${value}\n--- value path ---\n${valuePath.join(\".\")}\n--- package.json path ---\n${urlToFileSystemPath(packageFileUrl)}`,\n  }\n}\n",
    "export const applyPackageManualOverride = (packageObject, packagesManualOverrides) => {\n  const { name, version } = packageObject\n  const overrideKey = Object.keys(packagesManualOverrides).find((overrideKeyCandidate) => {\n    if (name === overrideKeyCandidate) {\n      return true\n    }\n    if (`${name}@${version}` === overrideKeyCandidate) {\n      return true\n    }\n    return false\n  })\n  if (overrideKey) {\n    return composeObject(packageObject, packagesManualOverrides[overrideKey])\n  }\n  return packageObject\n}\n\nconst composeObject = (leftObject, rightObject) => {\n  const composedObject = {\n    ...leftObject,\n  }\n  Object.keys(rightObject).forEach((key) => {\n    const rightValue = rightObject[key]\n\n    if (rightValue === null || typeof rightValue !== \"object\" || key in leftObject === false) {\n      composedObject[key] = rightValue\n    } else {\n      const leftValue = leftObject[key]\n      if (leftValue === null || typeof leftValue !== \"object\") {\n        composedObject[key] = rightValue\n      } else {\n        composedObject[key] = composeObject(leftValue, rightValue)\n      }\n    }\n  })\n  return composedObject\n}\n",
    "import { readFile, urlToFileSystemPath } from \"@jsenv/util\"\nimport { applyPackageManualOverride } from \"./applyPackageManualOverride.js\"\n\nexport const PACKAGE_NOT_FOUND = {}\nexport const PACKAGE_WITH_SYNTAX_ERROR = {}\n\nexport const readPackageFile = async (packageFileUrl, packagesManualOverrides) => {\n  try {\n    const packageObject = await readFile(packageFileUrl, { as: \"json\" })\n    return applyPackageManualOverride(packageObject, packagesManualOverrides)\n  } catch (e) {\n    if (e.code === \"ENOENT\") {\n      return PACKAGE_NOT_FOUND\n    }\n\n    if (e.name === \"SyntaxError\") {\n      console.error(formatPackageSyntaxErrorLog({ syntaxError: e, packageFileUrl }))\n      return PACKAGE_WITH_SYNTAX_ERROR\n    }\n\n    throw e\n  }\n}\n\nconst formatPackageSyntaxErrorLog = ({ syntaxError, packageFileUrl }) => {\n  return `\nerror while parsing package.json.\n--- syntax error message ---\n${syntaxError.message}\n--- package.json path ---\n${urlToFileSystemPath(packageFileUrl)}\n`\n}\n",
    "import { firstOperationMatching } from \"@jsenv/cancellation\"\nimport { urlToRelativeUrl, resolveUrl } from \"@jsenv/util\"\nimport { memoizeAsyncFunctionByUrl } from \"../memoizeAsyncFunction.js\"\nimport { readPackageFile, PACKAGE_NOT_FOUND, PACKAGE_WITH_SYNTAX_ERROR } from \"./readPackageFile.js\"\n\nexport const createFindNodeModulePackage = (packagesManualOverrides) => {\n  const readPackageFileMemoized = memoizeAsyncFunctionByUrl((packageFileUrl) => {\n    return readPackageFile(packageFileUrl, packagesManualOverrides)\n  })\n\n  return ({ projectDirectoryUrl, packageFileUrl, dependencyName }) => {\n    const nodeModuleCandidates = getNodeModuleCandidates(packageFileUrl, projectDirectoryUrl)\n\n    return firstOperationMatching({\n      array: nodeModuleCandidates,\n      start: async (nodeModuleCandidate) => {\n        const packageFileUrlCandidate = `${projectDirectoryUrl}${nodeModuleCandidate}${dependencyName}/package.json`\n        const packageObjectCandidate = await readPackageFileMemoized(packageFileUrlCandidate)\n        return {\n          packageFileUrl: packageFileUrlCandidate,\n          packageJsonObject: packageObjectCandidate,\n          syntaxError: packageObjectCandidate === PACKAGE_WITH_SYNTAX_ERROR,\n        }\n      },\n      predicate: ({ packageJsonObject }) => {\n        return packageJsonObject !== PACKAGE_NOT_FOUND\n      },\n    })\n  }\n}\n\nconst getNodeModuleCandidates = (fileUrl, projectDirectoryUrl) => {\n  const fileDirectoryUrl = resolveUrl(\"./\", fileUrl)\n\n  if (fileDirectoryUrl === projectDirectoryUrl) {\n    return [`node_modules/`]\n  }\n\n  const fileDirectoryRelativeUrl = urlToRelativeUrl(fileDirectoryUrl, projectDirectoryUrl)\n  const candidates = []\n  const relativeNodeModuleDirectoryArray = fileDirectoryRelativeUrl.split(\"node_modules/\")\n  // remove the first empty string\n  relativeNodeModuleDirectoryArray.shift()\n\n  let i = relativeNodeModuleDirectoryArray.length\n  while (i--) {\n    candidates.push(\n      `node_modules/${relativeNodeModuleDirectoryArray\n        .slice(0, i + 1)\n        .join(\"node_modules/\")}node_modules/`,\n    )\n  }\n\n  return [...candidates, \"node_modules/\"]\n}\n",
    "import { createDetailedMessage } from \"@jsenv/logger\"\nimport {\n  resolveUrl,\n  urlToRelativeUrl,\n  assertAndNormalizeDirectoryUrl,\n  urlToFileSystemPath,\n  urlToBasename,\n  readFile,\n} from \"@jsenv/util\"\nimport { optimizeImportMap } from \"../optimizeImportMap.js\"\nimport { resolvePackageMain } from \"./resolvePackageMain.js\"\nimport { visitPackageImportMap } from \"./visitPackageImportMap.js\"\nimport { visitPackageExports } from \"./visitPackageExports.js\"\nimport { createFindNodeModulePackage } from \"./node-module-resolution.js\"\n\nexport const getImportMapFromPackageFiles = async ({\n  // nothing is actually listening for this cancellationToken for now\n  // it's not very important but it would be better to register on it\n  // an stops what we are doing if asked to do so\n  // cancellationToken = createCancellationTokenForProcess(),\n  logger,\n  warn,\n  projectDirectoryUrl,\n  projectPackageDevDependenciesIncluded = process.env.NODE_ENV !== \"production\",\n  packagesExportsPreference = [\"import\", \"browser\"],\n  packagesExportsIncluded = true,\n  packagesManualOverrides = {},\n  packageIncludedPredicate = () => true,\n}) => {\n  projectDirectoryUrl = assertAndNormalizeDirectoryUrl(projectDirectoryUrl)\n\n  const projectPackageFileUrl = resolveUrl(\"./package.json\", projectDirectoryUrl)\n  const findNodeModulePackage = createFindNodeModulePackage(packagesManualOverrides)\n\n  const imports = {}\n  const scopes = {}\n  const addMapping = ({ scope, from, to }) => {\n    if (scope) {\n      // when a package says './' maps to './'\n      // we must add something to say if we are already inside the package\n      // no need to ensure leading slash are scoped to the package\n      if (from === \"./\" && to === scope) {\n        addMapping({\n          scope,\n          from: scope,\n          to: scope,\n        })\n        const packageName = scope.slice(scope.lastIndexOf(\"node_modules/\") + `node_modules/`.length)\n        addMapping({\n          scope,\n          from: packageName,\n          to: scope,\n        })\n      }\n\n      scopes[scope] = {\n        ...(scopes[scope] || {}),\n        [from]: to,\n      }\n    } else {\n      // we could think it's useless to remap from with to\n      // however it can be used to ensure a weaker remapping\n      // does not win over this specific file or folder\n      if (from === to) {\n        /**\n         * however remapping '/' to '/' is truly useless\n         * moreover it would make wrapImportMap create something like\n         * {\n         *   imports: {\n         *     \"/\": \"/.dist/best/\"\n         *   }\n         * }\n         * that would append the wrapped folder twice\n         * */\n        if (from === \"/\") return\n      }\n      imports[from] = to\n    }\n  }\n\n  const seen = {}\n  const markPackageAsSeen = (packageFileUrl, importerPackageFileUrl) => {\n    if (packageFileUrl in seen) {\n      seen[packageFileUrl].push(importerPackageFileUrl)\n    } else {\n      seen[packageFileUrl] = [importerPackageFileUrl]\n    }\n  }\n  const packageIsSeen = (packageFileUrl, importerPackageFileUrl) => {\n    return packageFileUrl in seen && seen[packageFileUrl].includes(importerPackageFileUrl)\n  }\n\n  const visit = async ({\n    packageFileUrl,\n    packageName,\n    packageJsonObject,\n    importerPackageFileUrl,\n    importerPackageJsonObject,\n    includeDevDependencies,\n  }) => {\n    if (!packageIncludedPredicate({ packageName, packageFileUrl, packageJsonObject })) {\n      return\n    }\n\n    await visitDependencies({\n      packageFileUrl,\n      packageJsonObject,\n      includeDevDependencies,\n    })\n    await visitPackage({\n      packageFileUrl,\n      packageName,\n      packageJsonObject,\n      importerPackageFileUrl,\n      importerPackageJsonObject,\n    })\n  }\n\n  const visitPackage = async ({\n    packageFileUrl,\n    packageName,\n    packageJsonObject,\n    importerPackageFileUrl,\n  }) => {\n    const packageInfo = computePackageInfo({\n      packageFileUrl,\n      packageName,\n      importerPackageFileUrl,\n    })\n\n    await visitPackageMain({\n      packageFileUrl,\n      packageName,\n      packageJsonObject,\n      packageInfo,\n    })\n\n    const {\n      importerIsRoot,\n      importerRelativeUrl,\n      packageIsRoot,\n      packageDirectoryRelativeUrl,\n      // packageDirectoryUrl,\n      // packageDirectoryUrlExpected,\n    } = packageInfo\n\n    const addImportMapForPackage = (importMap) => {\n      if (packageIsRoot) {\n        const { imports = {}, scopes = {} } = importMap\n        Object.keys(imports).forEach((from) => {\n          addMapping({\n            from,\n            to: imports[from],\n          })\n        })\n        Object.keys(scopes).forEach((scope) => {\n          const scopeMappings = scopes[scope]\n          Object.keys(scopeMappings).forEach((key) => {\n            addMapping({\n              scope,\n              from: key,\n              to: scopeMappings[key],\n            })\n          })\n        })\n        return\n      }\n\n      const { imports = {}, scopes = {} } = importMap\n      const scope = `./${packageDirectoryRelativeUrl}`\n      Object.keys(imports).forEach((from) => {\n        const to = imports[from]\n        const toMoved = moveMappingValue(to, packageFileUrl, projectDirectoryUrl)\n        addMapping({\n          scope,\n          from,\n          to: toMoved,\n        })\n      })\n      Object.keys(scopes).forEach((scope) => {\n        const scopeMappings = scopes[scope]\n        const scopeMoved = moveMappingValue(scope, packageFileUrl, projectDirectoryUrl)\n        Object.keys(scopeMappings).forEach((key) => {\n          const to = scopeMappings[key]\n          const toMoved = moveMappingValue(to, packageFileUrl, projectDirectoryUrl)\n          addMapping({\n            scope: scopeMoved,\n            from: key,\n            to: toMoved,\n          })\n        })\n      })\n    }\n\n    const addMappingsForPackageAndImporter = (mappings) => {\n      if (packageIsRoot) {\n        Object.keys(mappings).forEach((from) => {\n          const to = mappings[from]\n          addMapping({\n            from,\n            to,\n          })\n        })\n        return\n      }\n\n      if (importerIsRoot) {\n        // own package mappings available to himself\n        Object.keys(mappings).forEach((from) => {\n          const to = mappings[from]\n          addMapping({\n            scope: `./${packageDirectoryRelativeUrl}`,\n            from,\n            to,\n          })\n          addMapping({ from, to })\n        })\n\n        // if importer is root no need to make package mappings available to the importer\n        // because they are already on top level mappings\n        return\n      }\n\n      Object.keys(mappings).forEach((from) => {\n        const to = mappings[from]\n        // own package exports available to himself\n        addMapping({\n          scope: `./${packageDirectoryRelativeUrl}`,\n          from,\n          to,\n        })\n        // now make package exports available to the importer\n        // here if the importer is himself we could do stuff\n        // we should even handle the case earlier to prevent top level remapping\n        addMapping({\n          scope: `./${importerRelativeUrl}`,\n          from,\n          to,\n        })\n      })\n    }\n\n    const importsFromPackageField = await visitPackageImportMap({\n      warn,\n      packageFileUrl,\n      packageJsonObject,\n      projectDirectoryUrl,\n    })\n    addImportMapForPackage(importsFromPackageField)\n\n    if (packagesExportsIncluded && \"exports\" in packageJsonObject) {\n      const mappingsFromPackageExports = {}\n      visitPackageExports({\n        warn,\n        packageFileUrl,\n        packageJsonObject,\n        packageName,\n        projectDirectoryUrl,\n        packagesExportsPreference,\n        onExport: ({ key, value }) => {\n          const from = key\n          const to = value\n\n          if (from.indexOf(\"*\") === -1) {\n            mappingsFromPackageExports[from] = to\n            return\n          }\n\n          if (\n            from.endsWith(\"/*\") &&\n            to.endsWith(\"/*\") &&\n            // ensure ends with '*' AND there is only one '*' occurence\n            to.indexOf(\"*\") === to.length - 1\n          ) {\n            const fromWithouTrailingStar = from.slice(0, -1)\n            const toWithoutTrailingStar = to.slice(0, -1)\n            mappingsFromPackageExports[fromWithouTrailingStar] = toWithoutTrailingStar\n            return\n          }\n\n          warn(\n            createExportsWildcardIgnoredWarning({\n              key,\n              value,\n              packageFileUrl,\n            }),\n          )\n        },\n      })\n      addMappingsForPackageAndImporter(mappingsFromPackageExports)\n    }\n  }\n\n  const visitPackageMain = async ({\n    packageFileUrl,\n    packageName,\n    packageJsonObject,\n    packageInfo: {\n      importerIsRoot,\n      importerRelativeUrl,\n      packageDirectoryUrl,\n      packageDirectoryUrlExpected,\n    },\n  }) => {\n    const mainFileUrl = await resolvePackageMain({\n      warn,\n      packagesExportsPreference,\n      packageFileUrl,\n      packageJsonObject,\n    })\n\n    // it's possible to have no main\n    // like { main: \"\" } in package.json\n    // or a main that does not lead to an actual file\n    if (mainFileUrl === null) {\n      return\n    }\n\n    const mainFileRelativeUrl = urlToRelativeUrl(mainFileUrl, projectDirectoryUrl)\n    const from = packageName\n    const to = `./${mainFileRelativeUrl}`\n\n    if (importerIsRoot) {\n      addMapping({ from, to })\n    } else {\n      addMapping({\n        scope: `./${importerRelativeUrl}`,\n        from,\n        to,\n      })\n    }\n    if (packageDirectoryUrl !== packageDirectoryUrlExpected) {\n      addMapping({\n        scope: `./${importerRelativeUrl}`,\n        from,\n        to,\n      })\n    }\n  }\n\n  const visitDependencies = async ({\n    packageFileUrl,\n    packageJsonObject,\n    includeDevDependencies,\n  }) => {\n    const dependencyMap = packageDependenciesFromPackageObject(packageJsonObject, {\n      includeDevDependencies,\n    })\n\n    await Promise.all(\n      Object.keys(dependencyMap).map(async (dependencyName) => {\n        const dependencyInfo = dependencyMap[dependencyName]\n        await visitDependency({\n          packageFileUrl,\n          packageJsonObject,\n          dependencyName,\n          dependencyInfo,\n        })\n      }),\n    )\n  }\n\n  const visitDependency = async ({\n    packageFileUrl,\n    packageJsonObject,\n    dependencyName,\n    dependencyInfo,\n  }) => {\n    const dependencyData = await findDependency({\n      packageFileUrl,\n      dependencyName,\n    })\n    if (!dependencyData) {\n      const cannotFindPackageWarning = createCannotFindPackageWarning({\n        dependencyName,\n        dependencyInfo,\n        packageFileUrl,\n      })\n      if (dependencyInfo.isOptional) {\n        logger.debug(cannotFindPackageWarning.message)\n      } else {\n        warn(cannotFindPackageWarning)\n      }\n\n      return\n    }\n    if (dependencyData.syntaxError) {\n      return\n    }\n\n    const {\n      packageFileUrl: dependencyPackageFileUrl,\n      packageJsonObject: dependencyPackageJsonObject,\n    } = dependencyData\n\n    if (packageIsSeen(dependencyPackageFileUrl, packageFileUrl)) {\n      return\n    }\n    markPackageAsSeen(dependencyPackageFileUrl, packageFileUrl)\n    await visit({\n      packageFileUrl: dependencyPackageFileUrl,\n      packageName: dependencyName,\n      packageJsonObject: dependencyPackageJsonObject,\n      importerPackageFileUrl: packageFileUrl,\n      importerPackageJsonObject: packageJsonObject,\n    })\n  }\n\n  const computePackageInfo = ({ packageFileUrl, packageName, importerPackageFileUrl }) => {\n    const importerIsRoot = importerPackageFileUrl === projectPackageFileUrl\n\n    const importerPackageDirectoryUrl = resolveUrl(\"./\", importerPackageFileUrl)\n\n    const importerRelativeUrl = urlToRelativeUrl(importerPackageDirectoryUrl, projectDirectoryUrl)\n\n    const packageIsRoot = packageFileUrl === projectPackageFileUrl\n\n    const packageDirectoryUrl = resolveUrl(\"./\", packageFileUrl)\n\n    const packageDirectoryUrlExpected = `${importerPackageDirectoryUrl}node_modules/${packageName}/`\n\n    const packageDirectoryRelativeUrl = urlToRelativeUrl(packageDirectoryUrl, projectDirectoryUrl)\n\n    return {\n      importerIsRoot,\n      importerRelativeUrl,\n      packageIsRoot,\n      packageDirectoryUrl,\n      packageDirectoryUrlExpected,\n      packageDirectoryRelativeUrl,\n    }\n  }\n\n  const dependenciesCache = {}\n  const findDependency = ({ packageFileUrl, dependencyName }) => {\n    if (packageFileUrl in dependenciesCache === false) {\n      dependenciesCache[packageFileUrl] = {}\n    }\n    if (dependencyName in dependenciesCache[packageFileUrl]) {\n      return dependenciesCache[packageFileUrl][dependencyName]\n    }\n    const dependencyPromise = findNodeModulePackage({\n      projectDirectoryUrl,\n      packageFileUrl,\n      dependencyName,\n    })\n    dependenciesCache[packageFileUrl][dependencyName] = dependencyPromise\n    return dependencyPromise\n  }\n\n  const projectPackageJsonObject = await readFile(projectPackageFileUrl, { as: \"json\" })\n  const importerPackageFileUrl = projectPackageFileUrl\n  markPackageAsSeen(projectPackageFileUrl, importerPackageFileUrl)\n\n  const packageName = projectPackageJsonObject.name\n  if (typeof packageName !== \"string\") {\n    warn(\n      createPackageNameMustBeAStringWarning({\n        packageName,\n        packageFileUrl: projectPackageFileUrl,\n      }),\n    )\n    return {}\n  }\n\n  await visit({\n    packageFileUrl: projectPackageFileUrl,\n    packageName: projectPackageJsonObject.name,\n    packageJsonObject: projectPackageJsonObject,\n    importerPackageFileUrl,\n    importerPackageJsonObject: null,\n    includeDevDependencies: projectPackageDevDependenciesIncluded,\n  })\n\n  return optimizeImportMap({ imports, scopes })\n}\n\nconst packageDependenciesFromPackageObject = (packageObject, { includeDevDependencies }) => {\n  const packageDependencies = {}\n\n  const { dependencies = {} } = packageObject\n  // https://npm.github.io/using-pkgs-docs/package-json/types/optionaldependencies.html\n  const { optionalDependencies = {} } = packageObject\n  Object.keys(dependencies).forEach((dependencyName) => {\n    packageDependencies[dependencyName] = {\n      type: \"dependency\",\n      isOptional: dependencyName in optionalDependencies,\n      versionPattern: dependencies[dependencyName],\n    }\n  })\n\n  const { peerDependencies = {} } = packageObject\n  const { peerDependenciesMeta = {} } = packageObject\n  Object.keys(peerDependencies).forEach((dependencyName) => {\n    packageDependencies[dependencyName] = {\n      type: \"peerDependency\",\n      versionPattern: peerDependencies[dependencyName],\n      isOptional:\n        dependencyName in peerDependenciesMeta && peerDependenciesMeta[dependencyName].optional,\n    }\n  })\n\n  if (includeDevDependencies) {\n    const { devDependencies = {} } = packageObject\n    Object.keys(devDependencies).forEach((dependencyName) => {\n      if (!packageDependencies.hasOwnProperty(dependencyName)) {\n        packageDependencies[dependencyName] = {\n          type: \"devDependency\",\n          versionPattern: devDependencies[dependencyName],\n        }\n      }\n    })\n  }\n\n  return packageDependencies\n}\n\nconst moveMappingValue = (address, from, to) => {\n  const url = resolveUrl(address, from)\n  const relativeUrl = urlToRelativeUrl(url, to)\n  if (relativeUrl.startsWith(\"../\")) {\n    return relativeUrl\n  }\n  if (relativeUrl.startsWith(\"./\")) {\n    return relativeUrl\n  }\n  if (/^[a-zA-Z]{2,}:/.test(relativeUrl)) {\n    // has sheme\n    return relativeUrl\n  }\n  return `./${relativeUrl}`\n}\n\nconst createExportsWildcardIgnoredWarning = ({ key, value, packageFileUrl }) => {\n  return {\n    code: \"EXPORTS_WILDCARD\",\n    message: `Ignoring export using \"*\" because it is not supported by importmap.\n--- key ---\n${key}\n--- value ---\n${value}\n--- package.json path ---\n${urlToFileSystemPath(packageFileUrl)}\n--- see also ---\nhttps://github.com/WICG/import-maps/issues/232`,\n  }\n}\n\nconst createPackageNameMustBeAStringWarning = ({ packageName, packageFileUrl }) => {\n  return {\n    code: \"PACKAGE_NAME_MUST_BE_A_STRING\",\n    message: `package name field must be a string\n--- package name field ---\n${packageName}\n--- package.json file path ---\n${packageFileUrl}`,\n  }\n}\n\nconst createCannotFindPackageWarning = ({ dependencyName, dependencyInfo, packageFileUrl }) => {\n  const dependencyIsOptional = dependencyInfo.isOptional\n  const dependencyType = dependencyInfo.type\n  const dependencyVersionPattern = dependencyInfo.versionPattern\n  return {\n    code: \"CANNOT_FIND_PACKAGE\",\n    message: createDetailedMessage(\n      dependencyIsOptional\n        ? `cannot find an optional ${dependencyType}.`\n        : `cannot find a ${dependencyType}.`,\n      {\n        [dependencyType]: `${dependencyName}@${dependencyVersionPattern}`,\n        \"required by\": urlToFileSystemPath(packageFileUrl),\n      },\n    ),\n  }\n}\n",
    "import { sortImportMap, composeTwoImportMaps } from \"@jsenv/import-map\"\nimport { createLogger } from \"@jsenv/logger\"\nimport { getImportMapFromJsFiles } from \"./internal/from-js/getImportMapFromJsFiles.js\"\nimport { getImportMapFromPackageFiles } from \"./internal/from-package/getImportMapFromPackageFiles.js\"\n\nexport const getImportMapFromProjectFiles = async ({\n  logLevel,\n  projectDirectoryUrl,\n  runtime = \"browser\",\n  moduleFormat = \"esm\",\n  dev = false,\n  jsFiles = true,\n  removeUnusedMappings = !dev,\n  magicExtensions,\n  onWarn = (warning, warn) => {\n    warn(warning)\n  },\n  ...rest\n}) => {\n  const packagesExportsPreference = [\n    ...(moduleFormatPreferences[moduleFormat] || [moduleFormat]),\n    ...(runtimeExportsPreferences[runtime] || [runtime]),\n    ...(dev ? \"development\" : \"production\"),\n  ]\n\n  const logger = createLogger({ logLevel })\n  const warn = (warning) => {\n    onWarn(warning, () => {\n      logger.warn(`\\n${warning.message}\\n`)\n    })\n  }\n\n  // At this point, importmap is relative to the project directory url\n  let importMapFromPackageFiles = await getImportMapFromPackageFiles({\n    logger,\n    warn,\n    projectDirectoryUrl,\n    packagesExportsPreference,\n    projectPackageDevDependenciesIncluded: dev,\n    ...rest,\n  })\n  importMapFromPackageFiles = sortImportMap(importMapFromPackageFiles)\n\n  let importMapFromJsFiles = jsFiles\n    ? await getImportMapFromJsFiles({\n        logLevel,\n        warn,\n        importMap: importMapFromPackageFiles,\n        removeUnusedMappings,\n        projectDirectoryUrl,\n        magicExtensions,\n        packagesExportsPreference,\n        runtime,\n      })\n    : {}\n  importMapFromJsFiles = sortImportMap(importMapFromJsFiles)\n\n  return sortImportMap(composeTwoImportMaps(importMapFromPackageFiles, importMapFromJsFiles))\n}\n\nconst runtimeExportsPreferences = {\n  browser: [\"browser\"],\n  node: [\"node\"],\n}\n\nconst moduleFormatPreferences = {\n  esm: [\"import\"],\n  cjs: [\"require\"],\n}\n",
    "import { assertAndNormalizeDirectoryUrl, resolveUrl, readFile } from \"@jsenv/util\"\nimport { moveImportMap, sortImportMap } from \"@jsenv/import-map\"\n\nexport const getImportMapFromFile = async ({ projectDirectoryUrl, importMapFileRelativeUrl }) => {\n  projectDirectoryUrl = assertAndNormalizeDirectoryUrl(projectDirectoryUrl)\n\n  const importmapFileUrl = resolveUrl(importMapFileRelativeUrl, projectDirectoryUrl)\n  const importmap = await readFile(importmapFileUrl, { as: \"json\" })\n\n  // ensure the importmap is now relative to the project directory url\n  // we do that because writeImportMapFile expect all importmap\n  // to be relative to the projectDirectoryUrl\n  const importmapFakeRootUrl = resolveUrl(\"whatever.importmap\", projectDirectoryUrl)\n  const importmapRelativeToProject = moveImportMap(\n    importmap,\n    importmapFileUrl,\n    importmapFakeRootUrl,\n  )\n\n  return sortImportMap(importmapRelativeToProject)\n}\n",
    "export const importMapToVsCodeConfigPaths = ({ imports = {} }) => {\n  const paths = {}\n\n  Object.keys(imports).forEach((importKey) => {\n    const importValue = imports[importKey]\n\n    let key\n    if (importKey.endsWith(\"/\")) {\n      key = `${importKey}*`\n    } else {\n      key = importKey\n    }\n\n    const importValueArray = typeof importValue === \"string\" ? [importValue] : importValue\n    const candidatesForPath = importValueArray.map((importValue) => {\n      if (importValue.endsWith(\"/\")) {\n        return `${importValue}*`\n      }\n      return importValue\n    })\n\n    if (key in paths) {\n      paths[key] = [...paths[key], ...candidatesForPath]\n    } else {\n      paths[key] = candidatesForPath\n    }\n  })\n\n  return paths\n}\n",
    "import {\n  resolveUrl,\n  urlToFileSystemPath,\n  assertAndNormalizeDirectoryUrl,\n  writeFile,\n} from \"@jsenv/util\"\nimport { composeTwoImportMaps } from \"@jsenv/import-map\"\nimport { importMapToVsCodeConfigPaths } from \"./internal/importMapToVsCodeConfigPaths.js\"\n\nexport const writeImportMapFile = async (\n  importMapInputs = [],\n  {\n    projectDirectoryUrl,\n\n    importMapFile = true, // in case someone wants the importmap but not write it on filesystem\n    importMapFileRelativeUrl = \"./import-map.importmap\",\n    importMapFileLog = true,\n\n    jsConfigFile = false, // not yet documented, makes vscode aware of the import remapping\n    jsConfigFileLog = true,\n    jsConfigLeadingSlash = false,\n    jsConfigBase = {},\n  },\n) => {\n  projectDirectoryUrl = assertAndNormalizeDirectoryUrl(projectDirectoryUrl)\n\n  if (importMapInputs.length === 0) {\n    console.warn(`importMapInputs is empty, the generated importmap will be empty`)\n  }\n\n  const importMaps = await Promise.all(importMapInputs)\n\n  const importMap = importMaps.reduce((previous, current) => {\n    return composeTwoImportMaps(previous, current)\n  }, {})\n\n  if (importMapFile) {\n    const importMapFileUrl = resolveUrl(importMapFileRelativeUrl, projectDirectoryUrl)\n    await writeFile(importMapFileUrl, JSON.stringify(importMap, null, \"  \"))\n    if (importMapFileLog) {\n      console.info(`-> ${urlToFileSystemPath(importMapFileUrl)}`)\n    }\n  }\n  if (jsConfigFile) {\n    const jsConfigFileUrl = resolveUrl(\"./jsconfig.json\", projectDirectoryUrl)\n    try {\n      const jsConfig = {\n        compilerOptions: {\n          baseUrl: \".\",\n          ...jsConfigBase,\n          paths: {\n            ...(jsConfigLeadingSlash ? { \"/*\": [\"./*\"] } : {}),\n            ...importMapToVsCodeConfigPaths(importMap),\n          },\n        },\n      }\n      await writeFile(jsConfigFileUrl, JSON.stringify(jsConfig, null, \"  \"))\n      if (jsConfigFileLog) {\n        console.info(`-> ${urlToFileSystemPath(jsConfigFileUrl)}`)\n      }\n    } catch (e) {\n      if (e.code !== \"ENOENT\") {\n        throw e\n      }\n    }\n  }\n\n  return importMap\n}\n"
  ],
  "names": [
    "memoizeAsyncFunctionByUrl",
    "fn",
    "map",
    "WeakMap",
    "memoizeAsyncFunction",
    "getMemoryEntryFromArguments",
    "url",
    "get",
    "set",
    "promise",
    "delete",
    "memoizeAsyncFunctionBySpecifierAndImporter",
    "importerCache",
    "specifier",
    "importer",
    "specifierCacheForImporter",
    "args",
    "memoryEntry",
    "promiseFromMemory",
    "resolve",
    "reject",
    "createControllablePromise",
    "value",
    "error",
    "e",
    "Promise",
    "res",
    "rej",
    "filenameContainsBackSlashes",
    "__filename",
    "indexOf",
    "replace",
    "require",
    "createRequire",
    "parser",
    "traverse",
    "parseSpecifiersFromFile",
    "fileUrl",
    "fileContent",
    "sourceType",
    "allowImportExportEverywhere",
    "allowAwaitOutsideFunction",
    "ranges",
    "jsx",
    "typescript",
    "endsWith",
    "flow",
    "options",
    "undefined",
    "readFile",
    "as",
    "ast",
    "parse",
    "sourceFilename",
    "urlToFileSystemPath",
    "plugins",
    "specifiers",
    "addSpecifier",
    "path",
    "type",
    "node",
    "line",
    "loc",
    "start",
    "column",
    "default",
    "CallExpression",
    "callee",
    "arguments",
    "ExportAllDeclaration",
    "ExportNamedDeclaration",
    "source",
    "ImportDeclaration",
    "showSource",
    "message",
    "showSourceLocation",
    "red",
    "grey",
    "ansiResetSequence",
    "numberOfSurroundingLinesToShow",
    "lineMaxLength",
    "color",
    "markColor",
    "asideColor",
    "colorMark",
    "string",
    "colorAside",
    "mark",
    "aside",
    "lines",
    "split",
    "lineRange",
    "end",
    "moveLineRangeUp",
    "moveLineRangeDown",
    "lineRangeWithinLines",
    "linesToShow",
    "slice",
    "endLineNumber",
    "lineNumberMaxWidth",
    "String",
    "length",
    "columnRange",
    "Math",
    "floor",
    "ceil",
    "lineSource",
    "index",
    "lineNumber",
    "isMainLine",
    "lineSourceTruncated",
    "applyColumnRange",
    "lineNumberWidth",
    "lineNumberRightSpacing",
    "repeat",
    "asideSource",
    "lineFormatted",
    "lineSourceUntilColumn",
    "spacing",
    "stringToSpaces",
    "mainLineFormatted",
    "join",
    "TypeError",
    "Error",
    "prefix",
    "suffix",
    "lastIndex",
    "startTruncated",
    "endTruncated",
    "from",
    "to",
    "result",
    "number",
    "resolveFile",
    "magicExtensions",
    "fileStat",
    "readFileSystemNodeStat",
    "nullIfNotFound",
    "isFile",
    "isDirectory",
    "indexFileSuffix",
    "indexFileUrl",
    "extensionLeadingToAFile",
    "findExtensionLeadingToFile",
    "extension",
    "urlToExtension",
    "urlDirectoryUrl",
    "resolveUrl",
    "urlFilename",
    "urlToFilename",
    "extensionLeadingToFile",
    "firstOperationMatching",
    "array",
    "extensionCandidate",
    "urlCandidate",
    "stats",
    "predicate",
    "Boolean",
    "BARE_SPECIFIER_ERROR",
    "getImportMapFromJsFiles",
    "warn",
    "importMap",
    "projectDirectoryUrl",
    "removeUnusedMappings",
    "projectPackageFileUrl",
    "imports",
    "scopes",
    "addMapping",
    "scope",
    "topLevelMappingsUsed",
    "scopedMappingsUsed",
    "markMappingAsUsed",
    "push",
    "importMapNormalized",
    "normalizeImportMap",
    "trackAndResolveImport",
    "resolveImport",
    "defaultExtension",
    "onImportMapping",
    "createBareSpecifierError",
    "visitFile",
    "importedBy",
    "gotBareSpecifierError",
    "fileUrlOnFileSystem",
    "magicExtensionWithImporterExtension",
    "createFileNotFoundWarning",
    "needsAutoMapping",
    "packageDirectoryUrl",
    "packageDirectoryUrlFromUrl",
    "packageFileUrl",
    "autoMapping",
    "urlToRelativeUrl",
    "formatAutoMappingSpecifierWarning",
    "closestPackageDirectoryUrl",
    "closestPackageObject",
    "visitFileContent",
    "readFileContent",
    "all",
    "Object",
    "keys",
    "specifierInfo",
    "visitFileMemoized",
    "projectPackageObject",
    "name",
    "exports",
    "importsUsed",
    "forEach",
    "scopesUsed",
    "mappingsUsed",
    "scopedMappings",
    "relativeUrl",
    "lastNodeModulesDirectoryStartIndex",
    "lastIndexOf",
    "lastNodeModulesDirectoryEndIndex",
    "beforeNodeModulesLastDirectory",
    "afterLastNodeModulesDirectory",
    "remainingDirectories",
    "importerExtension",
    "magicExtensionsWithoutImporterExtension",
    "filter",
    "ext",
    "code",
    "createDetailedMessage",
    "decideAutoMappingSuggestion",
    "importmap",
    "packageImportmapFileUrl",
    "mappingToImportmapString",
    "mappingToExportsFieldString",
    "JSON",
    "stringify",
    "scopeUrl",
    "toUrl",
    "optimizeImportMap",
    "scopesOptimized",
    "scopeMappings",
    "scopeMappingsOptimized",
    "mappingKey",
    "topLevelMappingValue",
    "mappingValue",
    "resolvePackageMain",
    "packagesExportsPreference",
    "packageJsonObject",
    "includes",
    "resolveMainFile",
    "packageMainFieldName",
    "packageMainFieldValue",
    "module",
    "browser",
    "main",
    "mainFileRelativeUrl",
    "mainFileUrlFirstCandidate",
    "startsWith",
    "createPackageMainFileMustBeRelativeWarning",
    "mainFileUrl",
    "createPackageMainFileNotFoundWarning",
    "importedIn",
    "visitPackageImportMap",
    "packageImportmap",
    "importmapFileUrl",
    "moveImportMap",
    "createPackageImportMapUnexpectedWarning",
    "specifierIsRelative",
    "test",
    "visitPackageExports",
    "packageExports",
    "packageName",
    "onExport",
    "packageDirectoryRelativeUrl",
    "visitExportsSubpath",
    "onUnexpectedPackageExports",
    "packageExportsValue",
    "packageExportsValuePath",
    "createExportsValueWarning",
    "onMixedPackageExports",
    "createExportsMixedWarning",
    "onSubpathPackageExport",
    "key",
    "valuePath",
    "createExportsMappingKeyMustBeRelativeWarning",
    "keyPath",
    "createExportsMappingValueMustBeAStringWarning",
    "createExportsMappingValueMustBeRelativeWarning",
    "specifierToSource",
    "addressToDestination",
    "packageExportsConditions",
    "visitValue",
    "firstNonConditionKey",
    "reverse",
    "find",
    "everyKeyDoesNotStartsWithDot",
    "every",
    "bestConditionKey",
    "findBestConditionKey",
    "bestExports",
    "everyKeyStartsWithDot",
    "availableKeys",
    "exportsConditions",
    "conditionKey",
    "address",
    "applyPackageManualOverride",
    "packageObject",
    "packagesManualOverrides",
    "version",
    "overrideKey",
    "overrideKeyCandidate",
    "composeObject",
    "leftObject",
    "rightObject",
    "composedObject",
    "rightValue",
    "leftValue",
    "PACKAGE_NOT_FOUND",
    "PACKAGE_WITH_SYNTAX_ERROR",
    "readPackageFile",
    "console",
    "formatPackageSyntaxErrorLog",
    "syntaxError",
    "createFindNodeModulePackage",
    "readPackageFileMemoized",
    "dependencyName",
    "nodeModuleCandidates",
    "getNodeModuleCandidates",
    "nodeModuleCandidate",
    "packageFileUrlCandidate",
    "packageObjectCandidate",
    "fileDirectoryUrl",
    "fileDirectoryRelativeUrl",
    "candidates",
    "relativeNodeModuleDirectoryArray",
    "shift",
    "i",
    "getImportMapFromPackageFiles",
    "logger",
    "projectPackageDevDependenciesIncluded",
    "packagesExportsIncluded",
    "packageIncludedPredicate",
    "assertAndNormalizeDirectoryUrl",
    "findNodeModulePackage",
    "seen",
    "markPackageAsSeen",
    "importerPackageFileUrl",
    "packageIsSeen",
    "visit",
    "importerPackageJsonObject",
    "includeDevDependencies",
    "visitDependencies",
    "visitPackage",
    "packageInfo",
    "computePackageInfo",
    "visitPackageMain",
    "importerIsRoot",
    "importerRelativeUrl",
    "packageIsRoot",
    "addImportMapForPackage",
    "toMoved",
    "moveMappingValue",
    "scopeMoved",
    "addMappingsForPackageAndImporter",
    "mappings",
    "importsFromPackageField",
    "mappingsFromPackageExports",
    "fromWithouTrailingStar",
    "toWithoutTrailingStar",
    "createExportsWildcardIgnoredWarning",
    "packageDirectoryUrlExpected",
    "dependencyMap",
    "packageDependenciesFromPackageObject",
    "dependencyInfo",
    "visitDependency",
    "dependencyData",
    "findDependency",
    "cannotFindPackageWarning",
    "createCannotFindPackageWarning",
    "isOptional",
    "debug",
    "dependencyPackageFileUrl",
    "dependencyPackageJsonObject",
    "importerPackageDirectoryUrl",
    "dependenciesCache",
    "dependencyPromise",
    "projectPackageJsonObject",
    "createPackageNameMustBeAStringWarning",
    "packageDependencies",
    "dependencies",
    "optionalDependencies",
    "versionPattern",
    "peerDependencies",
    "peerDependenciesMeta",
    "optional",
    "devDependencies",
    "hasOwnProperty",
    "dependencyIsOptional",
    "dependencyType",
    "dependencyVersionPattern",
    "getImportMapFromProjectFiles",
    "logLevel",
    "runtime",
    "moduleFormat",
    "dev",
    "jsFiles",
    "onWarn",
    "warning",
    "rest",
    "moduleFormatPreferences",
    "runtimeExportsPreferences",
    "createLogger",
    "importMapFromPackageFiles",
    "sortImportMap",
    "importMapFromJsFiles",
    "composeTwoImportMaps",
    "esm",
    "cjs",
    "getImportMapFromFile",
    "importMapFileRelativeUrl",
    "importmapFakeRootUrl",
    "importmapRelativeToProject",
    "importMapToVsCodeConfigPaths",
    "paths",
    "importKey",
    "importValue",
    "importValueArray",
    "candidatesForPath",
    "writeImportMapFile",
    "importMapInputs",
    "importMapFile",
    "importMapFileLog",
    "jsConfigFile",
    "jsConfigFileLog",
    "jsConfigLeadingSlash",
    "jsConfigBase",
    "importMaps",
    "reduce",
    "previous",
    "current",
    "importMapFileUrl",
    "writeFile",
    "info",
    "jsConfigFileUrl",
    "jsConfig",
    "compilerOptions",
    "baseUrl"
  ],
  "mappings": "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"
}