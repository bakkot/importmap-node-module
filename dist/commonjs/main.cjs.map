{
  "version": 3,
  "file": "main.cjs",
  "sources": [
    "../../node_modules/@jsenv/logger/src/LOG_LEVELS.js",
    "../../node_modules/@jsenv/logger/src/createLogger.js",
    "../../node_modules/@jsenv/import-map/src/internal/assertImportMap.js",
    "../../node_modules/@jsenv/import-map/src/internal/hasScheme.js",
    "../../node_modules/@jsenv/import-map/src/internal/urlToScheme.js",
    "../../node_modules/@jsenv/import-map/src/internal/urlToPathname.js",
    "../../node_modules/@jsenv/import-map/src/internal/urlToOrigin.js",
    "../../node_modules/@jsenv/import-map/src/internal/pathnameToParentPathname.js",
    "../../node_modules/@jsenv/import-map/src/resolveUrl.js",
    "../../node_modules/@jsenv/import-map/src/resolveSpecifier.js",
    "../../node_modules/@jsenv/import-map/src/composeTwoImportMaps.js",
    "../../node_modules/@jsenv/import-map/src/internal/getCommonPathname.js",
    "../../node_modules/@jsenv/import-map/src/internal/urlToRelativeUrl.js",
    "../../node_modules/@jsenv/import-map/src/moveImportMap.js",
    "../../node_modules/@jsenv/import-map/src/sortImportMap.js",
    "../../node_modules/@jsenv/util/src/internal/ensureUrlTrailingSlash.js",
    "../../node_modules/@jsenv/util/src/isFileSystemPath.js",
    "../../node_modules/@jsenv/util/src/fileSystemPathToUrl.js",
    "../../node_modules/@jsenv/util/src/assertAndNormalizeDirectoryUrl.js",
    "../../node_modules/@jsenv/util/src/assertAndNormalizeFileUrl.js",
    "../../node_modules/@jsenv/util/src/internal/statsToType.js",
    "../../node_modules/@jsenv/util/src/urlToFileSystemPath.js",
    "../../node_modules/@jsenv/util/src/internal/permissions.js",
    "../../node_modules/@jsenv/util/src/writeFileSystemNodePermissions.js",
    "../../node_modules/@jsenv/util/src/readFileSystemNodeStat.js",
    "../../node_modules/@jsenv/cancellation/src/operation/firstOperationMatching.js",
    "../../node_modules/@jsenv/cancellation/src/cancelError.js",
    "../../node_modules/@jsenv/util/src/internal/getCommandArgument.js",
    "../../node_modules/@jsenv/util/src/wrapExternalFunction.js",
    "../../node_modules/@jsenv/util/src/internal/getCommonPathname.js",
    "../../node_modules/@jsenv/util/src/internal/pathnameToParentPathname.js",
    "../../node_modules/@jsenv/util/src/urlToRelativeUrl.js",
    "../../node_modules/@jsenv/util/src/writeDirectory.js",
    "../../node_modules/@jsenv/util/src/resolveUrl.js",
    "../../node_modules/@jsenv/util/src/ensureParentDirectories.js",
    "../../node_modules/@jsenv/util/src/ensureWindowsDriveLetter.js",
    "../../node_modules/@jsenv/util/src/writeSymbolicLink.js",
    "../../node_modules/@jsenv/util/src/readFile.js",
    "../../node_modules/@jsenv/util/src/internal/createWatcher.js",
    "../../node_modules/@jsenv/util/src/registerDirectoryLifecycle.js",
    "../../node_modules/@jsenv/util/src/urlToScheme.js",
    "../../node_modules/@jsenv/util/src/urlToRessource.js",
    "../../node_modules/@jsenv/util/src/urlToPathname.js",
    "../../node_modules/@jsenv/util/src/urlToFilename.js",
    "../../node_modules/@jsenv/util/src/urlToBasename.js",
    "../../node_modules/@jsenv/util/src/writeFile.js",
    "../../src/internal/readPackageFile.js",
    "../../src/internal/resolveNodeModule.js",
    "../../src/internal/resolvePackageMain.js",
    "../../src/internal/specifierIsRelative.js",
    "../../src/internal/visitPackageImports.js",
    "../../src/internal/visitPackageExports.js",
    "../../src/getImportMapFromNodeModules.js",
    "../../src/getImportMapFromFile.js",
    "../../src/internal/importMapToVsCodeConfigPaths.js",
    "../../src/generateImportMapForProject.js"
  ],
  "sourcesContent": [
    "export const LOG_LEVEL_OFF = \"off\"\n\nexport const LOG_LEVEL_DEBUG = \"debug\"\n\nexport const LOG_LEVEL_INFO = \"info\"\n\nexport const LOG_LEVEL_WARN = \"warn\"\n\nexport const LOG_LEVEL_ERROR = \"error\"\n",
    "import {\n  LOG_LEVEL_DEBUG,\n  LOG_LEVEL_INFO,\n  LOG_LEVEL_WARN,\n  LOG_LEVEL_ERROR,\n  LOG_LEVEL_OFF,\n} from \"./LOG_LEVELS.js\"\n\nexport const createLogger = ({ logLevel = LOG_LEVEL_INFO } = {}) => {\n  if (logLevel === LOG_LEVEL_DEBUG) {\n    return {\n      debug,\n      info,\n      warn,\n      error,\n    }\n  }\n\n  if (logLevel === LOG_LEVEL_INFO) {\n    return {\n      debug: debugDisabled,\n      info,\n      warn,\n      error,\n    }\n  }\n\n  if (logLevel === LOG_LEVEL_WARN) {\n    return {\n      debug: debugDisabled,\n      info: infoDisabled,\n      warn,\n      error,\n    }\n  }\n\n  if (logLevel === LOG_LEVEL_ERROR) {\n    return {\n      debug: debugDisabled,\n      info: infoDisabled,\n      warn: warnDisabled,\n      error,\n    }\n  }\n\n  if (logLevel === LOG_LEVEL_OFF) {\n    return {\n      debug: debugDisabled,\n      info: infoDisabled,\n      warn: warnDisabled,\n      error: errorDisabled,\n    }\n  }\n\n  throw new Error(`unexpected logLevel.\n--- logLevel ---\n${logLevel}\n--- allowed log levels ---\n${LOG_LEVEL_OFF}\n${LOG_LEVEL_ERROR}\n${LOG_LEVEL_WARN}\n${LOG_LEVEL_INFO}\n${LOG_LEVEL_DEBUG}`)\n}\n\nconst debug = console.debug\n\nconst debugDisabled = () => {}\n\nconst info = console.info\n\nconst infoDisabled = () => {}\n\nconst warn = console.warn\n\nconst warnDisabled = () => {}\n\nconst error = console.error\n\nconst errorDisabled = () => {}\n\nconst disabledMethods = {\n  debug: debugDisabled,\n  info: infoDisabled,\n  warn: warnDisabled,\n  error: errorDisabled,\n}\n\nexport const loggerIsMethodEnabled = (logger, methodName) => {\n  return logger[methodName] !== disabledMethods[methodName]\n}\n\nexport const loggerToLevels = (logger) => {\n  return {\n    debug: loggerIsMethodEnabled(logger, \"debug\"),\n    info: loggerIsMethodEnabled(logger, \"info\"),\n    warn: loggerIsMethodEnabled(logger, \"warn\"),\n    error: loggerIsMethodEnabled(logger, \"error\"),\n  }\n}\n\nexport const loggerToLogLevel = (logger) => {\n  if (loggerIsMethodEnabled(logger, \"debug\")) return LOG_LEVEL_DEBUG\n  if (loggerIsMethodEnabled(logger, \"info\")) return LOG_LEVEL_INFO\n  if (loggerIsMethodEnabled(logger, \"warn\")) return LOG_LEVEL_WARN\n  if (loggerIsMethodEnabled(logger, \"error\")) return LOG_LEVEL_ERROR\n  return LOG_LEVEL_OFF\n}\n",
    "export const assertImportMap = (value) => {\n  if (value === null) {\n    throw new TypeError(`an importMap must be an object, got null`)\n  }\n\n  const type = typeof value\n  if (type !== \"object\") {\n    throw new TypeError(`an importMap must be an object, received ${value}`)\n  }\n\n  if (Array.isArray(value)) {\n    throw new TypeError(`an importMap must be an object, received array ${value}`)\n  }\n}\n",
    "export const hasScheme = (string) => {\n  return /^[a-zA-Z]{2,}:/.test(string)\n}\n",
    "export const urlToScheme = (urlString) => {\n  const colonIndex = urlString.indexOf(\":\")\n  if (colonIndex === -1) return \"\"\n  return urlString.slice(0, colonIndex)\n}\n",
    "import { urlToScheme } from \"./urlToScheme.js\"\n\nexport const urlToPathname = (urlString) => {\n  return ressourceToPathname(urlToRessource(urlString))\n}\n\nconst urlToRessource = (urlString) => {\n  const scheme = urlToScheme(urlString)\n\n  if (scheme === \"file\") {\n    return urlString.slice(\"file://\".length)\n  }\n\n  if (scheme === \"https\" || scheme === \"http\") {\n    // remove origin\n    const afterProtocol = urlString.slice(scheme.length + \"://\".length)\n    const pathnameSlashIndex = afterProtocol.indexOf(\"/\", \"://\".length)\n    return afterProtocol.slice(pathnameSlashIndex)\n  }\n\n  return urlString.slice(scheme.length + 1)\n}\n\nconst ressourceToPathname = (ressource) => {\n  const searchSeparatorIndex = ressource.indexOf(\"?\")\n  return searchSeparatorIndex === -1 ? ressource : ressource.slice(0, searchSeparatorIndex)\n}\n",
    "import { urlToScheme } from \"./urlToScheme.js\"\n\nexport const urlToOrigin = (urlString) => {\n  const scheme = urlToScheme(urlString)\n\n  if (scheme === \"file\") {\n    return \"file://\"\n  }\n\n  if (scheme === \"http\" || scheme === \"https\") {\n    const secondProtocolSlashIndex = scheme.length + \"://\".length\n    const pathnameSlashIndex = urlString.indexOf(\"/\", secondProtocolSlashIndex)\n\n    if (pathnameSlashIndex === -1) return urlString\n    return urlString.slice(0, pathnameSlashIndex)\n  }\n\n  return urlString.slice(0, scheme.length + 1)\n}\n",
    "export const pathnameToParentPathname = (pathname) => {\n  const slashLastIndex = pathname.lastIndexOf(\"/\")\n  if (slashLastIndex === -1) {\n    return \"/\"\n  }\n\n  return pathname.slice(0, slashLastIndex + 1)\n}\n",
    "// could be useful: https://url.spec.whatwg.org/#url-miscellaneous\n\nimport { urlToScheme } from \"./internal/urlToScheme.js\"\nimport { urlToPathname } from \"./internal/urlToPathname.js\"\nimport { urlToOrigin } from \"./internal/urlToOrigin.js\"\nimport { pathnameToParentPathname } from \"./internal/pathnameToParentPathname.js\"\nimport { hasScheme } from \"./internal/hasScheme.js\"\n\nexport const resolveUrl = (specifier, baseUrl) => {\n  if (baseUrl) {\n    if (typeof baseUrl !== \"string\") {\n      throw new TypeError(writeBaseUrlMustBeAString({ baseUrl, specifier }))\n    }\n    if (!hasScheme(baseUrl)) {\n      throw new Error(writeBaseUrlMustBeAbsolute({ baseUrl, specifier }))\n    }\n  }\n\n  if (hasScheme(specifier)) {\n    return specifier\n  }\n\n  if (!baseUrl) {\n    throw new Error(writeBaseUrlRequired({ baseUrl, specifier }))\n  }\n\n  // scheme relative\n  if (specifier.slice(0, 2) === \"//\") {\n    return `${urlToScheme(baseUrl)}:${specifier}`\n  }\n\n  // origin relative\n  if (specifier[0] === \"/\") {\n    return `${urlToOrigin(baseUrl)}${specifier}`\n  }\n\n  const baseOrigin = urlToOrigin(baseUrl)\n  const basePathname = urlToPathname(baseUrl)\n\n  if (specifier === \".\") {\n    const baseDirectoryPathname = pathnameToParentPathname(basePathname)\n    return `${baseOrigin}${baseDirectoryPathname}`\n  }\n\n  // pathname relative inside\n  if (specifier.slice(0, 2) === \"./\") {\n    const baseDirectoryPathname = pathnameToParentPathname(basePathname)\n    return `${baseOrigin}${baseDirectoryPathname}${specifier.slice(2)}`\n  }\n\n  // pathname relative outside\n  if (specifier.slice(0, 3) === \"../\") {\n    let unresolvedPathname = specifier\n    const importerFolders = basePathname.split(\"/\")\n    importerFolders.pop()\n\n    while (unresolvedPathname.slice(0, 3) === \"../\") {\n      unresolvedPathname = unresolvedPathname.slice(3)\n      // when there is no folder left to resolved\n      // we just ignore '../'\n      if (importerFolders.length) {\n        importerFolders.pop()\n      }\n    }\n\n    const resolvedPathname = `${importerFolders.join(\"/\")}/${unresolvedPathname}`\n    return `${baseOrigin}${resolvedPathname}`\n  }\n\n  // bare\n  if (basePathname === \"\") {\n    return `${baseOrigin}/${specifier}`\n  }\n  if (basePathname[basePathname.length] === \"/\") {\n    return `${baseOrigin}${basePathname}${specifier}`\n  }\n  return `${baseOrigin}${pathnameToParentPathname(basePathname)}${specifier}`\n}\n\nconst writeBaseUrlMustBeAString = ({ baseUrl, specifier }) => `baseUrl must be a string.\n--- base url ---\n${baseUrl}\n--- specifier ---\n${specifier}`\n\nconst writeBaseUrlMustBeAbsolute = ({ baseUrl, specifier }) => `baseUrl must be absolute.\n--- base url ---\n${baseUrl}\n--- specifier ---\n${specifier}`\n\nconst writeBaseUrlRequired = ({\n  baseUrl,\n  specifier,\n}) => `baseUrl required to resolve relative specifier.\n--- base url ---\n${baseUrl}\n--- specifier ---\n${specifier}`\n",
    "import { hasScheme } from \"./internal/hasScheme.js\"\nimport { resolveUrl } from \"./resolveUrl.js\"\n\nexport const resolveSpecifier = (specifier, importer) => {\n  if (\n    specifier === \".\" ||\n    specifier[0] === \"/\" ||\n    specifier.startsWith(\"./\") ||\n    specifier.startsWith(\"../\")\n  ) {\n    return resolveUrl(specifier, importer)\n  }\n\n  if (hasScheme(specifier)) {\n    return specifier\n  }\n\n  return null\n}\n",
    "// https://github.com/systemjs/systemjs/blob/89391f92dfeac33919b0223bbf834a1f4eea5750/src/common.js#L136\nimport { assertImportMap } from \"./internal/assertImportMap.js\"\n\nexport const composeTwoImportMaps = (leftImportMap, rightImportMap) => {\n  assertImportMap(leftImportMap)\n  assertImportMap(rightImportMap)\n\n  const importMap = {}\n\n  const leftImports = leftImportMap.imports\n  const rightImports = rightImportMap.imports\n  const leftHasImports = Boolean(leftImports)\n  const rightHasImports = Boolean(rightImports)\n  if (leftHasImports && rightHasImports) {\n    importMap.imports = composeTwoImports(leftImports, rightImports)\n  } else if (leftHasImports) {\n    importMap.imports = { ...leftImports }\n  } else if (rightHasImports) {\n    importMap.imports = { ...rightImports }\n  }\n\n  const leftScopes = leftImportMap.scopes\n  const rightScopes = rightImportMap.scopes\n  const leftHasScopes = Boolean(leftScopes)\n  const rightHasScopes = Boolean(rightScopes)\n  if (leftHasScopes && rightHasScopes) {\n    importMap.scopes = composeTwoScopes(leftScopes, rightScopes)\n  } else if (leftHasScopes) {\n    importMap.scopes = { ...leftScopes }\n  } else if (rightHasScopes) {\n    importMap.scopes = { ...rightScopes }\n  }\n\n  return importMap\n}\n\nconst composeTwoImports = (leftImports, rightImports) => {\n  return {\n    ...leftImports,\n    ...rightImports,\n  }\n}\n\nconst composeTwoScopes = (leftScopes, rightScopes) => {\n  const scopes = {\n    ...leftScopes,\n  }\n  Object.keys(rightScopes).forEach((scopeKey) => {\n    if (scopes.hasOwnProperty(scopeKey)) {\n      scopes[scopeKey] = {\n        ...scopes[scopeKey],\n        ...rightScopes[scopeKey],\n      }\n    } else {\n      scopes[scopeKey] = {\n        ...rightScopes[scopeKey],\n      }\n    }\n  })\n  return scopes\n}\n",
    "export const getCommonPathname = (pathname, otherPathname) => {\n  const firstDifferentCharacterIndex = findFirstDifferentCharacterIndex(pathname, otherPathname)\n\n  // pathname and otherpathname are exactly the same\n  if (firstDifferentCharacterIndex === -1) {\n    return pathname\n  }\n\n  const commonString = pathname.slice(0, firstDifferentCharacterIndex + 1)\n\n  // the first different char is at firstDifferentCharacterIndex\n  if (pathname.charAt(firstDifferentCharacterIndex) === \"/\") {\n    return commonString\n  }\n\n  if (otherPathname.charAt(firstDifferentCharacterIndex) === \"/\") {\n    return commonString\n  }\n\n  const firstDifferentSlashIndex = commonString.lastIndexOf(\"/\")\n  return pathname.slice(0, firstDifferentSlashIndex + 1)\n}\n\nconst findFirstDifferentCharacterIndex = (string, otherString) => {\n  const maxCommonLength = Math.min(string.length, otherString.length)\n  let i = 0\n  while (i < maxCommonLength) {\n    const char = string.charAt(i)\n    const otherChar = otherString.charAt(i)\n    if (char !== otherChar) {\n      return i\n    }\n    i++\n  }\n  if (string.length === otherString.length) {\n    return -1\n  }\n  // they differ at maxCommonLength\n  return maxCommonLength\n}\n",
    "import { getCommonPathname } from \"./getCommonPathname.js\"\nimport { pathnameToParentPathname } from \"./pathnameToParentPathname.js\"\n\nexport const urlToRelativeUrl = (urlArg, baseUrlArg) => {\n  const url = new URL(urlArg)\n  const baseUrl = new URL(baseUrlArg)\n\n  if (url.protocol !== baseUrl.protocol) {\n    return urlArg\n  }\n\n  if (url.username !== baseUrl.username || url.password !== baseUrl.password) {\n    return urlArg.slice(url.protocol.length)\n  }\n\n  if (url.host !== baseUrl.host) {\n    return urlArg.slice(url.protocol.length)\n  }\n\n  const { pathname, hash, search } = url\n  if (pathname === \"/\") {\n    return baseUrl.pathname.slice(1)\n  }\n\n  const { pathname: basePathname } = baseUrl\n\n  const commonPathname = getCommonPathname(pathname, basePathname)\n  if (!commonPathname) {\n    return urlArg\n  }\n\n  const specificPathname = pathname.slice(commonPathname.length)\n  const baseSpecificPathname = basePathname.slice(commonPathname.length)\n  if (baseSpecificPathname.includes(\"/\")) {\n    const baseSpecificParentPathname = pathnameToParentPathname(baseSpecificPathname)\n    const relativeDirectoriesNotation = baseSpecificParentPathname.replace(/.*?\\//g, \"../\")\n    return `${relativeDirectoriesNotation}${specificPathname}${search}${hash}`\n  }\n  return `${specificPathname}${search}${hash}`\n}\n",
    "import { assertImportMap } from \"./internal/assertImportMap.js\"\nimport { urlToRelativeUrl } from \"./internal/urlToRelativeUrl.js\"\nimport { resolveUrl } from \"./resolveUrl.js\"\nimport { resolveSpecifier } from \"./resolveSpecifier.js\"\nimport { hasScheme } from \"./internal/hasScheme.js\"\n\nexport const moveImportMap = (importMap, fromUrl, toUrl) => {\n  assertImportMap(importMap)\n\n  const makeRelativeTo = (value, type) => {\n    let url\n    if (type === \"specifier\") {\n      url = resolveSpecifier(value, fromUrl)\n      if (!url) {\n        // bare specifier\n        return value\n      }\n    } else {\n      url = resolveUrl(value, fromUrl)\n    }\n\n    const relativeUrl = urlToRelativeUrl(url, toUrl)\n    if (relativeUrl.startsWith(\"../\")) {\n      return relativeUrl\n    }\n    if (relativeUrl.startsWith(\"./\")) {\n      return relativeUrl\n    }\n    if (hasScheme(relativeUrl)) {\n      return relativeUrl\n    }\n    return `./${relativeUrl}`\n  }\n\n  const importMapRelative = {}\n  const { imports } = importMap\n  if (imports) {\n    importMapRelative.imports = makeImportsRelativeTo(imports, makeRelativeTo) || imports\n  }\n\n  const { scopes } = importMap\n  if (scopes) {\n    importMapRelative.scopes = makeScopedRemappingRelativeTo(scopes, makeRelativeTo) || scopes\n  }\n\n  // nothing changed\n  if (importMapRelative.imports === imports && importMapRelative.scopes === scopes) {\n    return importMap\n  }\n  return importMapRelative\n}\n\nconst makeScopedRemappingRelativeTo = (scopes, makeRelativeTo) => {\n  const scopesTransformed = {}\n  const scopesRemaining = {}\n  let transformed = false\n  Object.keys(scopes).forEach((scopeKey) => {\n    const scopeValue = scopes[scopeKey]\n    const scopeKeyRelative = makeRelativeTo(scopeKey, \"address\")\n    const scopeValueRelative = makeImportsRelativeTo(scopeValue, makeRelativeTo)\n\n    if (scopeKeyRelative) {\n      transformed = true\n      scopesTransformed[scopeKeyRelative] = scopeValueRelative || scopeValue\n    } else if (scopeValueRelative) {\n      transformed = true\n      scopesTransformed[scopeKey] = scopeValueRelative\n    } else {\n      scopesRemaining[scopeKey] = scopeValueRelative\n    }\n  })\n  return transformed ? { ...scopesTransformed, ...scopesRemaining } : null\n}\n\nconst makeImportsRelativeTo = (imports, makeRelativeTo) => {\n  const importsTransformed = {}\n  const importsRemaining = {}\n  let transformed = false\n  Object.keys(imports).forEach((importKey) => {\n    const importValue = imports[importKey]\n    const importKeyRelative = makeRelativeTo(importKey, \"specifier\")\n    const importValueRelative = makeRelativeTo(importValue, \"address\")\n\n    if (importKeyRelative) {\n      transformed = true\n      importsTransformed[importKeyRelative] = importValueRelative || importValue\n    } else if (importValueRelative) {\n      transformed = true\n      importsTransformed[importKey] = importValueRelative\n    } else {\n      importsRemaining[importKey] = importValue\n    }\n  })\n  return transformed ? { ...importsTransformed, ...importsRemaining } : null\n}\n",
    "import { assertImportMap } from \"./internal/assertImportMap.js\"\n\nexport const sortImportMap = (importMap) => {\n  assertImportMap(importMap)\n\n  const { imports, scopes } = importMap\n  return {\n    imports: imports ? sortImports(imports) : undefined,\n    scopes: scopes ? sortScopes(scopes) : undefined,\n  }\n}\n\nexport const sortImports = (imports) => {\n  const importsSorted = {}\n  Object.keys(imports)\n    .sort(compareLengthOrLocaleCompare)\n    .forEach((name) => {\n      importsSorted[name] = imports[name]\n    })\n  return importsSorted\n}\n\nexport const sortScopes = (scopes) => {\n  const scopesSorted = {}\n  Object.keys(scopes)\n    .sort(compareLengthOrLocaleCompare)\n    .forEach((scopeName) => {\n      scopesSorted[scopeName] = sortImports(scopes[scopeName])\n    })\n  return scopesSorted\n}\n\nconst compareLengthOrLocaleCompare = (a, b) => {\n  return b.length - a.length || a.localeCompare(b)\n}\n",
    "export const ensureUrlTrailingSlash = (url) => {\n  return url.endsWith(\"/\") ? url : `${url}/`\n}\n",
    "export const isFileSystemPath = (value) => {\n  if (typeof value !== \"string\") {\n    throw new TypeError(`isFileSystemPath first arg must be a string, got ${value}`)\n  }\n\n  if (value[0] === \"/\") return true\n  return startsWithWindowsDriveLetter(value)\n}\n\nconst startsWithWindowsDriveLetter = (string) => {\n  const firstChar = string[0]\n  if (!/[a-zA-Z]/.test(firstChar)) return false\n\n  const secondChar = string[1]\n  if (secondChar !== \":\") return false\n\n  return true\n}\n",
    "import { pathToFileURL } from \"url\"\nimport { isFileSystemPath } from \"./isFileSystemPath.js\"\n\nexport const fileSystemPathToUrl = (value) => {\n  if (!isFileSystemPath(value)) {\n    throw new Error(`received an invalid value for fileSystemPath: ${value}`)\n  }\n  return String(pathToFileURL(value))\n}\n",
    "import { ensureUrlTrailingSlash } from \"./internal/ensureUrlTrailingSlash.js\"\nimport { isFileSystemPath } from \"./isFileSystemPath.js\"\nimport { fileSystemPathToUrl } from \"./fileSystemPathToUrl.js\"\n\nexport const assertAndNormalizeDirectoryUrl = (value) => {\n  let urlString\n\n  if (value instanceof URL) {\n    urlString = value.href\n  } else if (typeof value === \"string\") {\n    if (isFileSystemPath(value)) {\n      urlString = fileSystemPathToUrl(value)\n    } else {\n      try {\n        urlString = String(new URL(value))\n      } catch (e) {\n        throw new TypeError(`directoryUrl must be a valid url, received ${value}`)\n      }\n    }\n  } else {\n    throw new TypeError(`directoryUrl must be a string or an url, received ${value}`)\n  }\n\n  if (!urlString.startsWith(\"file://\")) {\n    throw new Error(`directoryUrl must starts with file://, received ${value}`)\n  }\n\n  return ensureUrlTrailingSlash(urlString)\n}\n",
    "import { isFileSystemPath } from \"./isFileSystemPath.js\"\nimport { fileSystemPathToUrl } from \"./fileSystemPathToUrl.js\"\n\nexport const assertAndNormalizeFileUrl = (value, baseUrl) => {\n  let urlString\n\n  if (value instanceof URL) {\n    urlString = value.href\n  } else if (typeof value === \"string\") {\n    if (isFileSystemPath(value)) {\n      urlString = fileSystemPathToUrl(value)\n    } else {\n      try {\n        urlString = String(new URL(value, baseUrl))\n      } catch (e) {\n        throw new TypeError(`fileUrl must be a valid url, received ${value}`)\n      }\n    }\n  } else {\n    throw new TypeError(`fileUrl must be a string or an url, received ${value}`)\n  }\n\n  if (!urlString.startsWith(\"file://\")) {\n    throw new Error(`fileUrl must starts with file://, received ${value}`)\n  }\n\n  return urlString\n}\n",
    "export const statsToType = (stats) => {\n  if (stats.isFile()) return \"file\"\n  if (stats.isDirectory()) return \"directory\"\n  if (stats.isSymbolicLink()) return \"symbolic-link\"\n  if (stats.isFIFO()) return \"fifo\"\n  if (stats.isSocket()) return \"socket\"\n  if (stats.isCharacterDevice()) return \"character-device\"\n  if (stats.isBlockDevice()) return \"block-device\"\n  return undefined\n}\n",
    "import { fileURLToPath } from \"url\"\n\nexport const urlToFileSystemPath = (fileUrl) => {\n  if (fileUrl[fileUrl.length - 1] === \"/\") {\n    // remove trailing / so that nodejs path becomes predictable otherwise it logs\n    // the trailing slash on linux but does not on windows\n    fileUrl = fileUrl.slice(0, -1)\n  }\n  const fileSystemPath = fileURLToPath(fileUrl)\n  return fileSystemPath\n}\n",
    "// https://github.com/coderaiser/cloudcmd/issues/63#issuecomment-195478143\n// https://nodejs.org/api/fs.html#fs_file_modes\n// https://github.com/TooTallNate/stat-mode\n\n// cannot get from fs.constants because they are not available on windows\nconst S_IRUSR = 256 /* 0000400 read permission, owner */\nconst S_IWUSR = 128 /* 0000200 write permission, owner */\nconst S_IXUSR = 64 /* 0000100 execute/search permission, owner */\nconst S_IRGRP = 32 /* 0000040 read permission, group */\nconst S_IWGRP = 16 /* 0000020 write permission, group */\nconst S_IXGRP = 8 /* 0000010 execute/search permission, group */\nconst S_IROTH = 4 /* 0000004 read permission, others */\nconst S_IWOTH = 2 /* 0000002 write permission, others */\nconst S_IXOTH = 1 /* 0000001 execute/search permission, others */\n\n/*\nhere we could warn that on windows only 0o444 or 0o666 will work\n\n0o444 (readonly)\n{\n  owner: {read: true, write: false, execute: false},\n  group: {read: true, write: false, execute: false},\n  others: {read: true, write: false, execute: false},\n}\n\n0o666 (read and write)\n{\n  owner: {read: true, write: true, execute: false},\n  group: {read: true, write: true, execute: false},\n  others: {read: true, write: true, execute: false},\n}\n*/\nexport const binaryFlagsToPermissions = (binaryFlags) => {\n  const owner = {\n    read: Boolean(binaryFlags & S_IRUSR),\n    write: Boolean(binaryFlags & S_IWUSR),\n    execute: Boolean(binaryFlags & S_IXUSR),\n  }\n\n  const group = {\n    read: Boolean(binaryFlags & S_IRGRP),\n    write: Boolean(binaryFlags & S_IWGRP),\n    execute: Boolean(binaryFlags & S_IXGRP),\n  }\n\n  const others = {\n    read: Boolean(binaryFlags & S_IROTH),\n    write: Boolean(binaryFlags & S_IWOTH),\n    execute: Boolean(binaryFlags & S_IXOTH),\n  }\n\n  return {\n    owner,\n    group,\n    others,\n  }\n}\n\nexport const permissionsToBinaryFlags = ({ owner, group, others }) => {\n  let binaryFlags = 0\n\n  if (owner.read) binaryFlags |= S_IRUSR\n  if (owner.write) binaryFlags |= S_IWUSR\n  if (owner.execute) binaryFlags |= S_IXUSR\n\n  if (group.read) binaryFlags |= S_IRGRP\n  if (group.write) binaryFlags |= S_IWGRP\n  if (group.execute) binaryFlags |= S_IXGRP\n\n  if (others.read) binaryFlags |= S_IROTH\n  if (others.write) binaryFlags |= S_IWOTH\n  if (others.execute) binaryFlags |= S_IXOTH\n\n  return binaryFlags\n}\n",
    "import { chmod } from \"fs\"\nimport { permissionsToBinaryFlags } from \"./internal/permissions.js\"\nimport { assertAndNormalizeFileUrl } from \"./assertAndNormalizeFileUrl.js\"\nimport { urlToFileSystemPath } from \"./urlToFileSystemPath.js\"\n\nexport const writeFileSystemNodePermissions = async (source, permissions) => {\n  const sourceUrl = assertAndNormalizeFileUrl(source)\n  const sourcePath = urlToFileSystemPath(sourceUrl)\n\n  let binaryFlags\n  if (typeof permissions === \"object\") {\n    permissions = {\n      owner: {\n        read: getPermissionOrComputeDefault(\"read\", \"owner\", permissions),\n        write: getPermissionOrComputeDefault(\"write\", \"owner\", permissions),\n        execute: getPermissionOrComputeDefault(\"execute\", \"owner\", permissions),\n      },\n      group: {\n        read: getPermissionOrComputeDefault(\"read\", \"group\", permissions),\n        write: getPermissionOrComputeDefault(\"write\", \"group\", permissions),\n        execute: getPermissionOrComputeDefault(\"execute\", \"group\", permissions),\n      },\n      others: {\n        read: getPermissionOrComputeDefault(\"read\", \"others\", permissions),\n        write: getPermissionOrComputeDefault(\"write\", \"others\", permissions),\n        execute: getPermissionOrComputeDefault(\"execute\", \"others\", permissions),\n      },\n    }\n    binaryFlags = permissionsToBinaryFlags(permissions)\n  } else {\n    binaryFlags = permissions\n  }\n\n  return chmodNaive(sourcePath, binaryFlags)\n}\n\nconst chmodNaive = (fileSystemPath, binaryFlags) => {\n  return new Promise((resolve, reject) => {\n    chmod(fileSystemPath, binaryFlags, (error) => {\n      if (error) {\n        reject(error)\n      } else {\n        resolve()\n      }\n    })\n  })\n}\n\nconst actionLevels = { read: 0, write: 1, execute: 2 }\nconst subjectLevels = { others: 0, group: 1, owner: 2 }\n\nconst getPermissionOrComputeDefault = (action, subject, permissions) => {\n  if (subject in permissions) {\n    const subjectPermissions = permissions[subject]\n    if (action in subjectPermissions) {\n      return subjectPermissions[action]\n    }\n\n    const actionLevel = actionLevels[action]\n    const actionFallback = Object.keys(actionLevels).find(\n      (actionFallbackCandidate) =>\n        actionLevels[actionFallbackCandidate] > actionLevel &&\n        actionFallbackCandidate in subjectPermissions,\n    )\n    if (actionFallback) {\n      return subjectPermissions[actionFallback]\n    }\n  }\n\n  const subjectLevel = subjectLevels[subject]\n  // do we have a subject with a stronger level (group or owner)\n  // where we could read the action permission ?\n  const subjectFallback = Object.keys(subjectLevels).find(\n    (subjectFallbackCandidate) =>\n      subjectLevels[subjectFallbackCandidate] > subjectLevel &&\n      subjectFallbackCandidate in permissions,\n  )\n  if (subjectFallback) {\n    const subjectPermissions = permissions[subjectFallback]\n    return action in subjectPermissions\n      ? subjectPermissions[action]\n      : getPermissionOrComputeDefault(action, subjectFallback, permissions)\n  }\n\n  return false\n}\n",
    "import { lstat, stat } from \"fs\"\nimport { assertAndNormalizeFileUrl } from \"./assertAndNormalizeFileUrl.js\"\nimport { urlToFileSystemPath } from \"./urlToFileSystemPath.js\"\nimport { writeFileSystemNodePermissions } from \"./writeFileSystemNodePermissions.js\"\n\nconst isWindows = process.platform === \"win32\"\n\nexport const readFileSystemNodeStat = async (\n  source,\n  { nullIfNotFound = false, followLink = true } = {},\n) => {\n  if (source.endsWith(\"/\")) source = source.slice(0, -1)\n\n  const sourceUrl = assertAndNormalizeFileUrl(source)\n  const sourcePath = urlToFileSystemPath(sourceUrl)\n\n  const handleNotFoundOption = nullIfNotFound\n    ? {\n        handleNotFoundError: () => null,\n      }\n    : {}\n\n  return readStat(sourcePath, {\n    followLink,\n    ...handleNotFoundOption,\n    ...(isWindows\n      ? {\n          // Windows can EPERM on stat\n          handlePermissionDeniedError: async (error) => {\n            console.error(`trying to fix windows EPERM after stats on ${sourcePath}`)\n\n            try {\n              // unfortunately it means we mutate the permissions\n              // without being able to restore them to the previous value\n              // (because reading current permission would also throw)\n              await writeFileSystemNodePermissions(sourceUrl, 0o666)\n              const stats = await readStat(sourcePath, {\n                followLink,\n                ...handleNotFoundOption,\n                // could not fix the permission error, give up and throw original error\n                handlePermissionDeniedError: () => {\n                  console.error(`still got EPERM after stats on ${sourcePath}`)\n                  throw error\n                },\n              })\n              return stats\n            } catch (e) {\n              console.error(\n                `error while trying to fix windows EPERM after stats on ${sourcePath}: ${e.stack}`,\n              )\n              throw error\n            }\n          },\n        }\n      : {}),\n  })\n}\n\nconst readStat = (\n  sourcePath,\n  { followLink, handleNotFoundError = null, handlePermissionDeniedError = null } = {},\n) => {\n  const nodeMethod = followLink ? stat : lstat\n\n  return new Promise((resolve, reject) => {\n    nodeMethod(sourcePath, (error, statsObject) => {\n      if (error) {\n        if (handleNotFoundError && error.code === \"ENOENT\") {\n          resolve(handleNotFoundError(error))\n        } else if (\n          handlePermissionDeniedError &&\n          (error.code === \"EPERM\" || error.code === \"EACCES\")\n        ) {\n          resolve(handlePermissionDeniedError(error))\n        } else {\n          reject(error)\n        }\n      } else {\n        resolve(statsObject)\n      }\n    })\n  })\n}\n",
    "export const firstOperationMatching = ({ array, start, predicate }) => {\n  if (typeof array !== \"object\") {\n    throw new TypeError(`array must be an object, got ${array}`)\n  }\n  if (typeof start !== \"function\") {\n    throw new TypeError(`start must be a function, got ${start}`)\n  }\n  if (typeof predicate !== \"function\") {\n    throw new TypeError(`predicate must be a function, got ${predicate}`)\n  }\n\n  const visit = async (index) => {\n    if (index >= array.length) {\n      return undefined\n    }\n    const input = array[index]\n    const output = await start(input)\n    if (predicate(output)) {\n      return output\n    }\n    return visit(index + 1)\n  }\n\n  return visit(0)\n}\n",
    "export const createCancelError = (reason) => {\n  const cancelError = new Error(`canceled because ${reason}`)\n  cancelError.name = \"CANCEL_ERROR\"\n  cancelError.reason = reason\n  return cancelError\n}\n\nexport const isCancelError = (value) => {\n  return value && typeof value === \"object\" && value.name === \"CANCEL_ERROR\"\n}\n\nexport const errorToCancelReason = (error) => {\n  if (!isCancelError(error)) return \"\"\n  return error.reason\n}\n",
    "export const getCommandArgument = (argv, name) => {\n  let i = 0\n\n  while (i < argv.length) {\n    const arg = argv[i]\n\n    if (arg === name) {\n      return {\n        name,\n        index: i,\n        value: \"\",\n      }\n    }\n\n    if (arg.startsWith(`${name}=`)) {\n      return {\n        name,\n        index: i,\n        value: arg.slice(`${name}=`.length),\n      }\n    }\n\n    i++\n  }\n\n  return null\n}\n",
    "import { isCancelError } from \"@jsenv/cancellation\"\nimport { getCommandArgument } from \"./internal/getCommandArgument.js\"\n\nexport const wrapExternalFunction = (\n  fn,\n  { catchCancellation = false, unhandledRejectionStrict = false } = {},\n) => {\n  if (catchCancellation) {\n    const previousFn = fn\n    fn = async () => {\n      try {\n        const value = await previousFn()\n        return value\n      } catch (error) {\n        if (isCancelError(error)) {\n          // it means consume of the function will resolve with a cancelError\n          // but when you cancel it means you're not interested in the result anymore\n          // thanks to this it avoid unhandledRejection\n          return error\n        }\n        throw error\n      }\n    }\n  }\n\n  if (unhandledRejectionStrict) {\n    const previousFn = fn\n    fn = async () => {\n      const uninstall = installUnhandledRejectionStrict()\n      try {\n        const value = await previousFn()\n        uninstall()\n        return value\n      } catch (e) {\n        // don't remove it immediatly to let nodejs emit the unhandled rejection\n        setTimeout(() => {\n          uninstall()\n        })\n        throw e\n      }\n    }\n  }\n\n  return fn()\n}\n\nconst installUnhandledRejectionStrict = () => {\n  const unhandledRejectionArg = getCommandArgument(process.execArgv, \"--unhandled-rejections\")\n  if (unhandledRejectionArg === \"strict\") return () => {}\n\n  const onUnhandledRejection = (reason) => {\n    throw reason\n  }\n  process.once(\"unhandledRejection\", onUnhandledRejection)\n  return () => {\n    process.removeListener(\"unhandledRejection\", onUnhandledRejection)\n  }\n}\n",
    "export const getCommonPathname = (pathname, otherPathname) => {\n  const firstDifferentCharacterIndex = findFirstDifferentCharacterIndex(pathname, otherPathname)\n\n  // pathname and otherpathname are exactly the same\n  if (firstDifferentCharacterIndex === -1) {\n    return pathname\n  }\n\n  const commonString = pathname.slice(0, firstDifferentCharacterIndex + 1)\n\n  // the first different char is at firstDifferentCharacterIndex\n  if (pathname.charAt(firstDifferentCharacterIndex) === \"/\") {\n    return commonString\n  }\n\n  if (otherPathname.charAt(firstDifferentCharacterIndex) === \"/\") {\n    return commonString\n  }\n\n  const firstDifferentSlashIndex = commonString.lastIndexOf(\"/\")\n  return pathname.slice(0, firstDifferentSlashIndex + 1)\n}\n\nconst findFirstDifferentCharacterIndex = (string, otherString) => {\n  const maxCommonLength = Math.min(string.length, otherString.length)\n  let i = 0\n  while (i < maxCommonLength) {\n    const char = string.charAt(i)\n    const otherChar = otherString.charAt(i)\n    if (char !== otherChar) {\n      return i\n    }\n    i++\n  }\n  if (string.length === otherString.length) {\n    return -1\n  }\n  // they differ at maxCommonLength\n  return maxCommonLength\n}\n",
    "export const pathnameToParentPathname = (pathname) => {\n  const slashLastIndex = pathname.lastIndexOf(\"/\")\n  if (slashLastIndex === -1) {\n    return \"/\"\n  }\n\n  return pathname.slice(0, slashLastIndex + 1)\n}\n",
    "import { getCommonPathname } from \"./internal/getCommonPathname.js\"\nimport { pathnameToParentPathname } from \"./internal/pathnameToParentPathname.js\"\n\nexport const urlToRelativeUrl = (urlArg, baseUrlArg) => {\n  const url = new URL(urlArg)\n  const baseUrl = new URL(baseUrlArg)\n\n  if (url.protocol !== baseUrl.protocol) {\n    return urlArg\n  }\n\n  if (url.username !== baseUrl.username || url.password !== baseUrl.password) {\n    return urlArg.slice(url.protocol.length)\n  }\n\n  if (url.host !== baseUrl.host) {\n    return urlArg.slice(url.protocol.length)\n  }\n\n  const { pathname, hash, search } = url\n  if (pathname === \"/\") {\n    return baseUrl.pathname.slice(1)\n  }\n\n  const { pathname: basePathname } = baseUrl\n\n  const commonPathname = getCommonPathname(pathname, basePathname)\n  if (!commonPathname) {\n    return urlArg\n  }\n\n  const specificPathname = pathname.slice(commonPathname.length)\n  const baseSpecificPathname = basePathname.slice(commonPathname.length)\n  if (baseSpecificPathname.includes(\"/\")) {\n    const baseSpecificParentPathname = pathnameToParentPathname(baseSpecificPathname)\n    const relativeDirectoriesNotation = baseSpecificParentPathname.replace(/.*?\\//g, \"../\")\n    return `${relativeDirectoriesNotation}${specificPathname}${search}${hash}`\n  }\n  return `${specificPathname}${search}${hash}`\n}\n",
    "import { promises } from \"fs\"\nimport { statsToType } from \"./internal/statsToType.js\"\nimport { assertAndNormalizeDirectoryUrl } from \"./assertAndNormalizeDirectoryUrl.js\"\nimport { urlToFileSystemPath } from \"./urlToFileSystemPath.js\"\nimport { readFileSystemNodeStat } from \"./readFileSystemNodeStat.js\"\n\n// https://nodejs.org/dist/latest-v13.x/docs/api/fs.html#fs_fspromises_mkdir_path_options\nconst { mkdir } = promises\n\nexport const writeDirectory = async (\n  destination,\n  { recursive = true, allowUseless = false } = {},\n) => {\n  const destinationUrl = assertAndNormalizeDirectoryUrl(destination)\n  const destinationPath = urlToFileSystemPath(destinationUrl)\n\n  const destinationStats = await readFileSystemNodeStat(destinationUrl, {\n    nullIfNotFound: true,\n    followLink: false,\n  })\n\n  if (destinationStats) {\n    if (destinationStats.isDirectory()) {\n      if (allowUseless) {\n        return\n      }\n      throw new Error(`directory already exists at ${destinationPath}`)\n    }\n\n    const destinationType = statsToType(destinationStats)\n    throw new Error(\n      `cannot write directory at ${destinationPath} because there is a ${destinationType}`,\n    )\n  }\n\n  try {\n    await mkdir(destinationPath, { recursive })\n  } catch (error) {\n    if (allowUseless && error.code === \"EEXIST\") {\n      return\n    }\n    throw error\n  }\n}\n",
    "export const resolveUrl = (specifier, baseUrl) => {\n  if (typeof baseUrl === \"undefined\") {\n    throw new TypeError(`baseUrl missing to resolve ${specifier}`)\n  }\n\n  return String(new URL(specifier, baseUrl))\n}\n",
    "import { dirname } from \"path\"\nimport { assertAndNormalizeFileUrl } from \"./assertAndNormalizeFileUrl.js\"\nimport { urlToFileSystemPath } from \"./urlToFileSystemPath.js\"\nimport { writeDirectory } from \"./writeDirectory.js\"\n\nexport const ensureParentDirectories = async (destination) => {\n  const destinationUrl = assertAndNormalizeFileUrl(destination)\n  const destinationPath = urlToFileSystemPath(destinationUrl)\n  const destinationParentPath = dirname(destinationPath)\n\n  return writeDirectory(destinationParentPath, { recursive: true, allowUseless: true })\n}\n",
    "import { fileSystemPathToUrl } from \"./fileSystemPathToUrl.js\"\n\nconst isWindows = process.platform === \"win32\"\nconst baseUrlFallback = fileSystemPathToUrl(process.cwd())\n\n/**\n * Some url might be resolved or remapped to url without the windows drive letter.\n * For instance\n * new URL('/foo.js', 'file:///C:/dir/file.js')\n * resolves to\n * 'file:///foo.js'\n *\n * But on windows it becomes a problem because we need the drive letter otherwise\n * url cannot be converted to a filesystem path.\n *\n * ensureWindowsDriveLetter ensure a resolved url still contains the drive letter.\n */\n\nexport const ensureWindowsDriveLetter = (url, baseUrl) => {\n  try {\n    url = String(new URL(url))\n  } catch (e) {\n    throw new Error(`absolute url expected but got ${url}`)\n  }\n\n  if (!isWindows) {\n    return url\n  }\n\n  try {\n    baseUrl = String(new URL(baseUrl))\n  } catch (e) {\n    throw new Error(\n      `absolute baseUrl expected but got ${baseUrl} to ensure windows drive letter on ${url}`,\n    )\n  }\n\n  if (!url.startsWith(\"file://\")) {\n    return url\n  }\n  const afterProtocol = url.slice(\"file://\".length)\n  // we still have the windows drive letter\n  if (extractDriveLetter(afterProtocol)) {\n    return url\n  }\n\n  // drive letter was lost, restore it\n  const baseUrlOrFallback = baseUrl.startsWith(\"file://\") ? baseUrl : baseUrlFallback\n  const driveLetter = extractDriveLetter(baseUrlOrFallback.slice(\"file://\".length))\n  if (!driveLetter) {\n    throw new Error(\n      `drive letter expected on baseUrl but got ${baseUrl} to ensure windows drive letter on ${url}`,\n    )\n  }\n  return `file:///${driveLetter}:${afterProtocol}`\n}\n\nconst extractDriveLetter = (ressource) => {\n  // we still have the windows drive letter\n  if (/[a-zA-Z]/.test(ressource[1]) && ressource[2] === \":\") {\n    return ressource[1]\n  }\n  return null\n}\n",
    "import { promises } from \"fs\"\nimport { assertAndNormalizeFileUrl } from \"./assertAndNormalizeFileUrl.js\"\nimport { urlToFileSystemPath } from \"./urlToFileSystemPath.js\"\nimport { resolveUrl } from \"./resolveUrl.js\"\nimport { isFileSystemPath } from \"./isFileSystemPath.js\"\nimport { ensureParentDirectories } from \"./ensureParentDirectories.js\"\nimport { readFileSystemNodeStat } from \"./readFileSystemNodeStat.js\"\n\n// https://nodejs.org/dist/latest-v13.x/docs/api/fs.html#fs_fspromises_symlink_target_path_type\nconst { symlink } = promises\nconst isWindows = process.platform === \"win32\"\n\nexport const writeSymbolicLink = async (destination, target, { type } = {}) => {\n  const destinationUrl = assertAndNormalizeFileUrl(destination)\n\n  let targetValue\n  if (typeof target === \"string\") {\n    // absolute filesystem path\n    if (isFileSystemPath(target)) {\n      targetValue = target\n    }\n    // relative url\n    else if (target.startsWith(\"./\") || target.startsWith(\"../\")) {\n      targetValue = target\n    }\n    // absolute url\n    else {\n      const targetUrl = String(new URL(target, destinationUrl))\n      targetValue = urlToFileSystemPath(targetUrl)\n    }\n  } else if (target instanceof URL) {\n    targetValue = urlToFileSystemPath(target)\n  } else {\n    throw new TypeError(`symbolic link target must be a string or an url, received ${target}`)\n  }\n\n  if (isWindows && typeof type !== \"string\") {\n    // without this if you write a symbolic link without specifying the type on windows\n    // you later get EPERM when doing stat on the symlink\n    const targetUrl = resolveUrl(targetValue, destinationUrl)\n    const targetStats = await readFileSystemNodeStat(targetUrl, { nullIfNotFound: true })\n    type = targetStats && targetStats.isDirectory() ? \"dir\" : \"file\"\n  }\n\n  const symbolicLinkPath = urlToFileSystemPath(destinationUrl)\n  try {\n    await symlink(targetValue, symbolicLinkPath, type)\n  } catch (error) {\n    if (error.code === \"ENOENT\") {\n      await ensureParentDirectories(destinationUrl)\n      await symlink(targetValue, symbolicLinkPath, type)\n      return\n    }\n    throw error\n  }\n}\n",
    "import { promisify } from \"util\"\nimport { readFile as readFileNode } from \"fs\"\nimport { assertAndNormalizeFileUrl } from \"./assertAndNormalizeFileUrl.js\"\nimport { urlToFileSystemPath } from \"./urlToFileSystemPath.js\"\n\nconst readFilePromisified = promisify(readFileNode)\nexport const readFile = async (value, { as = \"string\" } = {}) => {\n  const fileUrl = assertAndNormalizeFileUrl(value)\n  const filePath = urlToFileSystemPath(fileUrl)\n  const buffer = await readFilePromisified(filePath)\n  if (as === \"buffer\") {\n    return buffer\n  }\n  if (as === \"string\") {\n    return buffer.toString()\n  }\n  if (as === \"json\") {\n    return JSON.parse(buffer.toString())\n  }\n  throw new Error(`as must be one of buffer,string,json, received ${as}.`)\n}\n",
    "import { watch, openSync, closeSync } from \"fs\"\n\nconst isWindows = process.platform === \"win32\"\n\nexport const createWatcher = (sourcePath, options) => {\n  const watcher = watch(sourcePath, options)\n\n  if (isWindows) {\n    watcher.on(\"error\", async (error) => {\n      // https://github.com/joyent/node/issues/4337\n      if (error.code === \"EPERM\") {\n        try {\n          const fd = openSync(sourcePath, \"r\")\n          closeSync(fd)\n        } catch (e) {\n          if (e.code === \"ENOENT\") {\n            return\n          }\n          console.error(`error while fixing windows eperm: ${e.stack}`)\n          throw error\n        }\n      } else {\n        throw error\n      }\n    })\n  }\n\n  return watcher\n}\n",
    "/* eslint-disable import/max-dependencies */\nimport { readdirSync } from \"fs\"\nimport {\n  metaMapToSpecifierMetaMap,\n  normalizeSpecifierMetaMap,\n  urlCanContainsMetaMatching,\n  urlToMeta,\n} from \"@jsenv/url-meta\"\nimport { replaceBackSlashesWithSlashes } from \"./internal/replaceBackSlashesWithSlashes.js\"\nimport { fileSystemNodeToTypeOrNull } from \"./internal/fileSystemNodeToTypeOrNull.js\"\nimport { createWatcher } from \"./internal/createWatcher.js\"\nimport { trackRessources } from \"./internal/trackRessources.js\"\nimport { ensureUrlTrailingSlash } from \"./internal/ensureUrlTrailingSlash.js\"\nimport { resolveUrl } from \"./resolveUrl.js\"\nimport { assertAndNormalizeFileUrl } from \"./assertAndNormalizeFileUrl.js\"\nimport { urlToFileSystemPath } from \"./urlToFileSystemPath.js\"\nimport { urlToRelativeUrl } from \"./urlToRelativeUrl.js\"\n\nconst isLinux = process.platform === \"linux\"\n// linux does not support recursive option\nconst fsWatchSupportsRecursive = !isLinux\n\nexport const registerDirectoryLifecycle = (\n  source,\n  {\n    added,\n    updated,\n    removed,\n    watchDescription = {\n      \"./**/*\": true,\n    },\n    notifyExistent = false,\n    keepProcessAlive = true,\n    recursive = false,\n  },\n) => {\n  const sourceUrl = ensureUrlTrailingSlash(assertAndNormalizeFileUrl(source))\n  if (!undefinedOrFunction(added)) {\n    throw new TypeError(`added must be a function or undefined, got ${added}`)\n  }\n  if (!undefinedOrFunction(updated)) {\n    throw new TypeError(`updated must be a function or undefined, got ${updated}`)\n  }\n  if (!undefinedOrFunction(removed)) {\n    throw new TypeError(`removed must be a function or undefined, got ${removed}`)\n  }\n\n  const specifierMetaMap = normalizeSpecifierMetaMap(\n    metaMapToSpecifierMetaMap({\n      watch: watchDescription,\n    }),\n    sourceUrl,\n  )\n  const entryShouldBeWatched = ({ relativeUrl, type }) => {\n    const entryUrl = resolveUrl(relativeUrl, sourceUrl)\n\n    if (type === \"directory\") {\n      const canContainEntryToWatch = urlCanContainsMetaMatching({\n        url: `${entryUrl}/`,\n        specifierMetaMap,\n        predicate: ({ watch }) => watch,\n      })\n      return canContainEntryToWatch\n    }\n\n    const entryMeta = urlToMeta({\n      url: entryUrl,\n      specifierMetaMap,\n    })\n\n    return entryMeta.watch\n  }\n\n  const tracker = trackRessources()\n\n  const contentMap = new Map()\n\n  const handleDirectoryEvent = ({ directoryRelativeUrl, filename, eventType }) => {\n    if (filename) {\n      if (directoryRelativeUrl) {\n        handleChange(`${directoryRelativeUrl}/${filename}`)\n      } else {\n        handleChange(`${filename}`)\n      }\n    } else if ((removed || added) && eventType === \"rename\") {\n      // we might receive `rename` without filename\n      // in that case we try to find ourselves which file was removed.\n\n      let relativeUrlCandidateArray = Array.from(contentMap.keys())\n\n      if (recursive && !fsWatchSupportsRecursive) {\n        relativeUrlCandidateArray = relativeUrlCandidateArray.filter((relativeUrlCandidate) => {\n          if (!directoryRelativeUrl) {\n            // ensure entry is top level\n            if (relativeUrlCandidate.includes(\"/\")) return false\n            return true\n          }\n\n          // entry not inside this directory\n          if (!relativeUrlCandidate.startsWith(directoryRelativeUrl)) return false\n\n          const afterDirectory = relativeUrlCandidate.slice(directoryRelativeUrl.length + 1)\n          // deep inside this directory\n          if (afterDirectory.includes(\"/\")) return false\n\n          return true\n        })\n      }\n\n      const removedEntryRelativeUrl = relativeUrlCandidateArray.find((relativeUrlCandidate) => {\n        const entryUrl = resolveUrl(relativeUrlCandidate, sourceUrl)\n        const type = fileSystemNodeToTypeOrNull(entryUrl)\n        return type === null\n      })\n\n      if (removedEntryRelativeUrl) {\n        handleEntryLost({\n          relativeUrl: removedEntryRelativeUrl,\n          type: contentMap.get(removedEntryRelativeUrl),\n        })\n      }\n    }\n  }\n\n  const handleChange = (relativeUrl) => {\n    const entryUrl = resolveUrl(relativeUrl, sourceUrl)\n    const previousType = contentMap.get(relativeUrl)\n    const type = fileSystemNodeToTypeOrNull(entryUrl)\n\n    if (!entryShouldBeWatched({ relativeUrl, type })) {\n      return\n    }\n\n    // it's something new\n    if (!previousType) {\n      if (type !== null) {\n        handleEntryFound({ relativeUrl, type, existent: false })\n      }\n      return\n    }\n\n    // it existed but now it's not here anymore\n    if (type === null) {\n      handleEntryLost({ relativeUrl, type: previousType })\n      return\n    }\n\n    // it existed but was replaced by something else\n    // it's not really an update\n    if (previousType !== type) {\n      handleEntryLost({ relativeUrl, type: previousType })\n      handleEntryFound({ relativeUrl, type })\n      return\n    }\n\n    // a directory cannot really be updated in way that matters for us\n    // filesystem is trying to tell us the directory content have changed\n    // but we don't care about that\n    // we'll already be notified about what has changed\n    if (type === \"directory\") {\n      return\n    }\n\n    // right same type, and the file existed and was not deleted\n    // it's likely an update ?\n    // but are we sure it's an update ?\n    if (updated) {\n      updated({ relativeUrl, type })\n    }\n  }\n\n  const handleEntryFound = ({ relativeUrl, type, existent }) => {\n    if (!entryShouldBeWatched({ relativeUrl, type })) {\n      return\n    }\n\n    contentMap.set(relativeUrl, type)\n\n    const entryUrl = resolveUrl(relativeUrl, sourceUrl)\n\n    if (type === \"directory\") {\n      visitDirectory({\n        directoryUrl: `${entryUrl}/`,\n        entryFound: (entry) => {\n          handleEntryFound({\n            relativeUrl: `${relativeUrl}/${entry.relativeUrl}`,\n            type: entry.type,\n            existent,\n          })\n        },\n      })\n    }\n\n    if (added) {\n      if (existent) {\n        if (notifyExistent) {\n          added({ relativeUrl, type, existent: true })\n        }\n      } else {\n        added({ relativeUrl, type })\n      }\n    }\n\n    // we must watch manually every directory we find\n    if (!fsWatchSupportsRecursive && type === \"directory\") {\n      const watcher = createWatcher(urlToFileSystemPath(entryUrl), { persistent: keepProcessAlive })\n      tracker.registerCleanupCallback(() => {\n        watcher.close()\n      })\n      watcher.on(\"change\", (eventType, filename) => {\n        handleDirectoryEvent({\n          directoryRelativeUrl: relativeUrl,\n          filename: filename ? replaceBackSlashesWithSlashes(filename) : \"\",\n          eventType,\n        })\n      })\n    }\n  }\n\n  const handleEntryLost = ({ relativeUrl, type }) => {\n    contentMap.delete(relativeUrl)\n    if (removed) {\n      removed({ relativeUrl, type })\n    }\n  }\n\n  visitDirectory({\n    directoryUrl: sourceUrl,\n    entryFound: ({ relativeUrl, type }) => {\n      handleEntryFound({ relativeUrl, type, existent: true })\n    },\n  })\n\n  const watcher = createWatcher(urlToFileSystemPath(sourceUrl), {\n    recursive: recursive && fsWatchSupportsRecursive,\n    persistent: keepProcessAlive,\n  })\n  tracker.registerCleanupCallback(() => {\n    watcher.close()\n  })\n  watcher.on(\"change\", (eventType, fileSystemPath) => {\n    handleDirectoryEvent({\n      ...fileSystemPathToDirectoryRelativeUrlAndFilename(fileSystemPath),\n      eventType,\n    })\n  })\n\n  return tracker.cleanup\n}\n\nconst undefinedOrFunction = (value) => typeof value === \"undefined\" || typeof value === \"function\"\n\nconst visitDirectory = ({ directoryUrl, entryFound }) => {\n  const directoryPath = urlToFileSystemPath(directoryUrl)\n  readdirSync(directoryPath).forEach((entry) => {\n    const entryUrl = resolveUrl(entry, directoryUrl)\n    const type = fileSystemNodeToTypeOrNull(entryUrl)\n    if (type === null) {\n      return\n    }\n\n    const relativeUrl = urlToRelativeUrl(entryUrl, directoryUrl)\n    entryFound({\n      relativeUrl,\n      type,\n    })\n  })\n}\n\nconst fileSystemPathToDirectoryRelativeUrlAndFilename = (path) => {\n  if (!path) {\n    return {\n      directoryRelativeUrl: \"\",\n      filename: \"\",\n    }\n  }\n\n  const normalizedPath = replaceBackSlashesWithSlashes(path)\n  const slashLastIndex = normalizedPath.lastIndexOf(\"/\")\n  if (slashLastIndex === -1) {\n    return {\n      directoryRelativeUrl: \"\",\n      filename: normalizedPath,\n    }\n  }\n\n  const directoryRelativeUrl = normalizedPath.slice(0, slashLastIndex)\n  const filename = normalizedPath.slice(slashLastIndex + 1)\n  return {\n    directoryRelativeUrl,\n    filename,\n  }\n}\n",
    "export const urlToScheme = (urlString) => {\n  const colonIndex = urlString.indexOf(\":\")\n  if (colonIndex === -1) {\n    return \"\"\n  }\n\n  const scheme = urlString.slice(0, colonIndex)\n  return scheme\n}\n",
    "import { urlToScheme } from \"./urlToScheme.js\"\n\nexport const urlToRessource = (urlString) => {\n  const scheme = urlToScheme(urlString)\n\n  if (scheme === \"file\") {\n    return urlString.slice(\"file://\".length)\n  }\n\n  if (scheme === \"https\" || scheme === \"http\") {\n    // remove origin\n    const afterProtocol = urlString.slice(scheme.length + \"://\".length)\n    const pathnameSlashIndex = afterProtocol.indexOf(\"/\", \"://\".length)\n    return afterProtocol.slice(pathnameSlashIndex)\n  }\n\n  return urlString.slice(scheme.length + 1)\n}\n",
    "import { urlToRessource } from \"./urlToRessource.js\"\n\nexport const urlToPathname = (urlString) => {\n  const ressource = urlToRessource(urlString)\n  const pathname = ressourceToPathname(ressource)\n  return pathname\n}\n\nconst ressourceToPathname = (ressource) => {\n  const searchSeparatorIndex = ressource.indexOf(\"?\")\n  return searchSeparatorIndex === -1 ? ressource : ressource.slice(0, searchSeparatorIndex)\n}\n",
    "import { urlToPathname } from \"./urlToPathname.js\"\n\nexport const urlToFilename = (url) => {\n  const pathname = urlToPathname(url)\n  const slashLastIndex = pathname.lastIndexOf(\"/\")\n  const filename = slashLastIndex === -1 ? pathname : pathname.slice(slashLastIndex + 1)\n  return filename\n}\n",
    "import { urlToFilename } from \"./urlToFilename.js\"\n\nexport const urlToBasename = (pathname) => {\n  const filename = urlToFilename(pathname)\n  const dotLastIndex = filename.lastIndexOf(\".\")\n  const basename = dotLastIndex === -1 ? filename : filename.slice(0, dotLastIndex)\n  return basename\n}\n",
    "import { promises } from \"fs\"\nimport { assertAndNormalizeFileUrl } from \"./assertAndNormalizeFileUrl.js\"\nimport { urlToFileSystemPath } from \"./urlToFileSystemPath.js\"\nimport { ensureParentDirectories } from \"./ensureParentDirectories.js\"\n\n// https://nodejs.org/dist/latest-v13.x/docs/api/fs.html#fs_fspromises_writefile_file_data_options\nconst { writeFile: writeFileNode } = promises\n\nexport const writeFile = async (destination, content = \"\") => {\n  const destinationUrl = assertAndNormalizeFileUrl(destination)\n\n  const destinationPath = urlToFileSystemPath(destinationUrl)\n  try {\n    await writeFileNode(destinationPath, content)\n  } catch (error) {\n    if (error.code === \"ENOENT\") {\n      await ensureParentDirectories(destinationUrl)\n      await writeFileNode(destinationPath, content)\n      return\n    }\n    throw error\n  }\n}\n",
    "import { readFile } from \"@jsenv/util\"\n\nexport const readPackageFile = async (packageFileUrl, packagesManualOverrides) => {\n  const packageFileString = await readFile(packageFileUrl)\n  const packageJsonObject = JSON.parse(packageFileString)\n  const { name, version } = packageJsonObject\n\n  const overrideKey = Object.keys(packagesManualOverrides).find((overrideKeyCandidate) => {\n    if (name === overrideKeyCandidate) return true\n    if (`${name}@${version}` === overrideKeyCandidate) return true\n    return false\n  })\n  if (overrideKey) {\n    return composeObject(packageJsonObject, packagesManualOverrides[overrideKey])\n  }\n  return packageJsonObject\n}\n\nconst composeObject = (leftObject, rightObject) => {\n  const composedObject = {\n    ...leftObject,\n  }\n  Object.keys(rightObject).forEach((key) => {\n    const rightValue = rightObject[key]\n\n    if (rightValue === null || typeof rightValue !== \"object\" || key in leftObject === false) {\n      composedObject[key] = rightValue\n    } else {\n      const leftValue = leftObject[key]\n      if (leftValue === null || typeof leftValue !== \"object\") {\n        composedObject[key] = rightValue\n      } else {\n        composedObject[key] = composeObject(leftValue, rightValue)\n      }\n    }\n  })\n  return composedObject\n}\n",
    "import { firstOperationMatching } from \"@jsenv/cancellation\"\nimport { urlToRelativeUrl, resolveUrl, urlToFileSystemPath } from \"@jsenv/util\"\nimport { readPackageFile } from \"./readPackageFile.js\"\n\nexport const resolveNodeModule = async ({\n  logger,\n  rootProjectDirectoryUrl,\n  packagesManualOverrides,\n  packageFileUrl,\n  dependencyName,\n}) => {\n  const packageDirectoryUrl = resolveUrl(\"./\", packageFileUrl)\n  const nodeModuleCandidateArray = [\n    ...computeNodeModuleCandidateArray(packageDirectoryUrl, rootProjectDirectoryUrl),\n    `node_modules/`,\n  ]\n\n  return firstOperationMatching({\n    array: nodeModuleCandidateArray,\n    start: async (nodeModuleCandidate) => {\n      const packageFileUrl = `${rootProjectDirectoryUrl}${nodeModuleCandidate}${dependencyName}/package.json`\n      try {\n        const packageJsonObject = await readPackageFile(packageFileUrl, packagesManualOverrides)\n        return {\n          packageFileUrl,\n          packageJsonObject,\n        }\n      } catch (e) {\n        if (e.code === \"ENOENT\") {\n          return {}\n        }\n\n        if (e.name === \"SyntaxError\") {\n          logger.error(`\nerror while parsing dependency package.json.\n--- parsing error message ---\n${e.message}\n--- package.json path ---\n${urlToFileSystemPath(packageFileUrl)}\n`)\n          return {}\n        }\n\n        throw e\n      }\n    },\n    predicate: ({ packageJsonObject }) => Boolean(packageJsonObject),\n  })\n}\n\nconst computeNodeModuleCandidateArray = (packageDirectoryUrl, rootProjectDirectoryUrl) => {\n  if (packageDirectoryUrl === rootProjectDirectoryUrl) {\n    return []\n  }\n\n  const packageDirectoryRelativeUrl = urlToRelativeUrl(packageDirectoryUrl, rootProjectDirectoryUrl)\n\n  const candidateArray = []\n  const relativeNodeModuleDirectoryArray = packageDirectoryRelativeUrl.split(\"node_modules/\")\n  // remove the first empty string\n  relativeNodeModuleDirectoryArray.shift()\n\n  let i = relativeNodeModuleDirectoryArray.length\n  while (i--) {\n    candidateArray.push(\n      `node_modules/${relativeNodeModuleDirectoryArray\n        .slice(0, i + 1)\n        .join(\"node_modules/\")}node_modules/`,\n    )\n  }\n\n  return candidateArray\n}\n",
    "import { dirname, extname, basename } from \"path\"\nimport { firstOperationMatching } from \"@jsenv/cancellation\"\nimport { resolveUrl, urlToFileSystemPath, readFileSystemNodeStat } from \"@jsenv/util\"\n\nexport const resolvePackageMain = ({ logger, packageFileUrl, packageJsonObject }) => {\n  if (\"module\" in packageJsonObject) {\n    return resolveMainFile({\n      logger,\n      packageFileUrl,\n      packageMainFieldName: \"module\",\n      packageMainFieldValue: packageJsonObject.module,\n    })\n  }\n\n  if (\"jsnext:main\" in packageJsonObject) {\n    return resolveMainFile({\n      logger,\n      packageFileUrl,\n      packageMainFieldName: \"jsnext:main\",\n      packageMainFieldValue: packageJsonObject[\"jsnext:main\"],\n    })\n  }\n\n  if (\"main\" in packageJsonObject) {\n    return resolveMainFile({\n      logger,\n      packageFileUrl,\n      packageMainFieldName: \"main\",\n      packageMainFieldValue: packageJsonObject.main,\n    })\n  }\n\n  return resolveMainFile({\n    logger,\n    packageFileUrl,\n    packageMainFieldName: \"default\",\n    packageMainFieldValue: \"index\",\n  })\n}\n\nconst extensionCandidateArray = [\"js\", \"json\", \"node\"]\n\nconst resolveMainFile = async ({\n  logger,\n  packageFileUrl,\n  packageMainFieldName,\n  packageMainFieldValue,\n}) => {\n  // main is explicitely empty meaning\n  // it is assumed that we should not find a file\n  if (packageMainFieldValue === \"\") {\n    return null\n  }\n\n  const packageFilePath = urlToFileSystemPath(packageFileUrl)\n  const packageDirectoryUrl = resolveUrl(\"./\", packageFileUrl)\n  const mainFileRelativeUrl = packageMainFieldValue.endsWith(\"/\")\n    ? `${packageMainFieldValue}index`\n    : packageMainFieldValue\n\n  const mainFileUrlFirstCandidate = resolveUrl(mainFileRelativeUrl, packageFileUrl)\n\n  if (!mainFileUrlFirstCandidate.startsWith(packageDirectoryUrl)) {\n    logger.warn(\n      `\n${packageMainFieldName} field in package.json must be inside package.json folder.\n--- ${packageMainFieldName} ---\n${packageMainFieldValue}\n--- package.json path ---\n${packageFilePath}\n`,\n    )\n    return null\n  }\n\n  const mainFileUrl = await findMainFileUrlOrNull(mainFileUrlFirstCandidate)\n\n  if (mainFileUrl === null) {\n    // we know in advance this remapping does not lead to an actual file.\n    // we only warn because we have no guarantee this remapping will actually be used\n    // in the codebase.\n\n    // warn only if there is actually a main field\n    // otherwise the package.json is missing the main field\n    // it certainly means it's not important\n    if (packageMainFieldName !== \"default\") {\n      const extensionTried =\n        extname(urlToFileSystemPath(mainFileUrlFirstCandidate)) === \"\"\n          ? `--- extensions tried ---\n${extensionCandidateArray.join(`,`)}\n`\n          : `\n`\n\n      logger.warn(\n        `\ncannot find file for package.json ${packageMainFieldName} field\n--- ${packageMainFieldName} ---\n${packageMainFieldValue}\n--- file path ---\n${urlToFileSystemPath(mainFileUrlFirstCandidate)}\n--- package.json path ---\n${packageFilePath}\n${extensionTried}`,\n      )\n    }\n    return mainFileUrlFirstCandidate\n  }\n\n  return mainFileUrl\n}\n\nconst findMainFileUrlOrNull = async (mainFileUrl) => {\n  const mainStats = await readFileSystemNodeStat(mainFileUrl, { nullIfNotFound: true })\n\n  if (mainStats && mainStats.isFile()) {\n    return mainFileUrl\n  }\n\n  if (mainStats && mainStats.isDirectory()) {\n    const indexFileUrl = resolveUrl(\n      \"./index\",\n      mainFileUrl.endsWith(\"/\") ? mainFileUrl : `${mainFileUrl}/`,\n    )\n    const extensionLeadingToAFile = await findExtension(indexFileUrl)\n    if (extensionLeadingToAFile === null) {\n      return null\n    }\n    return `${indexFileUrl}.${extensionLeadingToAFile}`\n  }\n\n  const mainFilePath = urlToFileSystemPath(mainFileUrl)\n  const extension = extname(mainFilePath)\n\n  if (extension === \"\") {\n    const extensionLeadingToAFile = await findExtension(mainFileUrl)\n    if (extensionLeadingToAFile === null) {\n      return null\n    }\n    return `${mainFileUrl}.${extensionLeadingToAFile}`\n  }\n  return null\n}\n\nconst findExtension = async (fileUrl) => {\n  const filePath = urlToFileSystemPath(fileUrl)\n  const fileDirname = dirname(filePath)\n  const fileBasename = basename(filePath)\n  const extensionLeadingToFile = await firstOperationMatching({\n    array: extensionCandidateArray,\n    start: async (extensionCandidate) => {\n      const filePathCandidate = `${fileDirname}/${fileBasename}.${extensionCandidate}`\n      const stats = await readFileSystemNodeStat(filePathCandidate, { nullIfNotFound: true })\n      return stats && stats.isFile() ? extensionCandidate : null\n    },\n    predicate: (extension) => Boolean(extension),\n  })\n  return extensionLeadingToFile || null\n}\n",
    "export const specifierIsRelative = (specifier) => {\n  if (specifier.startsWith(\"//\")) {\n    return false\n  }\n  if (specifier.startsWith(\"../\")) {\n    return false\n  }\n  // starts with http:// or file:// or ftp: for instance\n  if (/^[a-zA-Z]+\\:/.test(specifier)) {\n    return false\n  }\n  return true\n}\n",
    "import { urlToFileSystemPath } from \"@jsenv/util\"\nimport { specifierIsRelative } from \"./specifierIsRelative.js\"\n\nexport const visitPackageImports = ({ logger, packageFileUrl, packageJsonObject }) => {\n  const importsForPackageImports = {}\n  const packageFilePath = urlToFileSystemPath(packageFileUrl)\n\n  const { imports: packageImports } = packageJsonObject\n  if (typeof packageImports !== \"object\" || packageImports === null) {\n    logger.warn(`\nimports of package.json must be an object.\n--- package.json imports ---\n${packageImports}\n--- package.json path ---\n${packageFilePath}\n`)\n    return importsForPackageImports\n  }\n\n  Object.keys(packageImports).forEach((specifier) => {\n    if (!specifierIsRelative(specifier)) {\n      logger.warn(`\nfound unexpected specifier in imports of package.json, it must be relative to package.json.\n--- specifier ---\n${specifier}\n--- package.json path ---\n${packageFilePath}\n`)\n      return\n    }\n\n    const address = packageImports[specifier]\n    if (typeof address !== \"string\") {\n      logger.warn(`\nfound unexpected address in imports of package.json, it must be a string.\n--- address ---\n${address}\n--- specifier ---\n${specifier}\n--- package.json path ---\n${packageFilePath}\n`)\n      return\n    }\n    if (!specifierIsRelative(address)) {\n      logger.warn(`\nfound unexpected address in imports of package.json, it must be relative to package.json.\n--- address ---\n${address}\n--- specifier ---\n${specifier}\n--- package.json path ---\n${packageFilePath}\n`)\n      return\n    }\n\n    let from\n    if (specifier[0] === \"/\") {\n      from = specifier\n    } else if (specifier.startsWith(\"./\")) {\n      from = specifier\n    } else {\n      from = specifier\n    }\n\n    const to = address\n\n    importsForPackageImports[from] = to\n  })\n\n  return importsForPackageImports\n}\n",
    "// https://nodejs.org/dist/latest-v13.x/docs/api/esm.html#esm_package_exports\n\nimport { urlToFileSystemPath } from \"@jsenv/util\"\nimport { specifierIsRelative } from \"./specifierIsRelative.js\"\n\nexport const visitPackageExports = ({\n  logger,\n  packageFileUrl,\n  packageName,\n  packageJsonObject,\n  packageInfo: { packageDirectoryRelativeUrl },\n  packagesExportsPreference,\n}) => {\n  const importsForPackageExports = {}\n\n  const packageFilePath = urlToFileSystemPath(packageFileUrl)\n  const { exports: packageExports } = packageJsonObject\n\n  // false is allowed as laternative to exports: {}\n  if (packageExports === false) {\n    return importsForPackageExports\n  }\n\n  const addressToDestination = (address) => {\n    if (address[0] === \"/\") {\n      return address\n    }\n    if (address.startsWith(\"./\")) {\n      return `./${packageDirectoryRelativeUrl}${address.slice(2)}`\n    }\n    return `./${packageDirectoryRelativeUrl}${address}`\n  }\n\n  // exports used to indicate the main file\n  if (typeof packageExports === \"string\") {\n    const from = packageName\n    const to = addressToDestination(packageExports)\n    importsForPackageExports[from] = to\n    return importsForPackageExports\n  }\n\n  if (typeof packageExports !== \"object\" || packageExports === null) {\n    logger.warn(`\nexports of package.json must be an object.\n--- package.json exports ---\n${packageExports}\n--- package.json path ---\n${packageFilePath}\n`)\n    return importsForPackageExports\n  }\n\n  const packageExportsKeys = Object.keys(packageExports)\n  const someSpecifierStartsWithDot = packageExportsKeys.some((key) => key.startsWith(\".\"))\n  if (someSpecifierStartsWithDot) {\n    const someSpecifierDoesNotStartsWithDot = packageExportsKeys.some((key) => !key.startsWith(\".\"))\n    if (someSpecifierDoesNotStartsWithDot) {\n      // see https://nodejs.org/dist/latest-v13.x/docs/api/esm.html#esm_exports_sugar\n      logger.error(`\nexports of package.json mixes conditional exports and direct exports.\n--- package.json path ---\n${packageFilePath}\n`)\n      return importsForPackageExports\n    }\n  }\n\n  packageExportsKeys.forEach((specifier) => {\n    if (!specifierIsRelative(specifier)) {\n      logger.warn(`\nfound unexpected specifier in exports of package.json, it must be relative to package.json.\n--- specifier ---\n${specifier}\n--- package.json path ---\n${packageFilePath}\n`)\n      return\n    }\n\n    const value = packageExports[specifier]\n    let address\n\n    if (typeof value === \"object\") {\n      address = readFavoredKey(value, packagesExportsPreference)\n\n      if (!address) {\n        return\n      }\n      if (typeof address === \"object\") {\n        address = readFavoredKey(address, packagesExportsPreference)\n        if (!address) {\n          return\n        }\n      }\n    } else if (typeof value === \"string\") {\n      address = value\n    } else {\n      logger.warn(`\nfound unexpected address in exports of package.json, it must be a string.\n--- address ---\n${address}\n--- specifier ---\n${specifier}\n--- package.json path ---\n${packageFilePath}\n`)\n      return\n    }\n\n    if (!specifierIsRelative(address)) {\n      logger.warn(`\nfound unexpected address in exports of package.json, it must be relative to package.json.\n--- address ---\n${address}\n--- specifier ---\n${specifier}\n--- package.json path ---\n${packageFilePath}\n`)\n      return\n    }\n\n    let from\n    if (specifier === \".\") {\n      from = packageName\n    } else if (specifier[0] === \"/\") {\n      from = specifier\n    } else if (specifier.startsWith(\"./\")) {\n      from = `${packageName}${specifier.slice(1)}`\n    } else {\n      from = `${packageName}/${specifier}`\n    }\n\n    const to = addressToDestination(address)\n\n    importsForPackageExports[from] = to\n  })\n\n  return importsForPackageExports\n}\n\nconst readFavoredKey = (object, favoredKeys) => {\n  const favoredKey = favoredKeys.find((key) => object.hasOwnProperty(key))\n  if (favoredKey) {\n    return object[favoredKey]\n  }\n  if (object.hasOwnProperty(\"default\")) {\n    return object.default\n  }\n  return undefined\n}\n",
    "import { createLogger } from \"@jsenv/logger\"\nimport { moveImportMap, sortImportMap } from \"@jsenv/import-map\"\nimport {\n  wrapExternalFunction,\n  resolveUrl,\n  urlToRelativeUrl,\n  assertAndNormalizeDirectoryUrl,\n  urlToFileSystemPath,\n  urlToBasename,\n  // createCancellationTokenForProcess,\n} from \"@jsenv/util\"\nimport { readPackageFile } from \"./internal/readPackageFile.js\"\nimport { resolveNodeModule } from \"./internal/resolveNodeModule.js\"\nimport { resolvePackageMain } from \"./internal/resolvePackageMain.js\"\nimport { visitPackageImports } from \"./internal/visitPackageImports.js\"\nimport { visitPackageExports } from \"./internal/visitPackageExports.js\"\n\nexport const getImportMapFromNodeModules = async ({\n  // nothing is actually listening for this cancellationToken for now\n  // it's not very important but it would be better to register on it\n  // an stops what we are doing if asked to do so\n  // cancellationToken = createCancellationTokenForProcess(),\n  logLevel,\n  projectDirectoryUrl,\n  rootProjectDirectoryUrl,\n  importMapFileRelativeUrl = \"./import-map.importmap\",\n\n  projectPackageDevDependenciesIncluded = process.env.NODE_ENV !== \"production\",\n  // pass [\"import\", \"browser\", \"require\"] to read browser first if defined\n  packagesExportsPreference = [\"import\", \"node\", \"require\"],\n  packagesExportsIncluded = true,\n  packagesSelfReference = true,\n  packagesImportsIncluded = true,\n  packagesManualOverrides = {},\n}) =>\n  wrapExternalFunction(\n    async () => {\n      const logger = createLogger({ logLevel })\n\n      projectDirectoryUrl = assertAndNormalizeDirectoryUrl(projectDirectoryUrl)\n      if (typeof rootProjectDirectoryUrl === \"undefined\") {\n        rootProjectDirectoryUrl = projectDirectoryUrl\n      } else {\n        rootProjectDirectoryUrl = assertAndNormalizeDirectoryUrl(rootProjectDirectoryUrl)\n      }\n\n      const projectPackageFileUrl = resolveUrl(\"./package.json\", projectDirectoryUrl)\n      const rootProjectPackageFileUrl = resolveUrl(\"./package.json\", rootProjectDirectoryUrl)\n\n      const imports = {}\n      const scopes = {}\n      const seen = {}\n\n      const markPackageAsSeen = (packageFileUrl, importerPackageFileUrl) => {\n        if (packageFileUrl in seen) {\n          seen[packageFileUrl].push(importerPackageFileUrl)\n        } else {\n          seen[packageFileUrl] = [importerPackageFileUrl]\n        }\n      }\n\n      const packageIsSeen = (packageFileUrl, importerPackageFileUrl) => {\n        return packageFileUrl in seen && seen[packageFileUrl].includes(importerPackageFileUrl)\n      }\n\n      const visit = async ({\n        packageFileUrl,\n        packageName,\n        packageJsonObject,\n        importerPackageFileUrl,\n        importerPackageJsonObject,\n        includeDevDependencies,\n      }) => {\n        await visitDependencies({\n          packageFileUrl,\n          packageJsonObject,\n          includeDevDependencies,\n        })\n        await visitPackage({\n          packageFileUrl,\n          packageName,\n          packageJsonObject,\n          importerPackageFileUrl,\n          importerPackageJsonObject,\n        })\n      }\n\n      const visitPackage = async ({\n        packageFileUrl,\n        packageName,\n        packageJsonObject,\n        importerPackageFileUrl,\n        importerPackageJsonObject,\n      }) => {\n        const packageInfo = computePackageInfo({\n          packageFileUrl,\n          packageName,\n          importerPackageFileUrl,\n        })\n\n        await visitPackageMain({\n          packageFileUrl,\n          packageName,\n          packageJsonObject,\n          packageInfo,\n        })\n\n        if (packagesImportsIncluded && \"imports\" in packageJsonObject) {\n          const importsForPackageImports = visitPackageImports({\n            logger,\n            packageFileUrl,\n            packageName,\n            packageJsonObject,\n            packageInfo,\n          })\n\n          const { packageIsRoot, packageDirectoryRelativeUrl } = packageInfo\n          Object.keys(importsForPackageImports).forEach((from) => {\n            const to = importsForPackageImports[from]\n\n            if (packageIsRoot) {\n              addTopLevelImportMapping({ from, to })\n            } else {\n              const toScoped =\n                to[0] === \"/\"\n                  ? to\n                  : `./${packageDirectoryRelativeUrl}${to.startsWith(\"./\") ? to.slice(2) : to}`\n\n              addScopedImportMapping({\n                scope: `./${packageDirectoryRelativeUrl}`,\n                from,\n                to: toScoped,\n              })\n\n              // when a package says './' maps to './'\n              // we must add something to say if we are already inside the package\n              // no need to ensure leading slash are scoped to the package\n              if (from === \"./\" && to === \"./\") {\n                addScopedImportMapping({\n                  scope: `./${packageDirectoryRelativeUrl}`,\n                  from: `./${packageDirectoryRelativeUrl}`,\n                  to: `./${packageDirectoryRelativeUrl}`,\n                })\n              } else if (from === \"/\" && to === \"/\") {\n                addScopedImportMapping({\n                  scope: `./${packageDirectoryRelativeUrl}`,\n                  from: `./${packageDirectoryRelativeUrl}`,\n                  to: `./${packageDirectoryRelativeUrl}`,\n                })\n              }\n            }\n          })\n        }\n\n        if (packagesSelfReference) {\n          const { packageIsRoot, packageDirectoryRelativeUrl } = packageInfo\n\n          // allow import 'package-name/dir/file.js' in package-name files\n          if (packageIsRoot) {\n            addTopLevelImportMapping({\n              from: `${packageName}/`,\n              to: `./${packageDirectoryRelativeUrl}`,\n            })\n          }\n          // scoped allow import 'package-name/dir/file.js' in package-name files\n          else {\n            addScopedImportMapping({\n              scope: `./${packageDirectoryRelativeUrl}`,\n              from: `${packageName}/`,\n              to: `./${packageDirectoryRelativeUrl}`,\n            })\n          }\n        }\n\n        if (packagesExportsIncluded && \"exports\" in packageJsonObject) {\n          const importsForPackageExports = visitPackageExports({\n            logger,\n            packageFileUrl,\n            packageName,\n            packageJsonObject,\n            packageInfo,\n            packagesExportsPreference,\n          })\n\n          const {\n            importerIsRoot,\n            importerRelativeUrl,\n            packageIsRoot,\n            packageDirectoryRelativeUrl,\n            // packageDirectoryUrl,\n            // packageDirectoryUrlExpected,\n          } = packageInfo\n\n          if (packageIsRoot && packagesSelfReference) {\n            Object.keys(importsForPackageExports).forEach((from) => {\n              const to = importsForPackageExports[from]\n              addTopLevelImportMapping({\n                from,\n                to,\n              })\n            })\n          } else if (packageIsRoot) {\n            // ignore exports\n          } else {\n            Object.keys(importsForPackageExports).forEach((from) => {\n              const to = importsForPackageExports[from]\n\n              // own package exports available to himself\n              if (importerIsRoot) {\n                // importer is the package himself, keep exports scoped\n                // otherwise the dependency exports would override the package exports.\n                if (importerPackageJsonObject.name === packageName) {\n                  addScopedImportMapping({\n                    scope: `./${packageDirectoryRelativeUrl}`,\n                    from,\n                    to,\n                  })\n                  if (from === packageName || from in imports === false) {\n                    addTopLevelImportMapping({ from, to })\n                  }\n                } else {\n                  addTopLevelImportMapping({ from, to })\n                }\n              } else {\n                addScopedImportMapping({\n                  scope: `./${packageDirectoryRelativeUrl}`,\n                  from,\n                  to,\n                })\n              }\n\n              // now make package exports available to the importer\n              // if importer is root no need because the top level remapping does it\n              if (importerIsRoot) {\n                return\n              }\n\n              // now make it available to the importer\n              // here if the importer is himself we could do stuff\n              // we should even handle the case earlier to prevent top level remapping\n              addScopedImportMapping({ scope: `./${importerRelativeUrl}`, from, to })\n            })\n          }\n        }\n      }\n\n      const visitPackageMain = async ({\n        packageFileUrl,\n        packageName,\n        packageJsonObject,\n        packageInfo: {\n          importerIsRoot,\n          importerRelativeUrl,\n          packageIsRoot,\n          packageIsProject,\n          packageDirectoryUrl,\n          packageDirectoryUrlExpected,\n        },\n      }) => {\n        const self = packageIsRoot || packageIsProject\n        if (self && !packagesSelfReference) return\n\n        const mainFileUrl = await resolvePackageMain({\n          packageFileUrl,\n          packageJsonObject,\n          logger,\n        })\n\n        // it's possible to have no main\n        // like { main: \"\" } in package.json\n        // or a main that does not lead to an actual file\n        if (mainFileUrl === null) return\n\n        const mainFileRelativeUrl = urlToRelativeUrl(mainFileUrl, rootProjectDirectoryUrl)\n        const from = packageName\n        const to = `./${mainFileRelativeUrl}`\n\n        if (importerIsRoot) {\n          addTopLevelImportMapping({ from, to })\n        } else {\n          addScopedImportMapping({ scope: `./${importerRelativeUrl}`, from, to })\n        }\n        if (packageDirectoryUrl !== packageDirectoryUrlExpected) {\n          addScopedImportMapping({ scope: `./${importerRelativeUrl}`, from, to })\n        }\n      }\n\n      const visitDependencies = async ({\n        packageFileUrl,\n        packageJsonObject,\n        includeDevDependencies,\n      }) => {\n        const dependencyMap = {}\n\n        const { dependencies = {} } = packageJsonObject\n        // https://npm.github.io/using-pkgs-docs/package-json/types/optionaldependencies.html\n        const { optionalDependencies = {} } = packageJsonObject\n        Object.keys(dependencies).forEach((dependencyName) => {\n          dependencyMap[dependencyName] = {\n            type: \"dependency\",\n            isOptional: dependencyName in optionalDependencies,\n            versionPattern: dependencies[dependencyName],\n          }\n        })\n\n        const { peerDependencies = {} } = packageJsonObject\n        const { peerDependenciesMeta = {} } = packageJsonObject\n        Object.keys(peerDependencies).forEach((dependencyName) => {\n          dependencyMap[dependencyName] = {\n            type: \"peerDependency\",\n            versionPattern: peerDependencies[dependencyName],\n            isOptional:\n              dependencyName in peerDependenciesMeta &&\n              peerDependenciesMeta[dependencyName].optional,\n          }\n        })\n\n        const isProjectPackage = packageFileUrl === projectPackageFileUrl\n        if (includeDevDependencies && isProjectPackage) {\n          const { devDependencies = {} } = packageJsonObject\n          Object.keys(devDependencies).forEach((dependencyName) => {\n            if (!dependencyMap.hasOwnProperty(dependencyName)) {\n              dependencyMap[dependencyName] = {\n                type: \"devDependency\",\n                versionPattern: devDependencies[dependencyName],\n              }\n            }\n          })\n        }\n\n        await Promise.all(\n          Object.keys(dependencyMap).map(async (dependencyName) => {\n            const dependency = dependencyMap[dependencyName]\n            await visitDependency({\n              packageFileUrl,\n              packageJsonObject,\n              dependencyName,\n              dependencyType: dependency.type,\n              dependencyIsOptional: dependency.isOptional,\n              dependencyVersionPattern: dependency.versionPattern,\n            })\n          }),\n        )\n      }\n\n      const visitDependency = async ({\n        packageFileUrl,\n        packageJsonObject,\n        dependencyName,\n        dependencyType,\n        dependencyIsOptional,\n        dependencyVersionPattern,\n      }) => {\n        const dependencyData = await findDependency({\n          packageFileUrl,\n          dependencyName,\n        })\n        if (!dependencyData) {\n          logger[dependencyIsOptional ? \"debug\" : \"warn\"](`\n${\n  dependencyIsOptional\n    ? `cannot find an optional ${dependencyType}.`\n    : `cannot find a ${dependencyType}.`\n}\n--- ${dependencyType} ---\n${dependencyName}@${dependencyVersionPattern}\n--- required by ---\n${packageJsonObject.name}@${packageJsonObject.version}\n--- package.json path ---\n${urlToFileSystemPath(packageFileUrl)}\n    `)\n          return\n        }\n\n        const {\n          packageFileUrl: dependencyPackageFileUrl,\n          packageJsonObject: dependencyPackageJsonObject,\n        } = dependencyData\n\n        if (packageIsSeen(dependencyPackageFileUrl, packageFileUrl)) {\n          return\n        }\n        markPackageAsSeen(dependencyPackageFileUrl, packageFileUrl)\n        await visit({\n          packageFileUrl: dependencyPackageFileUrl,\n          packageName: dependencyName,\n          packageJsonObject: dependencyPackageJsonObject,\n          importerPackageFileUrl: packageFileUrl,\n          importerPackageJsonObject: packageJsonObject,\n        })\n      }\n\n      const computePackageInfo = ({ packageFileUrl, packageName, importerPackageFileUrl }) => {\n        const importerIsRoot = importerPackageFileUrl === rootProjectPackageFileUrl\n\n        const importerIsProject = importerPackageFileUrl === projectPackageFileUrl\n\n        const importerPackageDirectoryUrl = resolveUrl(\"./\", importerPackageFileUrl)\n\n        const importerRelativeUrl = importerIsRoot\n          ? `${urlToBasename(rootProjectDirectoryUrl.slice(0, -1))}/`\n          : urlToRelativeUrl(importerPackageDirectoryUrl, rootProjectDirectoryUrl)\n\n        const packageIsRoot = packageFileUrl === rootProjectPackageFileUrl\n\n        const packageIsProject = packageFileUrl === projectPackageFileUrl\n\n        const packageDirectoryUrl = resolveUrl(\"./\", packageFileUrl)\n\n        let packageDirectoryUrlExpected\n        if (packageIsProject && !packageIsRoot) {\n          packageDirectoryUrlExpected = importerPackageDirectoryUrl\n        } else {\n          packageDirectoryUrlExpected = `${importerPackageDirectoryUrl}node_modules/${packageName}/`\n        }\n\n        const packageDirectoryRelativeUrl = urlToRelativeUrl(\n          packageDirectoryUrl,\n          rootProjectDirectoryUrl,\n        )\n\n        return {\n          importerIsRoot,\n          importerIsProject,\n          importerRelativeUrl,\n          packageIsRoot,\n          packageIsProject,\n          packageDirectoryUrl,\n          packageDirectoryUrlExpected,\n          packageDirectoryRelativeUrl,\n        }\n      }\n\n      const addTopLevelImportMapping = ({ from, to }) => {\n        // we could think it's useless to remap from with to\n        // however it can be used to ensure a weaker remapping\n        // does not win over this specific file or folder\n        if (from === to) {\n          /**\n           * however remapping '/' to '/' is truly useless\n           * moreover it would make wrapImportMap create something like\n           * {\n           *   imports: {\n           *     \"/\": \"/.dist/best/\"\n           *   }\n           * }\n           * that would append the wrapped folder twice\n           * */\n          if (from === \"/\") return\n        }\n\n        imports[from] = to\n      }\n\n      const addScopedImportMapping = ({ scope, from, to }) => {\n        scopes[scope] = {\n          ...(scopes[scope] || {}),\n          [from]: to,\n        }\n      }\n\n      const dependenciesCache = {}\n      const findDependency = ({ packageFileUrl, dependencyName }) => {\n        if (packageFileUrl in dependenciesCache === false) {\n          dependenciesCache[packageFileUrl] = {}\n        }\n        if (dependencyName in dependenciesCache[packageFileUrl]) {\n          return dependenciesCache[packageFileUrl][dependencyName]\n        }\n        const dependencyPromise = resolveNodeModule({\n          logger,\n          rootProjectDirectoryUrl,\n          packagesManualOverrides,\n          packageFileUrl,\n          dependencyName,\n        })\n        dependenciesCache[packageFileUrl][dependencyName] = dependencyPromise\n        return dependencyPromise\n      }\n\n      const projectPackageJsonObject = await readPackageFile(\n        projectPackageFileUrl,\n        packagesManualOverrides,\n      )\n\n      const packageFileUrl = projectPackageFileUrl\n      const importerPackageFileUrl = projectPackageFileUrl\n      markPackageAsSeen(packageFileUrl, importerPackageFileUrl)\n\n      const packageName = projectPackageJsonObject.name\n      if (typeof packageName === \"string\") {\n        await visit({\n          packageFileUrl,\n          packageName: projectPackageJsonObject.name,\n          packageJsonObject: projectPackageJsonObject,\n          importerPackageFileUrl,\n          importerPackageJsonObject: null,\n          includeDevDependencies: projectPackageDevDependenciesIncluded,\n        })\n      } else {\n        logger.warn(`package name field must be a string\n--- package name field ---\n${packageName}\n--- package.json file path ---\n${packageFileUrl}`)\n      }\n\n      // remove useless duplicates (scoped key+value already defined on imports)\n      Object.keys(scopes).forEach((key) => {\n        const scopedImports = scopes[key]\n        Object.keys(scopedImports).forEach((scopedImportKey) => {\n          if (\n            scopedImportKey in imports &&\n            imports[scopedImportKey] === scopedImports[scopedImportKey]\n          ) {\n            delete scopedImports[scopedImportKey]\n          }\n        })\n        if (Object.keys(scopedImports).length === 0) {\n          delete scopes[key]\n        }\n      })\n\n      // The importmap generated at this point is relative to the project directory url\n      // In other words if you want to use that importmap you have to put it\n      // inside projectDirectoryUrl (it cannot be nested in a subdirectory).\n      let importMap = { imports, scopes }\n      if (importMapFileRelativeUrl) {\n        // When there is an importMapFileRelativeUrl we will make remapping relative\n        // to the importmap file future location (where user will write it).\n        // This allows to put the importmap anywhere inside the projectDirectoryUrl.\n        // (If possible prefer to have it top level to avoid too many ../\n        const importMapProjectUrl = resolveUrl(\"project.importmap\", projectDirectoryUrl)\n        const importMapRealUrl = resolveUrl(importMapFileRelativeUrl, projectDirectoryUrl)\n        importMap = moveImportMap(importMap, importMapProjectUrl, importMapRealUrl)\n      }\n      importMap = sortImportMap(importMap)\n\n      return importMap\n    },\n    { catchCancellation: true, unhandledRejectionStrict: false },\n  )\n",
    "import { readFile, assertAndNormalizeFileUrl } from \"@jsenv/util\"\n\nexport const getImportMapFromFile = async (importMapFilePath) => {\n  const importMapFileUrl = assertAndNormalizeFileUrl(importMapFilePath)\n  const importMapFileContent = await readFile(importMapFileUrl)\n  const importMap = JSON.parse(importMapFileContent)\n  return importMap\n}\n",
    "export const importMapToVsCodeConfigPaths = ({ imports = {} }) => {\n  const paths = {}\n\n  Object.keys(imports).forEach((importKey) => {\n    const importValue = imports[importKey]\n\n    let key\n    if (importKey.endsWith(\"/\")) {\n      key = `${importKey}*`\n    } else {\n      key = importKey\n    }\n\n    const importValueArray = typeof importValue === \"string\" ? [importValue] : importValue\n    const candidatesForPath = importValueArray.map((importValue) => {\n      if (importValue.endsWith(\"/\")) {\n        return `${importValue}*`\n      }\n      return importValue\n    })\n\n    if (key in paths) {\n      paths[key] = [...paths[key], ...candidatesForPath]\n    } else {\n      paths[key] = candidatesForPath\n    }\n  })\n\n  return paths\n}\n",
    "import {\n  resolveUrl,\n  urlToFileSystemPath,\n  assertAndNormalizeDirectoryUrl,\n  writeFile,\n  wrapExternalFunction,\n} from \"@jsenv/util\"\nimport { composeTwoImportMaps } from \"@jsenv/import-map\"\nimport { importMapToVsCodeConfigPaths } from \"./internal/importMapToVsCodeConfigPaths.js\"\n\nexport const generateImportMapForProject = async (\n  importMapInputs = [],\n  {\n    projectDirectoryUrl,\n\n    importMapFile = true, // in case someone wants the importmap but not write it on filesystem\n    importMapFileRelativeUrl = \"./import-map.importmap\",\n    importMapFileLog = true,\n\n    jsConfigFile = false, // not yet documented, makes vscode aware of the import remapping\n    jsConfigFileLog = true,\n    jsConfigLeadingSlash = false,\n  },\n) =>\n  wrapExternalFunction(\n    async () => {\n      projectDirectoryUrl = assertAndNormalizeDirectoryUrl(projectDirectoryUrl)\n\n      if (importMapInputs.length === 0) {\n        console.warn(`importMapInputs is empty, the generated importmap will be empty`)\n      }\n\n      const importMaps = await Promise.all(importMapInputs)\n\n      const importMap = importMaps.reduce((previous, current) => {\n        return composeTwoImportMaps(previous, current)\n      }, {})\n\n      if (importMapFile) {\n        const importMapFileUrl = resolveUrl(importMapFileRelativeUrl, projectDirectoryUrl)\n        await writeFile(importMapFileUrl, JSON.stringify(importMap, null, \"  \"))\n        if (importMapFileLog) {\n          console.info(`-> ${urlToFileSystemPath(importMapFileUrl)}`)\n        }\n      }\n      if (jsConfigFile) {\n        const jsConfigFileUrl = resolveUrl(\"./jsconfig.json\", projectDirectoryUrl)\n        try {\n          const jsConfig = {\n            compilerOptions: {\n              baseUrl: \".\",\n              paths: {\n                ...(jsConfigLeadingSlash ? { \"/*\": [\"./*\"] } : {}),\n                ...importMapToVsCodeConfigPaths(importMap),\n              },\n            },\n          }\n          await writeFile(jsConfigFileUrl, JSON.stringify(jsConfig, null, \"  \"))\n          if (jsConfigFileLog) {\n            console.info(`-> ${urlToFileSystemPath(jsConfigFileUrl)}`)\n          }\n        } catch (e) {\n          if (e.code !== \"ENOENT\") {\n            throw e\n          }\n        }\n      }\n\n      return importMap\n    },\n    { catchCancellation: true, unhandledRejectionStrict: false },\n  )\n"
  ],
  "names": [
    "LOG_LEVEL_OFF",
    "LOG_LEVEL_DEBUG",
    "LOG_LEVEL_INFO",
    "LOG_LEVEL_WARN",
    "LOG_LEVEL_ERROR",
    "createLogger",
    "logLevel",
    "debug",
    "info",
    "warn",
    "error",
    "debugDisabled",
    "infoDisabled",
    "warnDisabled",
    "errorDisabled",
    "Error",
    "console",
    "assertImportMap",
    "value",
    "TypeError",
    "type",
    "Array",
    "isArray",
    "hasScheme",
    "string",
    "test",
    "urlToScheme",
    "urlString",
    "colonIndex",
    "indexOf",
    "slice",
    "urlToPathname",
    "ressourceToPathname",
    "urlToRessource",
    "scheme",
    "length",
    "afterProtocol",
    "pathnameSlashIndex",
    "ressource",
    "searchSeparatorIndex",
    "urlToOrigin",
    "secondProtocolSlashIndex",
    "pathnameToParentPathname",
    "pathname",
    "slashLastIndex",
    "lastIndexOf",
    "resolveUrl",
    "specifier",
    "baseUrl",
    "writeBaseUrlMustBeAString",
    "writeBaseUrlMustBeAbsolute",
    "writeBaseUrlRequired",
    "baseOrigin",
    "basePathname",
    "baseDirectoryPathname",
    "unresolvedPathname",
    "importerFolders",
    "split",
    "pop",
    "resolvedPathname",
    "join",
    "resolveSpecifier",
    "importer",
    "startsWith",
    "composeTwoImportMaps",
    "leftImportMap",
    "rightImportMap",
    "importMap",
    "leftImports",
    "imports",
    "rightImports",
    "leftHasImports",
    "Boolean",
    "rightHasImports",
    "composeTwoImports",
    "leftScopes",
    "scopes",
    "rightScopes",
    "leftHasScopes",
    "rightHasScopes",
    "composeTwoScopes",
    "Object",
    "keys",
    "forEach",
    "scopeKey",
    "hasOwnProperty",
    "getCommonPathname",
    "otherPathname",
    "firstDifferentCharacterIndex",
    "findFirstDifferentCharacterIndex",
    "commonString",
    "charAt",
    "firstDifferentSlashIndex",
    "otherString",
    "maxCommonLength",
    "Math",
    "min",
    "i",
    "char",
    "otherChar",
    "urlToRelativeUrl",
    "urlArg",
    "baseUrlArg",
    "url",
    "URL",
    "protocol",
    "username",
    "password",
    "host",
    "hash",
    "search",
    "commonPathname",
    "specificPathname",
    "baseSpecificPathname",
    "includes",
    "baseSpecificParentPathname",
    "relativeDirectoriesNotation",
    "replace",
    "moveImportMap",
    "fromUrl",
    "toUrl",
    "makeRelativeTo",
    "relativeUrl",
    "importMapRelative",
    "makeImportsRelativeTo",
    "makeScopedRemappingRelativeTo",
    "scopesTransformed",
    "scopesRemaining",
    "transformed",
    "scopeValue",
    "scopeKeyRelative",
    "scopeValueRelative",
    "importsTransformed",
    "importsRemaining",
    "importKey",
    "importValue",
    "importKeyRelative",
    "importValueRelative",
    "sortImportMap",
    "sortImports",
    "undefined",
    "sortScopes",
    "importsSorted",
    "sort",
    "compareLengthOrLocaleCompare",
    "name",
    "scopesSorted",
    "scopeName",
    "a",
    "b",
    "localeCompare",
    "ensureUrlTrailingSlash",
    "endsWith",
    "isFileSystemPath",
    "startsWithWindowsDriveLetter",
    "firstChar",
    "secondChar",
    "fileSystemPathToUrl",
    "String",
    "pathToFileURL",
    "assertAndNormalizeDirectoryUrl",
    "href",
    "e",
    "assertAndNormalizeFileUrl",
    "statsToType",
    "stats",
    "isFile",
    "isDirectory",
    "isSymbolicLink",
    "isFIFO",
    "isSocket",
    "isCharacterDevice",
    "isBlockDevice",
    "urlToFileSystemPath",
    "fileUrl",
    "fileSystemPath",
    "fileURLToPath",
    "S_IRUSR",
    "S_IWUSR",
    "S_IXUSR",
    "S_IRGRP",
    "S_IWGRP",
    "S_IXGRP",
    "S_IROTH",
    "S_IWOTH",
    "S_IXOTH",
    "permissionsToBinaryFlags",
    "owner",
    "group",
    "others",
    "binaryFlags",
    "read",
    "write",
    "execute",
    "writeFileSystemNodePermissions",
    "source",
    "permissions",
    "sourceUrl",
    "sourcePath",
    "getPermissionOrComputeDefault",
    "chmodNaive",
    "Promise",
    "resolve",
    "reject",
    "chmod",
    "actionLevels",
    "subjectLevels",
    "action",
    "subject",
    "subjectPermissions",
    "actionLevel",
    "actionFallback",
    "find",
    "actionFallbackCandidate",
    "subjectLevel",
    "subjectFallback",
    "subjectFallbackCandidate",
    "isWindows",
    "process",
    "platform",
    "readFileSystemNodeStat",
    "nullIfNotFound",
    "followLink",
    "handleNotFoundOption",
    "handleNotFoundError",
    "readStat",
    "handlePermissionDeniedError",
    "stack",
    "nodeMethod",
    "stat",
    "lstat",
    "statsObject",
    "code",
    "firstOperationMatching",
    "array",
    "start",
    "predicate",
    "visit",
    "index",
    "input",
    "output",
    "isCancelError",
    "getCommandArgument",
    "argv",
    "arg",
    "wrapExternalFunction",
    "fn",
    "catchCancellation",
    "unhandledRejectionStrict",
    "previousFn",
    "uninstall",
    "installUnhandledRejectionStrict",
    "setTimeout",
    "unhandledRejectionArg",
    "execArgv",
    "onUnhandledRejection",
    "reason",
    "once",
    "removeListener",
    "mkdir",
    "promises",
    "writeDirectory",
    "destination",
    "recursive",
    "allowUseless",
    "destinationUrl",
    "destinationPath",
    "destinationStats",
    "destinationType",
    "ensureParentDirectories",
    "destinationParentPath",
    "dirname",
    "baseUrlFallback",
    "cwd",
    "readFilePromisified",
    "promisify",
    "readFileNode",
    "readFile",
    "as",
    "filePath",
    "buffer",
    "toString",
    "JSON",
    "parse",
    "isLinux",
    "urlToFilename",
    "filename",
    "urlToBasename",
    "dotLastIndex",
    "basename",
    "writeFile",
    "writeFileNode",
    "content",
    "readPackageFile",
    "packageFileUrl",
    "packagesManualOverrides",
    "packageFileString",
    "packageJsonObject",
    "version",
    "overrideKey",
    "overrideKeyCandidate",
    "composeObject",
    "leftObject",
    "rightObject",
    "composedObject",
    "key",
    "rightValue",
    "leftValue",
    "resolveNodeModule",
    "logger",
    "rootProjectDirectoryUrl",
    "dependencyName",
    "packageDirectoryUrl",
    "nodeModuleCandidateArray",
    "computeNodeModuleCandidateArray",
    "nodeModuleCandidate",
    "message",
    "packageDirectoryRelativeUrl",
    "candidateArray",
    "relativeNodeModuleDirectoryArray",
    "shift",
    "push",
    "resolvePackageMain",
    "resolveMainFile",
    "packageMainFieldName",
    "packageMainFieldValue",
    "module",
    "main",
    "extensionCandidateArray",
    "packageFilePath",
    "mainFileRelativeUrl",
    "mainFileUrlFirstCandidate",
    "mainFileUrl",
    "findMainFileUrlOrNull",
    "extensionTried",
    "extname",
    "mainStats",
    "indexFileUrl",
    "extensionLeadingToAFile",
    "findExtension",
    "mainFilePath",
    "extension",
    "fileDirname",
    "fileBasename",
    "extensionLeadingToFile",
    "extensionCandidate",
    "filePathCandidate",
    "specifierIsRelative",
    "visitPackageImports",
    "importsForPackageImports",
    "packageImports",
    "address",
    "from",
    "to",
    "visitPackageExports",
    "packageName",
    "packageInfo",
    "packagesExportsPreference",
    "importsForPackageExports",
    "exports",
    "packageExports",
    "addressToDestination",
    "packageExportsKeys",
    "someSpecifierStartsWithDot",
    "some",
    "someSpecifierDoesNotStartsWithDot",
    "readFavoredKey",
    "object",
    "favoredKeys",
    "favoredKey",
    "default",
    "getImportMapFromNodeModules",
    "projectDirectoryUrl",
    "importMapFileRelativeUrl",
    "projectPackageDevDependenciesIncluded",
    "packagesExportsIncluded",
    "packagesSelfReference",
    "packagesImportsIncluded",
    "projectPackageFileUrl",
    "rootProjectPackageFileUrl",
    "seen",
    "markPackageAsSeen",
    "importerPackageFileUrl",
    "packageIsSeen",
    "importerPackageJsonObject",
    "includeDevDependencies",
    "visitDependencies",
    "visitPackage",
    "computePackageInfo",
    "visitPackageMain",
    "packageIsRoot",
    "addTopLevelImportMapping",
    "toScoped",
    "addScopedImportMapping",
    "scope",
    "importerIsRoot",
    "importerRelativeUrl",
    "packageIsProject",
    "packageDirectoryUrlExpected",
    "self",
    "dependencyMap",
    "dependencies",
    "optionalDependencies",
    "isOptional",
    "versionPattern",
    "peerDependencies",
    "peerDependenciesMeta",
    "optional",
    "isProjectPackage",
    "devDependencies",
    "all",
    "map",
    "dependency",
    "visitDependency",
    "dependencyType",
    "dependencyIsOptional",
    "dependencyVersionPattern",
    "dependencyData",
    "findDependency",
    "dependencyPackageFileUrl",
    "dependencyPackageJsonObject",
    "importerIsProject",
    "importerPackageDirectoryUrl",
    "dependenciesCache",
    "dependencyPromise",
    "projectPackageJsonObject",
    "scopedImports",
    "scopedImportKey",
    "importMapProjectUrl",
    "importMapRealUrl",
    "getImportMapFromFile",
    "importMapFilePath",
    "importMapFileUrl",
    "importMapFileContent",
    "importMapToVsCodeConfigPaths",
    "paths",
    "importValueArray",
    "candidatesForPath",
    "generateImportMapForProject",
    "importMapInputs",
    "importMapFile",
    "importMapFileLog",
    "jsConfigFile",
    "jsConfigFileLog",
    "jsConfigLeadingSlash",
    "importMaps",
    "reduce",
    "previous",
    "current",
    "stringify",
    "jsConfigFileUrl",
    "jsConfig",
    "compilerOptions"
  ],
  "mappings": ";;;;;;;;;;AAAO,MAAMA,aAAa,GAAG,KAAtB;AAEA,MAAMC,eAAe,GAAG,OAAxB;AAEA,MAAMC,cAAc,GAAG,MAAvB;AAEA,MAAMC,cAAc,GAAG,MAAvB;AAEA,MAAMC,eAAe,GAAG,OAAxB;;ACAA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,QAAQ,GAAGJ;AAAb,IAAgC,EAAjC,KAAwC;AAClE,MAAII,QAAQ,KAAKL,eAAjB,EAAkC;AAChC,WAAO;AACLM,MAAAA,KADK;AAELC,MAAAA,IAFK;AAGLC,MAAAA,IAHK;AAILC,MAAAA;AAJK,KAAP;AAMD;;AAED,MAAIJ,QAAQ,KAAKJ,cAAjB,EAAiC;AAC/B,WAAO;AACLK,MAAAA,KAAK,EAAEI,aADF;AAELH,MAAAA,IAFK;AAGLC,MAAAA,IAHK;AAILC,MAAAA;AAJK,KAAP;AAMD;;AAED,MAAIJ,QAAQ,KAAKH,cAAjB,EAAiC;AAC/B,WAAO;AACLI,MAAAA,KAAK,EAAEI,aADF;AAELH,MAAAA,IAAI,EAAEI,YAFD;AAGLH,MAAAA,IAHK;AAILC,MAAAA;AAJK,KAAP;AAMD;;AAED,MAAIJ,QAAQ,KAAKF,eAAjB,EAAkC;AAChC,WAAO;AACLG,MAAAA,KAAK,EAAEI,aADF;AAELH,MAAAA,IAAI,EAAEI,YAFD;AAGLH,MAAAA,IAAI,EAAEI,YAHD;AAILH,MAAAA;AAJK,KAAP;AAMD;;AAED,MAAIJ,QAAQ,KAAKN,aAAjB,EAAgC;AAC9B,WAAO;AACLO,MAAAA,KAAK,EAAEI,aADF;AAELH,MAAAA,IAAI,EAAEI,YAFD;AAGLH,MAAAA,IAAI,EAAEI,YAHD;AAILH,MAAAA,KAAK,EAAEI;AAJF,KAAP;AAMD;;AAED,QAAM,IAAIC,KAAJ,CAAW;AACnB;AACA,EAAET,QAAS;AACX;AACA,EAAEN,aAAc;AAChB,EAAEI,eAAgB;AAClB,EAAED,cAAe;AACjB,EAAED,cAAe;AACjB,EAAED,eAAgB,EARV,CAAN;AASD,CAvDM;AAyDP,MAAMM,KAAK,GAAGS,OAAO,CAACT,KAAtB;;AAEA,MAAMI,aAAa,GAAG,MAAM,EAA5B;;AAEA,MAAMH,IAAI,GAAGQ,OAAO,CAACR,IAArB;;AAEA,MAAMI,YAAY,GAAG,MAAM,EAA3B;;AAEA,MAAMH,IAAI,GAAGO,OAAO,CAACP,IAArB;;AAEA,MAAMI,YAAY,GAAG,MAAM,EAA3B;;AAEA,MAAMH,KAAK,GAAGM,OAAO,CAACN,KAAtB;;AAEA,MAAMI,aAAa,GAAG,MAAM,EAA5B;;AC/EO,MAAMG,eAAe,GAAIC,KAAD,IAAW;AACxC,MAAIA,KAAK,KAAK,IAAd,EAAoB;AAClB,UAAM,IAAIC,SAAJ,CAAe,0CAAf,CAAN;AACD;;AAED,QAAMC,IAAI,GAAG,OAAOF,KAApB;;AACA,MAAIE,IAAI,KAAK,QAAb,EAAuB;AACrB,UAAM,IAAID,SAAJ,CAAe,4CAA2CD,KAAM,EAAhE,CAAN;AACD;;AAED,MAAIG,KAAK,CAACC,OAAN,CAAcJ,KAAd,CAAJ,EAA0B;AACxB,UAAM,IAAIC,SAAJ,CAAe,kDAAiDD,KAAM,EAAtE,CAAN;AACD;AACF,CAbM;;ACAA,MAAMK,SAAS,GAAIC,MAAD,IAAY;AACnC,SAAO,iBAAiBC,IAAjB,CAAsBD,MAAtB,CAAP;AACD,CAFM;;ACAA,MAAME,WAAW,GAAIC,SAAD,IAAe;AACxC,QAAMC,UAAU,GAAGD,SAAS,CAACE,OAAV,CAAkB,GAAlB,CAAnB;AACA,MAAID,UAAU,KAAK,CAAC,CAApB,EAAuB,OAAO,EAAP;AACvB,SAAOD,SAAS,CAACG,KAAV,CAAgB,CAAhB,EAAmBF,UAAnB,CAAP;AACD,CAJM;;ACEA,MAAMG,aAAa,GAAIJ,SAAD,IAAe;AAC1C,SAAOK,mBAAmB,CAACC,cAAc,CAACN,SAAD,CAAf,CAA1B;AACD,CAFM;;AAIP,MAAMM,cAAc,GAAIN,SAAD,IAAe;AACpC,QAAMO,MAAM,GAAGR,WAAW,CAACC,SAAD,CAA1B;;AAEA,MAAIO,MAAM,KAAK,MAAf,EAAuB;AACrB,WAAOP,SAAS,CAACG,KAAV,CAAgB,UAAUK,MAA1B,CAAP;AACD;;AAED,MAAID,MAAM,KAAK,OAAX,IAAsBA,MAAM,KAAK,MAArC,EAA6C;AAC3C;AACA,UAAME,aAAa,GAAGT,SAAS,CAACG,KAAV,CAAgBI,MAAM,CAACC,MAAP,GAAgB,MAAMA,MAAtC,CAAtB;AACA,UAAME,kBAAkB,GAAGD,aAAa,CAACP,OAAd,CAAsB,GAAtB,EAA2B,MAAMM,MAAjC,CAA3B;AACA,WAAOC,aAAa,CAACN,KAAd,CAAoBO,kBAApB,CAAP;AACD;;AAED,SAAOV,SAAS,CAACG,KAAV,CAAgBI,MAAM,CAACC,MAAP,GAAgB,CAAhC,CAAP;AACD,CAfD;;AAiBA,MAAMH,mBAAmB,GAAIM,SAAD,IAAe;AACzC,QAAMC,oBAAoB,GAAGD,SAAS,CAACT,OAAV,CAAkB,GAAlB,CAA7B;AACA,SAAOU,oBAAoB,KAAK,CAAC,CAA1B,GAA8BD,SAA9B,GAA0CA,SAAS,CAACR,KAAV,CAAgB,CAAhB,EAAmBS,oBAAnB,CAAjD;AACD,CAHD;;ACrBO,MAAMC,WAAW,GAAIb,SAAD,IAAe;AACxC,QAAMO,MAAM,GAAGR,WAAW,CAACC,SAAD,CAA1B;;AAEA,MAAIO,MAAM,KAAK,MAAf,EAAuB;AACrB,WAAO,SAAP;AACD;;AAED,MAAIA,MAAM,KAAK,MAAX,IAAqBA,MAAM,KAAK,OAApC,EAA6C;AAC3C,UAAMO,wBAAwB,GAAGP,MAAM,CAACC,MAAP,GAAgB,MAAMA,MAAvD;AACA,UAAME,kBAAkB,GAAGV,SAAS,CAACE,OAAV,CAAkB,GAAlB,EAAuBY,wBAAvB,CAA3B;AAEA,QAAIJ,kBAAkB,KAAK,CAAC,CAA5B,EAA+B,OAAOV,SAAP;AAC/B,WAAOA,SAAS,CAACG,KAAV,CAAgB,CAAhB,EAAmBO,kBAAnB,CAAP;AACD;;AAED,SAAOV,SAAS,CAACG,KAAV,CAAgB,CAAhB,EAAmBI,MAAM,CAACC,MAAP,GAAgB,CAAnC,CAAP;AACD,CAhBM;;ACFA,MAAMO,wBAAwB,GAAIC,QAAD,IAAc;AACpD,QAAMC,cAAc,GAAGD,QAAQ,CAACE,WAAT,CAAqB,GAArB,CAAvB;;AACA,MAAID,cAAc,KAAK,CAAC,CAAxB,EAA2B;AACzB,WAAO,GAAP;AACD;;AAED,SAAOD,QAAQ,CAACb,KAAT,CAAe,CAAf,EAAkBc,cAAc,GAAG,CAAnC,CAAP;AACD,CAPM;;ACAP;AAQO,MAAME,UAAU,GAAG,CAACC,SAAD,EAAYC,OAAZ,KAAwB;AAChD,MAAIA,OAAJ,EAAa;AACX,QAAI,OAAOA,OAAP,KAAmB,QAAvB,EAAiC;AAC/B,YAAM,IAAI7B,SAAJ,CAAc8B,yBAAyB,CAAC;AAAED,QAAAA,OAAF;AAAWD,QAAAA;AAAX,OAAD,CAAvC,CAAN;AACD;;AACD,QAAI,CAACxB,SAAS,CAACyB,OAAD,CAAd,EAAyB;AACvB,YAAM,IAAIjC,KAAJ,CAAUmC,0BAA0B,CAAC;AAAEF,QAAAA,OAAF;AAAWD,QAAAA;AAAX,OAAD,CAApC,CAAN;AACD;AACF;;AAED,MAAIxB,SAAS,CAACwB,SAAD,CAAb,EAA0B;AACxB,WAAOA,SAAP;AACD;;AAED,MAAI,CAACC,OAAL,EAAc;AACZ,UAAM,IAAIjC,KAAJ,CAAUoC,oBAAoB,CAAC;AAAEH,MAAAA,OAAF;AAAWD,MAAAA;AAAX,KAAD,CAA9B,CAAN;AACD,GAhB+C;;;AAmBhD,MAAIA,SAAS,CAACjB,KAAV,CAAgB,CAAhB,EAAmB,CAAnB,MAA0B,IAA9B,EAAoC;AAClC,WAAQ,GAAEJ,WAAW,CAACsB,OAAD,CAAU,IAAGD,SAAU,EAA5C;AACD,GArB+C;;;AAwBhD,MAAIA,SAAS,CAAC,CAAD,CAAT,KAAiB,GAArB,EAA0B;AACxB,WAAQ,GAAEP,WAAW,CAACQ,OAAD,CAAU,GAAED,SAAU,EAA3C;AACD;;AAED,QAAMK,UAAU,GAAGZ,WAAW,CAACQ,OAAD,CAA9B;AACA,QAAMK,YAAY,GAAGtB,aAAa,CAACiB,OAAD,CAAlC;;AAEA,MAAID,SAAS,KAAK,GAAlB,EAAuB;AACrB,UAAMO,qBAAqB,GAAGZ,wBAAwB,CAACW,YAAD,CAAtD;AACA,WAAQ,GAAED,UAAW,GAAEE,qBAAsB,EAA7C;AACD,GAlC+C;;;AAqChD,MAAIP,SAAS,CAACjB,KAAV,CAAgB,CAAhB,EAAmB,CAAnB,MAA0B,IAA9B,EAAoC;AAClC,UAAMwB,qBAAqB,GAAGZ,wBAAwB,CAACW,YAAD,CAAtD;AACA,WAAQ,GAAED,UAAW,GAAEE,qBAAsB,GAAEP,SAAS,CAACjB,KAAV,CAAgB,CAAhB,CAAmB,EAAlE;AACD,GAxC+C;;;AA2ChD,MAAIiB,SAAS,CAACjB,KAAV,CAAgB,CAAhB,EAAmB,CAAnB,MAA0B,KAA9B,EAAqC;AACnC,QAAIyB,kBAAkB,GAAGR,SAAzB;AACA,UAAMS,eAAe,GAAGH,YAAY,CAACI,KAAb,CAAmB,GAAnB,CAAxB;AACAD,IAAAA,eAAe,CAACE,GAAhB;;AAEA,WAAOH,kBAAkB,CAACzB,KAAnB,CAAyB,CAAzB,EAA4B,CAA5B,MAAmC,KAA1C,EAAiD;AAC/CyB,MAAAA,kBAAkB,GAAGA,kBAAkB,CAACzB,KAAnB,CAAyB,CAAzB,CAArB,CAD+C;AAG/C;;AACA,UAAI0B,eAAe,CAACrB,MAApB,EAA4B;AAC1BqB,QAAAA,eAAe,CAACE,GAAhB;AACD;AACF;;AAED,UAAMC,gBAAgB,GAAI,GAAEH,eAAe,CAACI,IAAhB,CAAqB,GAArB,CAA0B,IAAGL,kBAAmB,EAA5E;AACA,WAAQ,GAAEH,UAAW,GAAEO,gBAAiB,EAAxC;AACD,GA3D+C;;;AA8DhD,MAAIN,YAAY,KAAK,EAArB,EAAyB;AACvB,WAAQ,GAAED,UAAW,IAAGL,SAAU,EAAlC;AACD;;AACD,MAAIM,YAAY,CAACA,YAAY,CAAClB,MAAd,CAAZ,KAAsC,GAA1C,EAA+C;AAC7C,WAAQ,GAAEiB,UAAW,GAAEC,YAAa,GAAEN,SAAU,EAAhD;AACD;;AACD,SAAQ,GAAEK,UAAW,GAAEV,wBAAwB,CAACW,YAAD,CAAe,GAAEN,SAAU,EAA1E;AACD,CArEM;;AAuEP,MAAME,yBAAyB,GAAG,CAAC;AAAED,EAAAA,OAAF;AAAWD,EAAAA;AAAX,CAAD,KAA6B;AAC/D;AACA,EAAEC,OAAQ;AACV;AACA,EAAED,SAAU,EAJZ;;AAMA,MAAMG,0BAA0B,GAAG,CAAC;AAAEF,EAAAA,OAAF;AAAWD,EAAAA;AAAX,CAAD,KAA6B;AAChE;AACA,EAAEC,OAAQ;AACV;AACA,EAAED,SAAU,EAJZ;;AAMA,MAAMI,oBAAoB,GAAG,CAAC;AAC5BH,EAAAA,OAD4B;AAE5BD,EAAAA;AAF4B,CAAD,KAGtB;AACP;AACA,EAAEC,OAAQ;AACV;AACA,EAAED,SAAU,EAPZ;;ACxFO,MAAMc,gBAAgB,GAAG,CAACd,SAAD,EAAYe,QAAZ,KAAyB;AACvD,MACEf,SAAS,KAAK,GAAd,IACAA,SAAS,CAAC,CAAD,CAAT,KAAiB,GADjB,IAEAA,SAAS,CAACgB,UAAV,CAAqB,IAArB,CAFA,IAGAhB,SAAS,CAACgB,UAAV,CAAqB,KAArB,CAJF,EAKE;AACA,WAAOjB,UAAU,CAACC,SAAD,EAAYe,QAAZ,CAAjB;AACD;;AAED,MAAIvC,SAAS,CAACwB,SAAD,CAAb,EAA0B;AACxB,WAAOA,SAAP;AACD;;AAED,SAAO,IAAP;AACD,CAfM;;ACHP;AAGO,MAAMiB,oBAAoB,GAAG,CAACC,aAAD,EAAgBC,cAAhB,KAAmC;AACrEjD,EAAAA,eAAe,CAACgD,aAAD,CAAf;AACAhD,EAAAA,eAAe,CAACiD,cAAD,CAAf;AAEA,QAAMC,SAAS,GAAG,EAAlB;AAEA,QAAMC,WAAW,GAAGH,aAAa,CAACI,OAAlC;AACA,QAAMC,YAAY,GAAGJ,cAAc,CAACG,OAApC;AACA,QAAME,cAAc,GAAGC,OAAO,CAACJ,WAAD,CAA9B;AACA,QAAMK,eAAe,GAAGD,OAAO,CAACF,YAAD,CAA/B;;AACA,MAAIC,cAAc,IAAIE,eAAtB,EAAuC;AACrCN,IAAAA,SAAS,CAACE,OAAV,GAAoBK,iBAAiB,CAACN,WAAD,EAAcE,YAAd,CAArC;AACD,GAFD,MAEO,IAAIC,cAAJ,EAAoB;AACzBJ,IAAAA,SAAS,CAACE,OAAV,GAAoB,EAAE,GAAGD;AAAL,KAApB;AACD,GAFM,MAEA,IAAIK,eAAJ,EAAqB;AAC1BN,IAAAA,SAAS,CAACE,OAAV,GAAoB,EAAE,GAAGC;AAAL,KAApB;AACD;;AAED,QAAMK,UAAU,GAAGV,aAAa,CAACW,MAAjC;AACA,QAAMC,WAAW,GAAGX,cAAc,CAACU,MAAnC;AACA,QAAME,aAAa,GAAGN,OAAO,CAACG,UAAD,CAA7B;AACA,QAAMI,cAAc,GAAGP,OAAO,CAACK,WAAD,CAA9B;;AACA,MAAIC,aAAa,IAAIC,cAArB,EAAqC;AACnCZ,IAAAA,SAAS,CAACS,MAAV,GAAmBI,gBAAgB,CAACL,UAAD,EAAaE,WAAb,CAAnC;AACD,GAFD,MAEO,IAAIC,aAAJ,EAAmB;AACxBX,IAAAA,SAAS,CAACS,MAAV,GAAmB,EAAE,GAAGD;AAAL,KAAnB;AACD,GAFM,MAEA,IAAII,cAAJ,EAAoB;AACzBZ,IAAAA,SAAS,CAACS,MAAV,GAAmB,EAAE,GAAGC;AAAL,KAAnB;AACD;;AAED,SAAOV,SAAP;AACD,CA/BM;;AAiCP,MAAMO,iBAAiB,GAAG,CAACN,WAAD,EAAcE,YAAd,KAA+B;AACvD,SAAO,EACL,GAAGF,WADE;AAEL,OAAGE;AAFE,GAAP;AAID,CALD;;AAOA,MAAMU,gBAAgB,GAAG,CAACL,UAAD,EAAaE,WAAb,KAA6B;AACpD,QAAMD,MAAM,GAAG,EACb,GAAGD;AADU,GAAf;AAGAM,EAAAA,MAAM,CAACC,IAAP,CAAYL,WAAZ,EAAyBM,OAAzB,CAAkCC,QAAD,IAAc;AAC7C,QAAIR,MAAM,CAACS,cAAP,CAAsBD,QAAtB,CAAJ,EAAqC;AACnCR,MAAAA,MAAM,CAACQ,QAAD,CAAN,GAAmB,EACjB,GAAGR,MAAM,CAACQ,QAAD,CADQ;AAEjB,WAAGP,WAAW,CAACO,QAAD;AAFG,OAAnB;AAID,KALD,MAKO;AACLR,MAAAA,MAAM,CAACQ,QAAD,CAAN,GAAmB,EACjB,GAAGP,WAAW,CAACO,QAAD;AADG,OAAnB;AAGD;AACF,GAXD;AAYA,SAAOR,MAAP;AACD,CAjBD;;AC3CO,MAAMU,iBAAiB,GAAG,CAAC3C,QAAD,EAAW4C,aAAX,KAA6B;AAC5D,QAAMC,4BAA4B,GAAGC,gCAAgC,CAAC9C,QAAD,EAAW4C,aAAX,CAArE,CAD4D;;AAI5D,MAAIC,4BAA4B,KAAK,CAAC,CAAtC,EAAyC;AACvC,WAAO7C,QAAP;AACD;;AAED,QAAM+C,YAAY,GAAG/C,QAAQ,CAACb,KAAT,CAAe,CAAf,EAAkB0D,4BAA4B,GAAG,CAAjD,CAArB,CAR4D;;AAW5D,MAAI7C,QAAQ,CAACgD,MAAT,CAAgBH,4BAAhB,MAAkD,GAAtD,EAA2D;AACzD,WAAOE,YAAP;AACD;;AAED,MAAIH,aAAa,CAACI,MAAd,CAAqBH,4BAArB,MAAuD,GAA3D,EAAgE;AAC9D,WAAOE,YAAP;AACD;;AAED,QAAME,wBAAwB,GAAGF,YAAY,CAAC7C,WAAb,CAAyB,GAAzB,CAAjC;AACA,SAAOF,QAAQ,CAACb,KAAT,CAAe,CAAf,EAAkB8D,wBAAwB,GAAG,CAA7C,CAAP;AACD,CArBM;;AAuBP,MAAMH,gCAAgC,GAAG,CAACjE,MAAD,EAASqE,WAAT,KAAyB;AAChE,QAAMC,eAAe,GAAGC,IAAI,CAACC,GAAL,CAASxE,MAAM,CAACW,MAAhB,EAAwB0D,WAAW,CAAC1D,MAApC,CAAxB;AACA,MAAI8D,CAAC,GAAG,CAAR;;AACA,SAAOA,CAAC,GAAGH,eAAX,EAA4B;AAC1B,UAAMI,IAAI,GAAG1E,MAAM,CAACmE,MAAP,CAAcM,CAAd,CAAb;AACA,UAAME,SAAS,GAAGN,WAAW,CAACF,MAAZ,CAAmBM,CAAnB,CAAlB;;AACA,QAAIC,IAAI,KAAKC,SAAb,EAAwB;AACtB,aAAOF,CAAP;AACD;;AACDA,IAAAA,CAAC;AACF;;AACD,MAAIzE,MAAM,CAACW,MAAP,KAAkB0D,WAAW,CAAC1D,MAAlC,EAA0C;AACxC,WAAO,CAAC,CAAR;AACD,GAb+D;;;AAehE,SAAO2D,eAAP;AACD,CAhBD;;ACpBO,MAAMM,gBAAgB,GAAG,CAACC,MAAD,EAASC,UAAT,KAAwB;AACtD,QAAMC,GAAG,GAAG,IAAIC,GAAJ,CAAQH,MAAR,CAAZ;AACA,QAAMrD,OAAO,GAAG,IAAIwD,GAAJ,CAAQF,UAAR,CAAhB;;AAEA,MAAIC,GAAG,CAACE,QAAJ,KAAiBzD,OAAO,CAACyD,QAA7B,EAAuC;AACrC,WAAOJ,MAAP;AACD;;AAED,MAAIE,GAAG,CAACG,QAAJ,KAAiB1D,OAAO,CAAC0D,QAAzB,IAAqCH,GAAG,CAACI,QAAJ,KAAiB3D,OAAO,CAAC2D,QAAlE,EAA4E;AAC1E,WAAON,MAAM,CAACvE,KAAP,CAAayE,GAAG,CAACE,QAAJ,CAAatE,MAA1B,CAAP;AACD;;AAED,MAAIoE,GAAG,CAACK,IAAJ,KAAa5D,OAAO,CAAC4D,IAAzB,EAA+B;AAC7B,WAAOP,MAAM,CAACvE,KAAP,CAAayE,GAAG,CAACE,QAAJ,CAAatE,MAA1B,CAAP;AACD;;AAED,QAAM;AAAEQ,IAAAA,QAAF;AAAYkE,IAAAA,IAAZ;AAAkBC,IAAAA;AAAlB,MAA6BP,GAAnC;;AACA,MAAI5D,QAAQ,KAAK,GAAjB,EAAsB;AACpB,WAAOK,OAAO,CAACL,QAAR,CAAiBb,KAAjB,CAAuB,CAAvB,CAAP;AACD;;AAED,QAAM;AAAEa,IAAAA,QAAQ,EAAEU;AAAZ,MAA6BL,OAAnC;AAEA,QAAM+D,cAAc,GAAGzB,iBAAiB,CAAC3C,QAAD,EAAWU,YAAX,CAAxC;;AACA,MAAI,CAAC0D,cAAL,EAAqB;AACnB,WAAOV,MAAP;AACD;;AAED,QAAMW,gBAAgB,GAAGrE,QAAQ,CAACb,KAAT,CAAeiF,cAAc,CAAC5E,MAA9B,CAAzB;AACA,QAAM8E,oBAAoB,GAAG5D,YAAY,CAACvB,KAAb,CAAmBiF,cAAc,CAAC5E,MAAlC,CAA7B;;AACA,MAAI8E,oBAAoB,CAACC,QAArB,CAA8B,GAA9B,CAAJ,EAAwC;AACtC,UAAMC,0BAA0B,GAAGzE,wBAAwB,CAACuE,oBAAD,CAA3D;AACA,UAAMG,2BAA2B,GAAGD,0BAA0B,CAACE,OAA3B,CAAmC,QAAnC,EAA6C,KAA7C,CAApC;AACA,WAAQ,GAAED,2BAA4B,GAAEJ,gBAAiB,GAAEF,MAAO,GAAED,IAAK,EAAzE;AACD;;AACD,SAAQ,GAAEG,gBAAiB,GAAEF,MAAO,GAAED,IAAK,EAA3C;AACD,CApCM;;ACGA,MAAMS,aAAa,GAAG,CAACnD,SAAD,EAAYoD,OAAZ,EAAqBC,KAArB,KAA+B;AAC1DvG,EAAAA,eAAe,CAACkD,SAAD,CAAf;;AAEA,QAAMsD,cAAc,GAAG,CAACvG,KAAD,EAAQE,IAAR,KAAiB;AACtC,QAAImF,GAAJ;;AACA,QAAInF,IAAI,KAAK,WAAb,EAA0B;AACxBmF,MAAAA,GAAG,GAAG1C,gBAAgB,CAAC3C,KAAD,EAAQqG,OAAR,CAAtB;;AACA,UAAI,CAAChB,GAAL,EAAU;AACR;AACA,eAAOrF,KAAP;AACD;AACF,KAND,MAMO;AACLqF,MAAAA,GAAG,GAAGzD,UAAU,CAAC5B,KAAD,EAAQqG,OAAR,CAAhB;AACD;;AAED,UAAMG,WAAW,GAAGtB,gBAAgB,CAACG,GAAD,EAAMiB,KAAN,CAApC;;AACA,QAAIE,WAAW,CAAC3D,UAAZ,CAAuB,KAAvB,CAAJ,EAAmC;AACjC,aAAO2D,WAAP;AACD;;AACD,QAAIA,WAAW,CAAC3D,UAAZ,CAAuB,IAAvB,CAAJ,EAAkC;AAChC,aAAO2D,WAAP;AACD;;AACD,QAAInG,SAAS,CAACmG,WAAD,CAAb,EAA4B;AAC1B,aAAOA,WAAP;AACD;;AACD,WAAQ,KAAIA,WAAY,EAAxB;AACD,GAvBD;;AAyBA,QAAMC,iBAAiB,GAAG,EAA1B;AACA,QAAM;AAAEtD,IAAAA;AAAF,MAAcF,SAApB;;AACA,MAAIE,OAAJ,EAAa;AACXsD,IAAAA,iBAAiB,CAACtD,OAAlB,GAA4BuD,qBAAqB,CAACvD,OAAD,EAAUoD,cAAV,CAArB,IAAkDpD,OAA9E;AACD;;AAED,QAAM;AAAEO,IAAAA;AAAF,MAAaT,SAAnB;;AACA,MAAIS,MAAJ,EAAY;AACV+C,IAAAA,iBAAiB,CAAC/C,MAAlB,GAA2BiD,6BAA6B,CAACjD,MAAD,EAAS6C,cAAT,CAA7B,IAAyD7C,MAApF;AACD,GArCyD;;;AAwC1D,MAAI+C,iBAAiB,CAACtD,OAAlB,KAA8BA,OAA9B,IAAyCsD,iBAAiB,CAAC/C,MAAlB,KAA6BA,MAA1E,EAAkF;AAChF,WAAOT,SAAP;AACD;;AACD,SAAOwD,iBAAP;AACD,CA5CM;;AA8CP,MAAME,6BAA6B,GAAG,CAACjD,MAAD,EAAS6C,cAAT,KAA4B;AAChE,QAAMK,iBAAiB,GAAG,EAA1B;AACA,QAAMC,eAAe,GAAG,EAAxB;AACA,MAAIC,WAAW,GAAG,KAAlB;AACA/C,EAAAA,MAAM,CAACC,IAAP,CAAYN,MAAZ,EAAoBO,OAApB,CAA6BC,QAAD,IAAc;AACxC,UAAM6C,UAAU,GAAGrD,MAAM,CAACQ,QAAD,CAAzB;AACA,UAAM8C,gBAAgB,GAAGT,cAAc,CAACrC,QAAD,EAAW,SAAX,CAAvC;AACA,UAAM+C,kBAAkB,GAAGP,qBAAqB,CAACK,UAAD,EAAaR,cAAb,CAAhD;;AAEA,QAAIS,gBAAJ,EAAsB;AACpBF,MAAAA,WAAW,GAAG,IAAd;AACAF,MAAAA,iBAAiB,CAACI,gBAAD,CAAjB,GAAsCC,kBAAkB,IAAIF,UAA5D;AACD,KAHD,MAGO,IAAIE,kBAAJ,EAAwB;AAC7BH,MAAAA,WAAW,GAAG,IAAd;AACAF,MAAAA,iBAAiB,CAAC1C,QAAD,CAAjB,GAA8B+C,kBAA9B;AACD,KAHM,MAGA;AACLJ,MAAAA,eAAe,CAAC3C,QAAD,CAAf,GAA4B+C,kBAA5B;AACD;AACF,GAdD;AAeA,SAAOH,WAAW,GAAG,EAAE,GAAGF,iBAAL;AAAwB,OAAGC;AAA3B,GAAH,GAAkD,IAApE;AACD,CApBD;;AAsBA,MAAMH,qBAAqB,GAAG,CAACvD,OAAD,EAAUoD,cAAV,KAA6B;AACzD,QAAMW,kBAAkB,GAAG,EAA3B;AACA,QAAMC,gBAAgB,GAAG,EAAzB;AACA,MAAIL,WAAW,GAAG,KAAlB;AACA/C,EAAAA,MAAM,CAACC,IAAP,CAAYb,OAAZ,EAAqBc,OAArB,CAA8BmD,SAAD,IAAe;AAC1C,UAAMC,WAAW,GAAGlE,OAAO,CAACiE,SAAD,CAA3B;AACA,UAAME,iBAAiB,GAAGf,cAAc,CAACa,SAAD,EAAY,WAAZ,CAAxC;AACA,UAAMG,mBAAmB,GAAGhB,cAAc,CAACc,WAAD,EAAc,SAAd,CAA1C;;AAEA,QAAIC,iBAAJ,EAAuB;AACrBR,MAAAA,WAAW,GAAG,IAAd;AACAI,MAAAA,kBAAkB,CAACI,iBAAD,CAAlB,GAAwCC,mBAAmB,IAAIF,WAA/D;AACD,KAHD,MAGO,IAAIE,mBAAJ,EAAyB;AAC9BT,MAAAA,WAAW,GAAG,IAAd;AACAI,MAAAA,kBAAkB,CAACE,SAAD,CAAlB,GAAgCG,mBAAhC;AACD,KAHM,MAGA;AACLJ,MAAAA,gBAAgB,CAACC,SAAD,CAAhB,GAA8BC,WAA9B;AACD;AACF,GAdD;AAeA,SAAOP,WAAW,GAAG,EAAE,GAAGI,kBAAL;AAAyB,OAAGC;AAA5B,GAAH,GAAoD,IAAtE;AACD,CApBD;;ACxEO,MAAMK,aAAa,GAAIvE,SAAD,IAAe;AAC1ClD,EAAAA,eAAe,CAACkD,SAAD,CAAf;AAEA,QAAM;AAAEE,IAAAA,OAAF;AAAWO,IAAAA;AAAX,MAAsBT,SAA5B;AACA,SAAO;AACLE,IAAAA,OAAO,EAAEA,OAAO,GAAGsE,WAAW,CAACtE,OAAD,CAAd,GAA0BuE,SADrC;AAELhE,IAAAA,MAAM,EAAEA,MAAM,GAAGiE,UAAU,CAACjE,MAAD,CAAb,GAAwBgE;AAFjC,GAAP;AAID,CARM;AAUA,MAAMD,WAAW,GAAItE,OAAD,IAAa;AACtC,QAAMyE,aAAa,GAAG,EAAtB;AACA7D,EAAAA,MAAM,CAACC,IAAP,CAAYb,OAAZ,EACG0E,IADH,CACQC,4BADR,EAEG7D,OAFH,CAEY8D,IAAD,IAAU;AACjBH,IAAAA,aAAa,CAACG,IAAD,CAAb,GAAsB5E,OAAO,CAAC4E,IAAD,CAA7B;AACD,GAJH;AAKA,SAAOH,aAAP;AACD,CARM;AAUA,MAAMD,UAAU,GAAIjE,MAAD,IAAY;AACpC,QAAMsE,YAAY,GAAG,EAArB;AACAjE,EAAAA,MAAM,CAACC,IAAP,CAAYN,MAAZ,EACGmE,IADH,CACQC,4BADR,EAEG7D,OAFH,CAEYgE,SAAD,IAAe;AACtBD,IAAAA,YAAY,CAACC,SAAD,CAAZ,GAA0BR,WAAW,CAAC/D,MAAM,CAACuE,SAAD,CAAP,CAArC;AACD,GAJH;AAKA,SAAOD,YAAP;AACD,CARM;;AAUP,MAAMF,4BAA4B,GAAG,CAACI,CAAD,EAAIC,CAAJ,KAAU;AAC7C,SAAOA,CAAC,CAAClH,MAAF,GAAWiH,CAAC,CAACjH,MAAb,IAAuBiH,CAAC,CAACE,aAAF,CAAgBD,CAAhB,CAA9B;AACD,CAFD;;AChCO,MAAME,sBAAsB,GAAIhD,GAAD,IAAS;AAC7C,SAAOA,GAAG,CAACiD,QAAJ,CAAa,GAAb,IAAoBjD,GAApB,GAA2B,GAAEA,GAAI,GAAxC;AACD,CAFM;;ACAA,MAAMkD,gBAAgB,GAAIvI,KAAD,IAAW;AACzC,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,UAAM,IAAIC,SAAJ,CAAe,oDAAmDD,KAAM,EAAxE,CAAN;AACD;;AAED,MAAIA,KAAK,CAAC,CAAD,CAAL,KAAa,GAAjB,EAAsB,OAAO,IAAP;AACtB,SAAOwI,4BAA4B,CAACxI,KAAD,CAAnC;AACD,CAPM;;AASP,MAAMwI,4BAA4B,GAAIlI,MAAD,IAAY;AAC/C,QAAMmI,SAAS,GAAGnI,MAAM,CAAC,CAAD,CAAxB;AACA,MAAI,CAAC,WAAWC,IAAX,CAAgBkI,SAAhB,CAAL,EAAiC,OAAO,KAAP;AAEjC,QAAMC,UAAU,GAAGpI,MAAM,CAAC,CAAD,CAAzB;AACA,MAAIoI,UAAU,KAAK,GAAnB,EAAwB,OAAO,KAAP;AAExB,SAAO,IAAP;AACD,CARD;;ACNO,MAAMC,mBAAmB,GAAI3I,KAAD,IAAW;AAC5C,MAAI,CAACuI,gBAAgB,CAACvI,KAAD,CAArB,EAA8B;AAC5B,UAAM,IAAIH,KAAJ,CAAW,iDAAgDG,KAAM,EAAjE,CAAN;AACD;;AACD,SAAO4I,MAAM,CAACC,iBAAa,CAAC7I,KAAD,CAAd,CAAb;AACD,CALM;;ACCA,MAAM8I,8BAA8B,GAAI9I,KAAD,IAAW;AACvD,MAAIS,SAAJ;;AAEA,MAAIT,KAAK,YAAYsF,GAArB,EAA0B;AACxB7E,IAAAA,SAAS,GAAGT,KAAK,CAAC+I,IAAlB;AACD,GAFD,MAEO,IAAI,OAAO/I,KAAP,KAAiB,QAArB,EAA+B;AACpC,QAAIuI,gBAAgB,CAACvI,KAAD,CAApB,EAA6B;AAC3BS,MAAAA,SAAS,GAAGkI,mBAAmB,CAAC3I,KAAD,CAA/B;AACD,KAFD,MAEO;AACL,UAAI;AACFS,QAAAA,SAAS,GAAGmI,MAAM,CAAC,IAAItD,GAAJ,CAAQtF,KAAR,CAAD,CAAlB;AACD,OAFD,CAEE,OAAOgJ,CAAP,EAAU;AACV,cAAM,IAAI/I,SAAJ,CAAe,8CAA6CD,KAAM,EAAlE,CAAN;AACD;AACF;AACF,GAVM,MAUA;AACL,UAAM,IAAIC,SAAJ,CAAe,qDAAoDD,KAAM,EAAzE,CAAN;AACD;;AAED,MAAI,CAACS,SAAS,CAACoC,UAAV,CAAqB,SAArB,CAAL,EAAsC;AACpC,UAAM,IAAIhD,KAAJ,CAAW,mDAAkDG,KAAM,EAAnE,CAAN;AACD;;AAED,SAAOqI,sBAAsB,CAAC5H,SAAD,CAA7B;AACD,CAxBM;;ACDA,MAAMwI,yBAAyB,GAAG,CAACjJ,KAAD,EAAQ8B,OAAR,KAAoB;AAC3D,MAAIrB,SAAJ;;AAEA,MAAIT,KAAK,YAAYsF,GAArB,EAA0B;AACxB7E,IAAAA,SAAS,GAAGT,KAAK,CAAC+I,IAAlB;AACD,GAFD,MAEO,IAAI,OAAO/I,KAAP,KAAiB,QAArB,EAA+B;AACpC,QAAIuI,gBAAgB,CAACvI,KAAD,CAApB,EAA6B;AAC3BS,MAAAA,SAAS,GAAGkI,mBAAmB,CAAC3I,KAAD,CAA/B;AACD,KAFD,MAEO;AACL,UAAI;AACFS,QAAAA,SAAS,GAAGmI,MAAM,CAAC,IAAItD,GAAJ,CAAQtF,KAAR,EAAe8B,OAAf,CAAD,CAAlB;AACD,OAFD,CAEE,OAAOkH,CAAP,EAAU;AACV,cAAM,IAAI/I,SAAJ,CAAe,yCAAwCD,KAAM,EAA7D,CAAN;AACD;AACF;AACF,GAVM,MAUA;AACL,UAAM,IAAIC,SAAJ,CAAe,gDAA+CD,KAAM,EAApE,CAAN;AACD;;AAED,MAAI,CAACS,SAAS,CAACoC,UAAV,CAAqB,SAArB,CAAL,EAAsC;AACpC,UAAM,IAAIhD,KAAJ,CAAW,8CAA6CG,KAAM,EAA9D,CAAN;AACD;;AAED,SAAOS,SAAP;AACD,CAxBM;;ACHA,MAAMyI,WAAW,GAAIC,KAAD,IAAW;AACpC,MAAIA,KAAK,CAACC,MAAN,EAAJ,EAAoB,OAAO,MAAP;AACpB,MAAID,KAAK,CAACE,WAAN,EAAJ,EAAyB,OAAO,WAAP;AACzB,MAAIF,KAAK,CAACG,cAAN,EAAJ,EAA4B,OAAO,eAAP;AAC5B,MAAIH,KAAK,CAACI,MAAN,EAAJ,EAAoB,OAAO,MAAP;AACpB,MAAIJ,KAAK,CAACK,QAAN,EAAJ,EAAsB,OAAO,QAAP;AACtB,MAAIL,KAAK,CAACM,iBAAN,EAAJ,EAA+B,OAAO,kBAAP;AAC/B,MAAIN,KAAK,CAACO,aAAN,EAAJ,EAA2B,OAAO,cAAP;AAC3B,SAAOhC,SAAP;AACD,CATM;;ACEA,MAAMiC,mBAAmB,GAAIC,OAAD,IAAa;AAC9C,MAAIA,OAAO,CAACA,OAAO,CAAC3I,MAAR,GAAiB,CAAlB,CAAP,KAAgC,GAApC,EAAyC;AACvC;AACA;AACA2I,IAAAA,OAAO,GAAGA,OAAO,CAAChJ,KAAR,CAAc,CAAd,EAAiB,CAAC,CAAlB,CAAV;AACD;;AACD,QAAMiJ,cAAc,GAAGC,iBAAa,CAACF,OAAD,CAApC;AACA,SAAOC,cAAP;AACD,CARM;;ACFP;AACA;AACA;AAEA;AACA,MAAME,OAAO,GAAG,GAAhB;AAAoB;;AACpB,MAAMC,OAAO,GAAG,GAAhB;AAAoB;;AACpB,MAAMC,OAAO,GAAG,EAAhB;AAAmB;;AACnB,MAAMC,OAAO,GAAG,EAAhB;AAAmB;;AACnB,MAAMC,OAAO,GAAG,EAAhB;AAAmB;;AACnB,MAAMC,OAAO,GAAG,CAAhB;AAAkB;;AAClB,MAAMC,OAAO,GAAG,CAAhB;AAAkB;;AAClB,MAAMC,OAAO,GAAG,CAAhB;AAAkB;;AAClB,MAAMC,OAAO,GAAG,CAAhB;AA6CO,MAAMC,wBAAwB,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,KAAT;AAAgBC,EAAAA;AAAhB,CAAD,KAA8B;AACpE,MAAIC,WAAW,GAAG,CAAlB;AAEA,MAAIH,KAAK,CAACI,IAAV,EAAgBD,WAAW,IAAIb,OAAf;AAChB,MAAIU,KAAK,CAACK,KAAV,EAAiBF,WAAW,IAAIZ,OAAf;AACjB,MAAIS,KAAK,CAACM,OAAV,EAAmBH,WAAW,IAAIX,OAAf;AAEnB,MAAIS,KAAK,CAACG,IAAV,EAAgBD,WAAW,IAAIV,OAAf;AAChB,MAAIQ,KAAK,CAACI,KAAV,EAAiBF,WAAW,IAAIT,OAAf;AACjB,MAAIO,KAAK,CAACK,OAAV,EAAmBH,WAAW,IAAIR,OAAf;AAEnB,MAAIO,MAAM,CAACE,IAAX,EAAiBD,WAAW,IAAIP,OAAf;AACjB,MAAIM,MAAM,CAACG,KAAX,EAAkBF,WAAW,IAAIN,OAAf;AAClB,MAAIK,MAAM,CAACI,OAAX,EAAoBH,WAAW,IAAIL,OAAf;AAEpB,SAAOK,WAAP;AACD,CAhBM;;ACrDA,MAAMI,8BAA8B,GAAG,OAAOC,MAAP,EAAeC,WAAf,KAA+B;AAC3E,QAAMC,SAAS,GAAGlC,yBAAyB,CAACgC,MAAD,CAA3C;AACA,QAAMG,UAAU,GAAGzB,mBAAmB,CAACwB,SAAD,CAAtC;AAEA,MAAIP,WAAJ;;AACA,MAAI,OAAOM,WAAP,KAAuB,QAA3B,EAAqC;AACnCA,IAAAA,WAAW,GAAG;AACZT,MAAAA,KAAK,EAAE;AACLI,QAAAA,IAAI,EAAEQ,6BAA6B,CAAC,MAAD,EAAS,OAAT,EAAkBH,WAAlB,CAD9B;AAELJ,QAAAA,KAAK,EAAEO,6BAA6B,CAAC,OAAD,EAAU,OAAV,EAAmBH,WAAnB,CAF/B;AAGLH,QAAAA,OAAO,EAAEM,6BAA6B,CAAC,SAAD,EAAY,OAAZ,EAAqBH,WAArB;AAHjC,OADK;AAMZR,MAAAA,KAAK,EAAE;AACLG,QAAAA,IAAI,EAAEQ,6BAA6B,CAAC,MAAD,EAAS,OAAT,EAAkBH,WAAlB,CAD9B;AAELJ,QAAAA,KAAK,EAAEO,6BAA6B,CAAC,OAAD,EAAU,OAAV,EAAmBH,WAAnB,CAF/B;AAGLH,QAAAA,OAAO,EAAEM,6BAA6B,CAAC,SAAD,EAAY,OAAZ,EAAqBH,WAArB;AAHjC,OANK;AAWZP,MAAAA,MAAM,EAAE;AACNE,QAAAA,IAAI,EAAEQ,6BAA6B,CAAC,MAAD,EAAS,QAAT,EAAmBH,WAAnB,CAD7B;AAENJ,QAAAA,KAAK,EAAEO,6BAA6B,CAAC,OAAD,EAAU,QAAV,EAAoBH,WAApB,CAF9B;AAGNH,QAAAA,OAAO,EAAEM,6BAA6B,CAAC,SAAD,EAAY,QAAZ,EAAsBH,WAAtB;AAHhC;AAXI,KAAd;AAiBAN,IAAAA,WAAW,GAAGJ,wBAAwB,CAACU,WAAD,CAAtC;AACD,GAnBD,MAmBO;AACLN,IAAAA,WAAW,GAAGM,WAAd;AACD;;AAED,SAAOI,UAAU,CAACF,UAAD,EAAaR,WAAb,CAAjB;AACD,CA7BM;;AA+BP,MAAMU,UAAU,GAAG,CAACzB,cAAD,EAAiBe,WAAjB,KAAiC;AAClD,SAAO,IAAIW,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCC,IAAAA,QAAK,CAAC7B,cAAD,EAAiBe,WAAjB,EAA+BpL,KAAD,IAAW;AAC5C,UAAIA,KAAJ,EAAW;AACTiM,QAAAA,MAAM,CAACjM,KAAD,CAAN;AACD,OAFD,MAEO;AACLgM,QAAAA,OAAO;AACR;AACF,KANI,CAAL;AAOD,GARM,CAAP;AASD,CAVD;;AAYA,MAAMG,YAAY,GAAG;AAAEd,EAAAA,IAAI,EAAE,CAAR;AAAWC,EAAAA,KAAK,EAAE,CAAlB;AAAqBC,EAAAA,OAAO,EAAE;AAA9B,CAArB;AACA,MAAMa,aAAa,GAAG;AAAEjB,EAAAA,MAAM,EAAE,CAAV;AAAaD,EAAAA,KAAK,EAAE,CAApB;AAAuBD,EAAAA,KAAK,EAAE;AAA9B,CAAtB;;AAEA,MAAMY,6BAA6B,GAAG,CAACQ,MAAD,EAASC,OAAT,EAAkBZ,WAAlB,KAAkC;AACtE,MAAIY,OAAO,IAAIZ,WAAf,EAA4B;AAC1B,UAAMa,kBAAkB,GAAGb,WAAW,CAACY,OAAD,CAAtC;;AACA,QAAID,MAAM,IAAIE,kBAAd,EAAkC;AAChC,aAAOA,kBAAkB,CAACF,MAAD,CAAzB;AACD;;AAED,UAAMG,WAAW,GAAGL,YAAY,CAACE,MAAD,CAAhC;AACA,UAAMI,cAAc,GAAGlI,MAAM,CAACC,IAAP,CAAY2H,YAAZ,EAA0BO,IAA1B,CACpBC,uBAAD,IACER,YAAY,CAACQ,uBAAD,CAAZ,GAAwCH,WAAxC,IACAG,uBAAuB,IAAIJ,kBAHR,CAAvB;;AAKA,QAAIE,cAAJ,EAAoB;AAClB,aAAOF,kBAAkB,CAACE,cAAD,CAAzB;AACD;AACF;;AAED,QAAMG,YAAY,GAAGR,aAAa,CAACE,OAAD,CAAlC,CAlBsE;AAoBtE;;AACA,QAAMO,eAAe,GAAGtI,MAAM,CAACC,IAAP,CAAY4H,aAAZ,EAA2BM,IAA3B,CACrBI,wBAAD,IACEV,aAAa,CAACU,wBAAD,CAAb,GAA0CF,YAA1C,IACAE,wBAAwB,IAAIpB,WAHR,CAAxB;;AAKA,MAAImB,eAAJ,EAAqB;AACnB,UAAMN,kBAAkB,GAAGb,WAAW,CAACmB,eAAD,CAAtC;AACA,WAAOR,MAAM,IAAIE,kBAAV,GACHA,kBAAkB,CAACF,MAAD,CADf,GAEHR,6BAA6B,CAACQ,MAAD,EAASQ,eAAT,EAA0BnB,WAA1B,CAFjC;AAGD;;AAED,SAAO,KAAP;AACD,CAlCD;;AC9CA,MAAMqB,SAAS,GAAGC,OAAO,CAACC,QAAR,KAAqB,OAAvC;AAEO,MAAMC,sBAAsB,GAAG,OACpCzB,MADoC,EAEpC;AAAE0B,EAAAA,cAAc,GAAG,KAAnB;AAA0BC,EAAAA,UAAU,GAAG;AAAvC,IAAgD,EAFZ,KAGjC;AACH,MAAI3B,MAAM,CAAC3C,QAAP,CAAgB,GAAhB,CAAJ,EAA0B2C,MAAM,GAAGA,MAAM,CAACrK,KAAP,CAAa,CAAb,EAAgB,CAAC,CAAjB,CAAT;AAE1B,QAAMuK,SAAS,GAAGlC,yBAAyB,CAACgC,MAAD,CAA3C;AACA,QAAMG,UAAU,GAAGzB,mBAAmB,CAACwB,SAAD,CAAtC;AAEA,QAAM0B,oBAAoB,GAAGF,cAAc,GACvC;AACEG,IAAAA,mBAAmB,EAAE,MAAM;AAD7B,GADuC,GAIvC,EAJJ;AAMA,SAAOC,QAAQ,CAAC3B,UAAD,EAAa;AAC1BwB,IAAAA,UAD0B;AAE1B,OAAGC,oBAFuB;AAG1B,QAAIN,SAAS,GACT;AACE;AACAS,MAAAA,2BAA2B,EAAE,MAAOxN,KAAP,IAAiB;AAC5CM,QAAAA,OAAO,CAACN,KAAR,CAAe,8CAA6C4L,UAAW,EAAvE;;AAEA,YAAI;AACF;AACA;AACA;AACA,gBAAMJ,8BAA8B,CAACG,SAAD,EAAY,KAAZ,CAApC;AACA,gBAAMhC,KAAK,GAAG,MAAM4D,QAAQ,CAAC3B,UAAD,EAAa;AACvCwB,YAAAA,UADuC;AAEvC,eAAGC,oBAFoC;AAGvC;AACAG,YAAAA,2BAA2B,EAAE,MAAM;AACjClN,cAAAA,OAAO,CAACN,KAAR,CAAe,kCAAiC4L,UAAW,EAA3D;AACA,oBAAM5L,KAAN;AACD;AAPsC,WAAb,CAA5B;AASA,iBAAO2J,KAAP;AACD,SAfD,CAeE,OAAOH,CAAP,EAAU;AACVlJ,UAAAA,OAAO,CAACN,KAAR,CACG,0DAAyD4L,UAAW,KAAIpC,CAAC,CAACiE,KAAM,EADnF;AAGA,gBAAMzN,KAAN;AACD;AACF;AA1BH,KADS,GA6BT,EA7BJ;AAH0B,GAAb,CAAf;AAkCD,CAjDM;;AAmDP,MAAMuN,QAAQ,GAAG,CACf3B,UADe,EAEf;AAAEwB,EAAAA,UAAF;AAAcE,EAAAA,mBAAmB,GAAG,IAApC;AAA0CE,EAAAA,2BAA2B,GAAG;AAAxE,IAAiF,EAFlE,KAGZ;AACH,QAAME,UAAU,GAAGN,UAAU,GAAGO,OAAH,GAAUC,QAAvC;AAEA,SAAO,IAAI7B,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCyB,IAAAA,UAAU,CAAC9B,UAAD,EAAa,CAAC5L,KAAD,EAAQ6N,WAAR,KAAwB;AAC7C,UAAI7N,KAAJ,EAAW;AACT,YAAIsN,mBAAmB,IAAItN,KAAK,CAAC8N,IAAN,KAAe,QAA1C,EAAoD;AAClD9B,UAAAA,OAAO,CAACsB,mBAAmB,CAACtN,KAAD,CAApB,CAAP;AACD,SAFD,MAEO,IACLwN,2BAA2B,KAC1BxN,KAAK,CAAC8N,IAAN,KAAe,OAAf,IAA0B9N,KAAK,CAAC8N,IAAN,KAAe,QADf,CADtB,EAGL;AACA9B,UAAAA,OAAO,CAACwB,2BAA2B,CAACxN,KAAD,CAA5B,CAAP;AACD,SALM,MAKA;AACLiM,UAAAA,MAAM,CAACjM,KAAD,CAAN;AACD;AACF,OAXD,MAWO;AACLgM,QAAAA,OAAO,CAAC6B,WAAD,CAAP;AACD;AACF,KAfS,CAAV;AAgBD,GAjBM,CAAP;AAkBD,CAxBD;;AC1DO,MAAME,sBAAsB,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,KAAT;AAAgBC,EAAAA;AAAhB,CAAD,KAAiC;AACrE,MAAI,OAAOF,KAAP,KAAiB,QAArB,EAA+B;AAC7B,UAAM,IAAIvN,SAAJ,CAAe,gCAA+BuN,KAAM,EAApD,CAAN;AACD;;AACD,MAAI,OAAOC,KAAP,KAAiB,UAArB,EAAiC;AAC/B,UAAM,IAAIxN,SAAJ,CAAe,iCAAgCwN,KAAM,EAArD,CAAN;AACD;;AACD,MAAI,OAAOC,SAAP,KAAqB,UAAzB,EAAqC;AACnC,UAAM,IAAIzN,SAAJ,CAAe,qCAAoCyN,SAAU,EAA7D,CAAN;AACD;;AAED,QAAMC,KAAK,GAAG,MAAOC,KAAP,IAAiB;AAC7B,QAAIA,KAAK,IAAIJ,KAAK,CAACvM,MAAnB,EAA2B;AACzB,aAAOyG,SAAP;AACD;;AACD,UAAMmG,KAAK,GAAGL,KAAK,CAACI,KAAD,CAAnB;AACA,UAAME,MAAM,GAAG,MAAML,KAAK,CAACI,KAAD,CAA1B;;AACA,QAAIH,SAAS,CAACI,MAAD,CAAb,EAAuB;AACrB,aAAOA,MAAP;AACD;;AACD,WAAOH,KAAK,CAACC,KAAK,GAAG,CAAT,CAAZ;AACD,GAVD;;AAYA,SAAOD,KAAK,CAAC,CAAD,CAAZ;AACD,CAxBM;;ACOA,MAAMI,aAAa,GAAI/N,KAAD,IAAW;AACtC,SAAOA,KAAK,IAAI,OAAOA,KAAP,KAAiB,QAA1B,IAAsCA,KAAK,CAAC+H,IAAN,KAAe,cAA5D;AACD,CAFM;;ACPA,MAAMiG,kBAAkB,GAAG,CAACC,IAAD,EAAOlG,IAAP,KAAgB;AAChD,MAAIhD,CAAC,GAAG,CAAR;;AAEA,SAAOA,CAAC,GAAGkJ,IAAI,CAAChN,MAAhB,EAAwB;AACtB,UAAMiN,GAAG,GAAGD,IAAI,CAAClJ,CAAD,CAAhB;;AAEA,QAAImJ,GAAG,KAAKnG,IAAZ,EAAkB;AAChB,aAAO;AACLA,QAAAA,IADK;AAEL6F,QAAAA,KAAK,EAAE7I,CAFF;AAGL/E,QAAAA,KAAK,EAAE;AAHF,OAAP;AAKD;;AAED,QAAIkO,GAAG,CAACrL,UAAJ,CAAgB,GAAEkF,IAAK,GAAvB,CAAJ,EAAgC;AAC9B,aAAO;AACLA,QAAAA,IADK;AAEL6F,QAAAA,KAAK,EAAE7I,CAFF;AAGL/E,QAAAA,KAAK,EAAEkO,GAAG,CAACtN,KAAJ,CAAW,GAAEmH,IAAK,GAAR,CAAW9G,MAArB;AAHF,OAAP;AAKD;;AAED8D,IAAAA,CAAC;AACF;;AAED,SAAO,IAAP;AACD,CA1BM;;ACGA,MAAMoJ,oBAAoB,GAAG,CAClCC,EADkC,EAElC;AAAEC,EAAAA,iBAAiB,GAAG,KAAtB;AAA6BC,EAAAA,wBAAwB,GAAG;AAAxD,IAAkE,EAFhC,KAG/B;AACH,MAAID,iBAAJ,EAAuB;AACrB,UAAME,UAAU,GAAGH,EAAnB;;AACAA,IAAAA,EAAE,GAAG,YAAY;AACf,UAAI;AACF,cAAMpO,KAAK,GAAG,MAAMuO,UAAU,EAA9B;AACA,eAAOvO,KAAP;AACD,OAHD,CAGE,OAAOR,KAAP,EAAc;AACd,YAAIuO,aAAa,CAACvO,KAAD,CAAjB,EAA0B;AACxB;AACA;AACA;AACA,iBAAOA,KAAP;AACD;;AACD,cAAMA,KAAN;AACD;AACF,KAbD;AAcD;;AAED,MAAI8O,wBAAJ,EAA8B;AAC5B,UAAMC,UAAU,GAAGH,EAAnB;;AACAA,IAAAA,EAAE,GAAG,YAAY;AACf,YAAMI,SAAS,GAAGC,+BAA+B,EAAjD;;AACA,UAAI;AACF,cAAMzO,KAAK,GAAG,MAAMuO,UAAU,EAA9B;AACAC,QAAAA,SAAS;AACT,eAAOxO,KAAP;AACD,OAJD,CAIE,OAAOgJ,CAAP,EAAU;AACV;AACA0F,QAAAA,UAAU,CAAC,MAAM;AACfF,UAAAA,SAAS;AACV,SAFS,CAAV;AAGA,cAAMxF,CAAN;AACD;AACF,KAbD;AAcD;;AAED,SAAOoF,EAAE,EAAT;AACD,CAzCM;;AA2CP,MAAMK,+BAA+B,GAAG,MAAM;AAC5C,QAAME,qBAAqB,GAAGX,kBAAkB,CAACxB,OAAO,CAACoC,QAAT,EAAmB,wBAAnB,CAAhD;AACA,MAAID,qBAAqB,KAAK,QAA9B,EAAwC,OAAO,MAAM,EAAb;;AAExC,QAAME,oBAAoB,GAAIC,MAAD,IAAY;AACvC,UAAMA,MAAN;AACD,GAFD;;AAGAtC,EAAAA,OAAO,CAACuC,IAAR,CAAa,oBAAb,EAAmCF,oBAAnC;AACA,SAAO,MAAM;AACXrC,IAAAA,OAAO,CAACwC,cAAR,CAAuB,oBAAvB,EAA6CH,oBAA7C;AACD,GAFD;AAGD,CAXD;;AC9CO,MAAMzK,mBAAiB,GAAG,CAAC3C,QAAD,EAAW4C,aAAX,KAA6B;AAC5D,QAAMC,4BAA4B,GAAGC,kCAAgC,CAAC9C,QAAD,EAAW4C,aAAX,CAArE,CAD4D;;AAI5D,MAAIC,4BAA4B,KAAK,CAAC,CAAtC,EAAyC;AACvC,WAAO7C,QAAP;AACD;;AAED,QAAM+C,YAAY,GAAG/C,QAAQ,CAACb,KAAT,CAAe,CAAf,EAAkB0D,4BAA4B,GAAG,CAAjD,CAArB,CAR4D;;AAW5D,MAAI7C,QAAQ,CAACgD,MAAT,CAAgBH,4BAAhB,MAAkD,GAAtD,EAA2D;AACzD,WAAOE,YAAP;AACD;;AAED,MAAIH,aAAa,CAACI,MAAd,CAAqBH,4BAArB,MAAuD,GAA3D,EAAgE;AAC9D,WAAOE,YAAP;AACD;;AAED,QAAME,wBAAwB,GAAGF,YAAY,CAAC7C,WAAb,CAAyB,GAAzB,CAAjC;AACA,SAAOF,QAAQ,CAACb,KAAT,CAAe,CAAf,EAAkB8D,wBAAwB,GAAG,CAA7C,CAAP;AACD,CArBM;;AAuBP,MAAMH,kCAAgC,GAAG,CAACjE,MAAD,EAASqE,WAAT,KAAyB;AAChE,QAAMC,eAAe,GAAGC,IAAI,CAACC,GAAL,CAASxE,MAAM,CAACW,MAAhB,EAAwB0D,WAAW,CAAC1D,MAApC,CAAxB;AACA,MAAI8D,CAAC,GAAG,CAAR;;AACA,SAAOA,CAAC,GAAGH,eAAX,EAA4B;AAC1B,UAAMI,IAAI,GAAG1E,MAAM,CAACmE,MAAP,CAAcM,CAAd,CAAb;AACA,UAAME,SAAS,GAAGN,WAAW,CAACF,MAAZ,CAAmBM,CAAnB,CAAlB;;AACA,QAAIC,IAAI,KAAKC,SAAb,EAAwB;AACtB,aAAOF,CAAP;AACD;;AACDA,IAAAA,CAAC;AACF;;AACD,MAAIzE,MAAM,CAACW,MAAP,KAAkB0D,WAAW,CAAC1D,MAAlC,EAA0C;AACxC,WAAO,CAAC,CAAR;AACD,GAb+D;;;AAehE,SAAO2D,eAAP;AACD,CAhBD;;ACvBO,MAAMpD,0BAAwB,GAAIC,QAAD,IAAc;AACpD,QAAMC,cAAc,GAAGD,QAAQ,CAACE,WAAT,CAAqB,GAArB,CAAvB;;AACA,MAAID,cAAc,KAAK,CAAC,CAAxB,EAA2B;AACzB,WAAO,GAAP;AACD;;AAED,SAAOD,QAAQ,CAACb,KAAT,CAAe,CAAf,EAAkBc,cAAc,GAAG,CAAnC,CAAP;AACD,CAPM;;ACGA,MAAMwD,kBAAgB,GAAG,CAACC,MAAD,EAASC,UAAT,KAAwB;AACtD,QAAMC,GAAG,GAAG,IAAIC,GAAJ,CAAQH,MAAR,CAAZ;AACA,QAAMrD,OAAO,GAAG,IAAIwD,GAAJ,CAAQF,UAAR,CAAhB;;AAEA,MAAIC,GAAG,CAACE,QAAJ,KAAiBzD,OAAO,CAACyD,QAA7B,EAAuC;AACrC,WAAOJ,MAAP;AACD;;AAED,MAAIE,GAAG,CAACG,QAAJ,KAAiB1D,OAAO,CAAC0D,QAAzB,IAAqCH,GAAG,CAACI,QAAJ,KAAiB3D,OAAO,CAAC2D,QAAlE,EAA4E;AAC1E,WAAON,MAAM,CAACvE,KAAP,CAAayE,GAAG,CAACE,QAAJ,CAAatE,MAA1B,CAAP;AACD;;AAED,MAAIoE,GAAG,CAACK,IAAJ,KAAa5D,OAAO,CAAC4D,IAAzB,EAA+B;AAC7B,WAAOP,MAAM,CAACvE,KAAP,CAAayE,GAAG,CAACE,QAAJ,CAAatE,MAA1B,CAAP;AACD;;AAED,QAAM;AAAEQ,IAAAA,QAAF;AAAYkE,IAAAA,IAAZ;AAAkBC,IAAAA;AAAlB,MAA6BP,GAAnC;;AACA,MAAI5D,QAAQ,KAAK,GAAjB,EAAsB;AACpB,WAAOK,OAAO,CAACL,QAAR,CAAiBb,KAAjB,CAAuB,CAAvB,CAAP;AACD;;AAED,QAAM;AAAEa,IAAAA,QAAQ,EAAEU;AAAZ,MAA6BL,OAAnC;AAEA,QAAM+D,cAAc,GAAGzB,mBAAiB,CAAC3C,QAAD,EAAWU,YAAX,CAAxC;;AACA,MAAI,CAAC0D,cAAL,EAAqB;AACnB,WAAOV,MAAP;AACD;;AAED,QAAMW,gBAAgB,GAAGrE,QAAQ,CAACb,KAAT,CAAeiF,cAAc,CAAC5E,MAA9B,CAAzB;AACA,QAAM8E,oBAAoB,GAAG5D,YAAY,CAACvB,KAAb,CAAmBiF,cAAc,CAAC5E,MAAlC,CAA7B;;AACA,MAAI8E,oBAAoB,CAACC,QAArB,CAA8B,GAA9B,CAAJ,EAAwC;AACtC,UAAMC,0BAA0B,GAAGzE,0BAAwB,CAACuE,oBAAD,CAA3D;AACA,UAAMG,2BAA2B,GAAGD,0BAA0B,CAACE,OAA3B,CAAmC,QAAnC,EAA6C,KAA7C,CAApC;AACA,WAAQ,GAAED,2BAA4B,GAAEJ,gBAAiB,GAAEF,MAAO,GAAED,IAAK,EAAzE;AACD;;AACD,SAAQ,GAAEG,gBAAiB,GAAEF,MAAO,GAAED,IAAK,EAA3C;AACD,CApCM;;ACIP,MAAM;AAAEsJ,EAAAA;AAAF,IAAYC,WAAlB;AAEO,MAAMC,cAAc,GAAG,OAC5BC,WAD4B,EAE5B;AAAEC,EAAAA,SAAS,GAAG,IAAd;AAAoBC,EAAAA,YAAY,GAAG;AAAnC,IAA6C,EAFjB,KAGzB;AACH,QAAMC,cAAc,GAAGzG,8BAA8B,CAACsG,WAAD,CAArD;AACA,QAAMI,eAAe,GAAG7F,mBAAmB,CAAC4F,cAAD,CAA3C;AAEA,QAAME,gBAAgB,GAAG,MAAM/C,sBAAsB,CAAC6C,cAAD,EAAiB;AACpE5C,IAAAA,cAAc,EAAE,IADoD;AAEpEC,IAAAA,UAAU,EAAE;AAFwD,GAAjB,CAArD;;AAKA,MAAI6C,gBAAJ,EAAsB;AACpB,QAAIA,gBAAgB,CAACpG,WAAjB,EAAJ,EAAoC;AAClC,UAAIiG,YAAJ,EAAkB;AAChB;AACD;;AACD,YAAM,IAAIzP,KAAJ,CAAW,+BAA8B2P,eAAgB,EAAzD,CAAN;AACD;;AAED,UAAME,eAAe,GAAGxG,WAAW,CAACuG,gBAAD,CAAnC;AACA,UAAM,IAAI5P,KAAJ,CACH,6BAA4B2P,eAAgB,uBAAsBE,eAAgB,EAD/E,CAAN;AAGD;;AAED,MAAI;AACF,UAAMT,KAAK,CAACO,eAAD,EAAkB;AAAEH,MAAAA;AAAF,KAAlB,CAAX;AACD,GAFD,CAEE,OAAO7P,KAAP,EAAc;AACd,QAAI8P,YAAY,IAAI9P,KAAK,CAAC8N,IAAN,KAAe,QAAnC,EAA6C;AAC3C;AACD;;AACD,UAAM9N,KAAN;AACD;AACF,CAlCM;;ACTA,MAAMoC,YAAU,GAAG,CAACC,SAAD,EAAYC,OAAZ,KAAwB;AAChD,MAAI,OAAOA,OAAP,KAAmB,WAAvB,EAAoC;AAClC,UAAM,IAAI7B,SAAJ,CAAe,8BAA6B4B,SAAU,EAAtD,CAAN;AACD;;AAED,SAAO+G,MAAM,CAAC,IAAItD,GAAJ,CAAQzD,SAAR,EAAmBC,OAAnB,CAAD,CAAb;AACD,CANM;;ACKA,MAAM6N,uBAAuB,GAAG,MAAOP,WAAP,IAAuB;AAC5D,QAAMG,cAAc,GAAGtG,yBAAyB,CAACmG,WAAD,CAAhD;AACA,QAAMI,eAAe,GAAG7F,mBAAmB,CAAC4F,cAAD,CAA3C;AACA,QAAMK,qBAAqB,GAAGC,YAAO,CAACL,eAAD,CAArC;AAEA,SAAOL,cAAc,CAACS,qBAAD,EAAwB;AAAEP,IAAAA,SAAS,EAAE,IAAb;AAAmBC,IAAAA,YAAY,EAAE;AAAjC,GAAxB,CAArB;AACD,CANM;;ACHP,MAAM/C,WAAS,GAAGC,OAAO,CAACC,QAAR,KAAqB,OAAvC;AACA,MAAMqD,eAAe,GAAGnH,mBAAmB,CAAC6D,OAAO,CAACuD,GAAR,EAAD,CAA3C;;ACOA,MAAMxD,WAAS,GAAGC,OAAO,CAACC,QAAR,KAAqB,OAAvC;;ACLA,MAAMuD,mBAAmB,GAAGC,cAAS,CAACC,WAAD,CAArC;AACO,MAAMC,QAAQ,GAAG,OAAOnQ,KAAP,EAAc;AAAEoQ,EAAAA,EAAE,GAAG;AAAP,IAAoB,EAAlC,KAAyC;AAC/D,QAAMxG,OAAO,GAAGX,yBAAyB,CAACjJ,KAAD,CAAzC;AACA,QAAMqQ,QAAQ,GAAG1G,mBAAmB,CAACC,OAAD,CAApC;AACA,QAAM0G,MAAM,GAAG,MAAMN,mBAAmB,CAACK,QAAD,CAAxC;;AACA,MAAID,EAAE,KAAK,QAAX,EAAqB;AACnB,WAAOE,MAAP;AACD;;AACD,MAAIF,EAAE,KAAK,QAAX,EAAqB;AACnB,WAAOE,MAAM,CAACC,QAAP,EAAP;AACD;;AACD,MAAIH,EAAE,KAAK,MAAX,EAAmB;AACjB,WAAOI,IAAI,CAACC,KAAL,CAAWH,MAAM,CAACC,QAAP,EAAX,CAAP;AACD;;AACD,QAAM,IAAI1Q,KAAJ,CAAW,kDAAiDuQ,EAAG,GAA/D,CAAN;AACD,CAdM;;ACJP,MAAM7D,WAAS,GAAGC,OAAO,CAACC,QAAR,KAAqB,OAAvC;;ACFA;AAkBA,MAAMiE,OAAO,GAAGlE,OAAO,CAACC,QAAR,KAAqB,OAArC;;AClBO,MAAMjM,aAAW,GAAIC,SAAD,IAAe;AACxC,QAAMC,UAAU,GAAGD,SAAS,CAACE,OAAV,CAAkB,GAAlB,CAAnB;;AACA,MAAID,UAAU,KAAK,CAAC,CAApB,EAAuB;AACrB,WAAO,EAAP;AACD;;AAED,QAAMM,MAAM,GAAGP,SAAS,CAACG,KAAV,CAAgB,CAAhB,EAAmBF,UAAnB,CAAf;AACA,SAAOM,MAAP;AACD,CARM;;ACEA,MAAMD,gBAAc,GAAIN,SAAD,IAAe;AAC3C,QAAMO,MAAM,GAAGR,aAAW,CAACC,SAAD,CAA1B;;AAEA,MAAIO,MAAM,KAAK,MAAf,EAAuB;AACrB,WAAOP,SAAS,CAACG,KAAV,CAAgB,UAAUK,MAA1B,CAAP;AACD;;AAED,MAAID,MAAM,KAAK,OAAX,IAAsBA,MAAM,KAAK,MAArC,EAA6C;AAC3C;AACA,UAAME,aAAa,GAAGT,SAAS,CAACG,KAAV,CAAgBI,MAAM,CAACC,MAAP,GAAgB,MAAMA,MAAtC,CAAtB;AACA,UAAME,kBAAkB,GAAGD,aAAa,CAACP,OAAd,CAAsB,GAAtB,EAA2B,MAAMM,MAAjC,CAA3B;AACA,WAAOC,aAAa,CAACN,KAAd,CAAoBO,kBAApB,CAAP;AACD;;AAED,SAAOV,SAAS,CAACG,KAAV,CAAgBI,MAAM,CAACC,MAAP,GAAgB,CAAhC,CAAP;AACD,CAfM;;ACAA,MAAMJ,eAAa,GAAIJ,SAAD,IAAe;AAC1C,QAAMW,SAAS,GAAGL,gBAAc,CAACN,SAAD,CAAhC;AACA,QAAMgB,QAAQ,GAAGX,qBAAmB,CAACM,SAAD,CAApC;AACA,SAAOK,QAAP;AACD,CAJM;;AAMP,MAAMX,qBAAmB,GAAIM,SAAD,IAAe;AACzC,QAAMC,oBAAoB,GAAGD,SAAS,CAACT,OAAV,CAAkB,GAAlB,CAA7B;AACA,SAAOU,oBAAoB,KAAK,CAAC,CAA1B,GAA8BD,SAA9B,GAA0CA,SAAS,CAACR,KAAV,CAAgB,CAAhB,EAAmBS,oBAAnB,CAAjD;AACD,CAHD;;ACNO,MAAMsP,aAAa,GAAItL,GAAD,IAAS;AACpC,QAAM5D,QAAQ,GAAGZ,eAAa,CAACwE,GAAD,CAA9B;AACA,QAAM3D,cAAc,GAAGD,QAAQ,CAACE,WAAT,CAAqB,GAArB,CAAvB;AACA,QAAMiP,QAAQ,GAAGlP,cAAc,KAAK,CAAC,CAApB,GAAwBD,QAAxB,GAAmCA,QAAQ,CAACb,KAAT,CAAec,cAAc,GAAG,CAAhC,CAApD;AACA,SAAOkP,QAAP;AACD,CALM;;ACAA,MAAMC,aAAa,GAAIpP,QAAD,IAAc;AACzC,QAAMmP,QAAQ,GAAGD,aAAa,CAAClP,QAAD,CAA9B;AACA,QAAMqP,YAAY,GAAGF,QAAQ,CAACjP,WAAT,CAAqB,GAArB,CAArB;AACA,QAAMoP,QAAQ,GAAGD,YAAY,KAAK,CAAC,CAAlB,GAAsBF,QAAtB,GAAiCA,QAAQ,CAAChQ,KAAT,CAAe,CAAf,EAAkBkQ,YAAlB,CAAlD;AACA,SAAOC,QAAP;AACD,CALM;;ACIP,MAAM;AAAEC,EAAAA,SAAS,EAAEC;AAAb,IAA+B/B,WAArC;AAEO,MAAM8B,SAAS,GAAG,OAAO5B,WAAP,EAAoB8B,OAAO,GAAG,EAA9B,KAAqC;AAC5D,QAAM3B,cAAc,GAAGtG,yBAAyB,CAACmG,WAAD,CAAhD;AAEA,QAAMI,eAAe,GAAG7F,mBAAmB,CAAC4F,cAAD,CAA3C;;AACA,MAAI;AACF,UAAM0B,aAAa,CAACzB,eAAD,EAAkB0B,OAAlB,CAAnB;AACD,GAFD,CAEE,OAAO1R,KAAP,EAAc;AACd,QAAIA,KAAK,CAAC8N,IAAN,KAAe,QAAnB,EAA6B;AAC3B,YAAMqC,uBAAuB,CAACJ,cAAD,CAA7B;AACA,YAAM0B,aAAa,CAACzB,eAAD,EAAkB0B,OAAlB,CAAnB;AACA;AACD;;AACD,UAAM1R,KAAN;AACD;AACF,CAdM;;ACNA,MAAM2R,eAAe,GAAG,OAAOC,cAAP,EAAuBC,uBAAvB,KAAmD;AAChF,QAAMC,iBAAiB,GAAG,MAAMnB,QAAQ,CAACiB,cAAD,CAAxC;AACA,QAAMG,iBAAiB,GAAGf,IAAI,CAACC,KAAL,CAAWa,iBAAX,CAA1B;AACA,QAAM;AAAEvJ,IAAAA,IAAF;AAAQyJ,IAAAA;AAAR,MAAoBD,iBAA1B;AAEA,QAAME,WAAW,GAAG1N,MAAM,CAACC,IAAP,CAAYqN,uBAAZ,EAAqCnF,IAArC,CAA2CwF,oBAAD,IAA0B;AACtF,QAAI3J,IAAI,KAAK2J,oBAAb,EAAmC,OAAO,IAAP;AACnC,QAAK,GAAE3J,IAAK,IAAGyJ,OAAQ,EAAnB,KAAyBE,oBAA7B,EAAmD,OAAO,IAAP;AACnD,WAAO,KAAP;AACD,GAJmB,CAApB;;AAKA,MAAID,WAAJ,EAAiB;AACf,WAAOE,aAAa,CAACJ,iBAAD,EAAoBF,uBAAuB,CAACI,WAAD,CAA3C,CAApB;AACD;;AACD,SAAOF,iBAAP;AACD,CAdM;;AAgBP,MAAMI,aAAa,GAAG,CAACC,UAAD,EAAaC,WAAb,KAA6B;AACjD,QAAMC,cAAc,GAAG,EACrB,GAAGF;AADkB,GAAvB;AAGA7N,EAAAA,MAAM,CAACC,IAAP,CAAY6N,WAAZ,EAAyB5N,OAAzB,CAAkC8N,GAAD,IAAS;AACxC,UAAMC,UAAU,GAAGH,WAAW,CAACE,GAAD,CAA9B;;AAEA,QAAIC,UAAU,KAAK,IAAf,IAAuB,OAAOA,UAAP,KAAsB,QAA7C,IAAyDD,GAAG,IAAIH,UAAP,KAAsB,KAAnF,EAA0F;AACxFE,MAAAA,cAAc,CAACC,GAAD,CAAd,GAAsBC,UAAtB;AACD,KAFD,MAEO;AACL,YAAMC,SAAS,GAAGL,UAAU,CAACG,GAAD,CAA5B;;AACA,UAAIE,SAAS,KAAK,IAAd,IAAsB,OAAOA,SAAP,KAAqB,QAA/C,EAAyD;AACvDH,QAAAA,cAAc,CAACC,GAAD,CAAd,GAAsBC,UAAtB;AACD,OAFD,MAEO;AACLF,QAAAA,cAAc,CAACC,GAAD,CAAd,GAAsBJ,aAAa,CAACM,SAAD,EAAYD,UAAZ,CAAnC;AACD;AACF;AACF,GAbD;AAcA,SAAOF,cAAP;AACD,CAnBD;;ACdO,MAAMI,iBAAiB,GAAG,OAAO;AACtCC,EAAAA,MADsC;AAEtCC,EAAAA,uBAFsC;AAGtCf,EAAAA,uBAHsC;AAItCD,EAAAA,cAJsC;AAKtCiB,EAAAA;AALsC,CAAP,KAM3B;AACJ,QAAMC,mBAAmB,GAAG1Q,YAAU,CAAC,IAAD,EAAOwP,cAAP,CAAtC;AACA,QAAMmB,wBAAwB,GAAG,CAC/B,GAAGC,+BAA+B,CAACF,mBAAD,EAAsBF,uBAAtB,CADH,EAE9B,eAF8B,CAAjC;AAKA,SAAO7E,sBAAsB,CAAC;AAC5BC,IAAAA,KAAK,EAAE+E,wBADqB;AAE5B9E,IAAAA,KAAK,EAAE,MAAOgF,mBAAP,IAA+B;AACpC,YAAMrB,cAAc,GAAI,GAAEgB,uBAAwB,GAAEK,mBAAoB,GAAEJ,cAAe,eAAzF;;AACA,UAAI;AACF,cAAMd,iBAAiB,GAAG,MAAMJ,eAAe,CAACC,cAAD,EAAiBC,uBAAjB,CAA/C;AACA,eAAO;AACLD,UAAAA,cADK;AAELG,UAAAA;AAFK,SAAP;AAID,OAND,CAME,OAAOvI,CAAP,EAAU;AACV,YAAIA,CAAC,CAACsE,IAAF,KAAW,QAAf,EAAyB;AACvB,iBAAO,EAAP;AACD;;AAED,YAAItE,CAAC,CAACjB,IAAF,KAAW,aAAf,EAA8B;AAC5BoK,UAAAA,MAAM,CAAC3S,KAAP,CAAc;AACxB;AACA;AACA,EAAEwJ,CAAC,CAAC0J,OAAQ;AACZ;AACA,EAAE/I,mBAAmB,CAACyH,cAAD,CAAiB;AACtC,CANU;AAOA,iBAAO,EAAP;AACD;;AAED,cAAMpI,CAAN;AACD;AACF,KA5B2B;AA6B5B0E,IAAAA,SAAS,EAAE,CAAC;AAAE6D,MAAAA;AAAF,KAAD,KAA2BjO,OAAO,CAACiO,iBAAD;AA7BjB,GAAD,CAA7B;AA+BD,CA5CM;;AA8CP,MAAMiB,+BAA+B,GAAG,CAACF,mBAAD,EAAsBF,uBAAtB,KAAkD;AACxF,MAAIE,mBAAmB,KAAKF,uBAA5B,EAAqD;AACnD,WAAO,EAAP;AACD;;AAED,QAAMO,2BAA2B,GAAGzN,kBAAgB,CAACoN,mBAAD,EAAsBF,uBAAtB,CAApD;AAEA,QAAMQ,cAAc,GAAG,EAAvB;AACA,QAAMC,gCAAgC,GAAGF,2BAA2B,CAACpQ,KAA5B,CAAkC,eAAlC,CAAzC,CARwF;;AAUxFsQ,EAAAA,gCAAgC,CAACC,KAAjC;AAEA,MAAI/N,CAAC,GAAG8N,gCAAgC,CAAC5R,MAAzC;;AACA,SAAO8D,CAAC,EAAR,EAAY;AACV6N,IAAAA,cAAc,CAACG,IAAf,CACG,gBAAeF,gCAAgC,CAC7CjS,KADa,CACP,CADO,EACJmE,CAAC,GAAG,CADA,EAEbrC,IAFa,CAER,eAFQ,CAES,eAH3B;AAKD;;AAED,SAAOkQ,cAAP;AACD,CAtBD;;AC9CO,MAAMI,kBAAkB,GAAG,CAAC;AAAEb,EAAAA,MAAF;AAAUf,EAAAA,cAAV;AAA0BG,EAAAA;AAA1B,CAAD,KAAmD;AACnF,MAAI,YAAYA,iBAAhB,EAAmC;AACjC,WAAO0B,eAAe,CAAC;AACrBd,MAAAA,MADqB;AAErBf,MAAAA,cAFqB;AAGrB8B,MAAAA,oBAAoB,EAAE,QAHD;AAIrBC,MAAAA,qBAAqB,EAAE5B,iBAAiB,CAAC6B;AAJpB,KAAD,CAAtB;AAMD;;AAED,MAAI,iBAAiB7B,iBAArB,EAAwC;AACtC,WAAO0B,eAAe,CAAC;AACrBd,MAAAA,MADqB;AAErBf,MAAAA,cAFqB;AAGrB8B,MAAAA,oBAAoB,EAAE,aAHD;AAIrBC,MAAAA,qBAAqB,EAAE5B,iBAAiB,CAAC,aAAD;AAJnB,KAAD,CAAtB;AAMD;;AAED,MAAI,UAAUA,iBAAd,EAAiC;AAC/B,WAAO0B,eAAe,CAAC;AACrBd,MAAAA,MADqB;AAErBf,MAAAA,cAFqB;AAGrB8B,MAAAA,oBAAoB,EAAE,MAHD;AAIrBC,MAAAA,qBAAqB,EAAE5B,iBAAiB,CAAC8B;AAJpB,KAAD,CAAtB;AAMD;;AAED,SAAOJ,eAAe,CAAC;AACrBd,IAAAA,MADqB;AAErBf,IAAAA,cAFqB;AAGrB8B,IAAAA,oBAAoB,EAAE,SAHD;AAIrBC,IAAAA,qBAAqB,EAAE;AAJF,GAAD,CAAtB;AAMD,CAlCM;AAoCP,MAAMG,uBAAuB,GAAG,CAAC,IAAD,EAAO,MAAP,EAAe,MAAf,CAAhC;;AAEA,MAAML,eAAe,GAAG,OAAO;AAC7Bd,EAAAA,MAD6B;AAE7Bf,EAAAA,cAF6B;AAG7B8B,EAAAA,oBAH6B;AAI7BC,EAAAA;AAJ6B,CAAP,KAKlB;AACJ;AACA;AACA,MAAIA,qBAAqB,KAAK,EAA9B,EAAkC;AAChC,WAAO,IAAP;AACD;;AAED,QAAMI,eAAe,GAAG5J,mBAAmB,CAACyH,cAAD,CAA3C;AACA,QAAMkB,mBAAmB,GAAG1Q,YAAU,CAAC,IAAD,EAAOwP,cAAP,CAAtC;AACA,QAAMoC,mBAAmB,GAAGL,qBAAqB,CAAC7K,QAAtB,CAA+B,GAA/B,IACvB,GAAE6K,qBAAsB,OADD,GAExBA,qBAFJ;AAIA,QAAMM,yBAAyB,GAAG7R,YAAU,CAAC4R,mBAAD,EAAsBpC,cAAtB,CAA5C;;AAEA,MAAI,CAACqC,yBAAyB,CAAC5Q,UAA1B,CAAqCyP,mBAArC,CAAL,EAAgE;AAC9DH,IAAAA,MAAM,CAAC5S,IAAP,CACG;AACP,EAAE2T,oBAAqB;AACvB,MAAMA,oBAAqB;AAC3B,EAAEC,qBAAsB;AACxB;AACA,EAAEI,eAAgB;AAClB,CAPI;AASA,WAAO,IAAP;AACD;;AAED,QAAMG,WAAW,GAAG,MAAMC,qBAAqB,CAACF,yBAAD,CAA/C;;AAEA,MAAIC,WAAW,KAAK,IAApB,EAA0B;AACxB;AACA;AACA;AAEA;AACA;AACA;AACA,QAAIR,oBAAoB,KAAK,SAA7B,EAAwC;AACtC,YAAMU,cAAc,GAClBC,YAAO,CAAClK,mBAAmB,CAAC8J,yBAAD,CAApB,CAAP,KAA4D,EAA5D,GACK;AACb,EAAEH,uBAAuB,CAAC5Q,IAAxB,CAA8B,GAA9B,CAAkC;AACpC,CAHQ,GAIK;AACb,CANM;AAQAyP,MAAAA,MAAM,CAAC5S,IAAP,CACG;AACT,oCAAoC2T,oBAAqB;AACzD,MAAMA,oBAAqB;AAC3B,EAAEC,qBAAsB;AACxB;AACA,EAAExJ,mBAAmB,CAAC8J,yBAAD,CAA4B;AACjD;AACA,EAAEF,eAAgB;AAClB,EAAEK,cAAe,EATX;AAWD;;AACD,WAAOH,yBAAP;AACD;;AAED,SAAOC,WAAP;AACD,CApED;;AAsEA,MAAMC,qBAAqB,GAAG,MAAOD,WAAP,IAAuB;AACnD,QAAMI,SAAS,GAAG,MAAMpH,sBAAsB,CAACgH,WAAD,EAAc;AAAE/G,IAAAA,cAAc,EAAE;AAAlB,GAAd,CAA9C;;AAEA,MAAImH,SAAS,IAAIA,SAAS,CAAC1K,MAAV,EAAjB,EAAqC;AACnC,WAAOsK,WAAP;AACD;;AAED,MAAII,SAAS,IAAIA,SAAS,CAACzK,WAAV,EAAjB,EAA0C;AACxC,UAAM0K,YAAY,GAAGnS,YAAU,CAC7B,SAD6B,EAE7B8R,WAAW,CAACpL,QAAZ,CAAqB,GAArB,IAA4BoL,WAA5B,GAA2C,GAAEA,WAAY,GAF5B,CAA/B;AAIA,UAAMM,uBAAuB,GAAG,MAAMC,aAAa,CAACF,YAAD,CAAnD;;AACA,QAAIC,uBAAuB,KAAK,IAAhC,EAAsC;AACpC,aAAO,IAAP;AACD;;AACD,WAAQ,GAAED,YAAa,IAAGC,uBAAwB,EAAlD;AACD;;AAED,QAAME,YAAY,GAAGvK,mBAAmB,CAAC+J,WAAD,CAAxC;AACA,QAAMS,SAAS,GAAGN,YAAO,CAACK,YAAD,CAAzB;;AAEA,MAAIC,SAAS,KAAK,EAAlB,EAAsB;AACpB,UAAMH,uBAAuB,GAAG,MAAMC,aAAa,CAACP,WAAD,CAAnD;;AACA,QAAIM,uBAAuB,KAAK,IAAhC,EAAsC;AACpC,aAAO,IAAP;AACD;;AACD,WAAQ,GAAEN,WAAY,IAAGM,uBAAwB,EAAjD;AACD;;AACD,SAAO,IAAP;AACD,CA9BD;;AAgCA,MAAMC,aAAa,GAAG,MAAOrK,OAAP,IAAmB;AACvC,QAAMyG,QAAQ,GAAG1G,mBAAmB,CAACC,OAAD,CAApC;AACA,QAAMwK,WAAW,GAAGvE,YAAO,CAACQ,QAAD,CAA3B;AACA,QAAMgE,YAAY,GAAGtD,aAAQ,CAACV,QAAD,CAA7B;AACA,QAAMiE,sBAAsB,GAAG,MAAM/G,sBAAsB,CAAC;AAC1DC,IAAAA,KAAK,EAAE8F,uBADmD;AAE1D7F,IAAAA,KAAK,EAAE,MAAO8G,kBAAP,IAA8B;AACnC,YAAMC,iBAAiB,GAAI,GAAEJ,WAAY,IAAGC,YAAa,IAAGE,kBAAmB,EAA/E;AACA,YAAMpL,KAAK,GAAG,MAAMuD,sBAAsB,CAAC8H,iBAAD,EAAoB;AAAE7H,QAAAA,cAAc,EAAE;AAAlB,OAApB,CAA1C;AACA,aAAOxD,KAAK,IAAIA,KAAK,CAACC,MAAN,EAAT,GAA0BmL,kBAA1B,GAA+C,IAAtD;AACD,KANyD;AAO1D7G,IAAAA,SAAS,EAAGyG,SAAD,IAAe7Q,OAAO,CAAC6Q,SAAD;AAPyB,GAAD,CAA3D;AASA,SAAOG,sBAAsB,IAAI,IAAjC;AACD,CAdD;;AChJO,MAAMG,mBAAmB,GAAI5S,SAAD,IAAe;AAChD,MAAIA,SAAS,CAACgB,UAAV,CAAqB,IAArB,CAAJ,EAAgC;AAC9B,WAAO,KAAP;AACD;;AACD,MAAIhB,SAAS,CAACgB,UAAV,CAAqB,KAArB,CAAJ,EAAiC;AAC/B,WAAO,KAAP;AACD,GAN+C;;;AAQhD,MAAI,eAAetC,IAAf,CAAoBsB,SAApB,CAAJ,EAAoC;AAClC,WAAO,KAAP;AACD;;AACD,SAAO,IAAP;AACD,CAZM;;ACGA,MAAM6S,mBAAmB,GAAG,CAAC;AAAEvC,EAAAA,MAAF;AAAUf,EAAAA,cAAV;AAA0BG,EAAAA;AAA1B,CAAD,KAAmD;AACpF,QAAMoD,wBAAwB,GAAG,EAAjC;AACA,QAAMpB,eAAe,GAAG5J,mBAAmB,CAACyH,cAAD,CAA3C;AAEA,QAAM;AAAEjO,IAAAA,OAAO,EAAEyR;AAAX,MAA8BrD,iBAApC;;AACA,MAAI,OAAOqD,cAAP,KAA0B,QAA1B,IAAsCA,cAAc,KAAK,IAA7D,EAAmE;AACjEzC,IAAAA,MAAM,CAAC5S,IAAP,CAAa;AACjB;AACA;AACA,EAAEqV,cAAe;AACjB;AACA,EAAErB,eAAgB;AAClB,CANI;AAOA,WAAOoB,wBAAP;AACD;;AAED5Q,EAAAA,MAAM,CAACC,IAAP,CAAY4Q,cAAZ,EAA4B3Q,OAA5B,CAAqCpC,SAAD,IAAe;AACjD,QAAI,CAAC4S,mBAAmB,CAAC5S,SAAD,CAAxB,EAAqC;AACnCsQ,MAAAA,MAAM,CAAC5S,IAAP,CAAa;AACnB;AACA;AACA,EAAEsC,SAAU;AACZ;AACA,EAAE0R,eAAgB;AAClB,CANM;AAOA;AACD;;AAED,UAAMsB,OAAO,GAAGD,cAAc,CAAC/S,SAAD,CAA9B;;AACA,QAAI,OAAOgT,OAAP,KAAmB,QAAvB,EAAiC;AAC/B1C,MAAAA,MAAM,CAAC5S,IAAP,CAAa;AACnB;AACA;AACA,EAAEsV,OAAQ;AACV;AACA,EAAEhT,SAAU;AACZ;AACA,EAAE0R,eAAgB;AAClB,CARM;AASA;AACD;;AACD,QAAI,CAACkB,mBAAmB,CAACI,OAAD,CAAxB,EAAmC;AACjC1C,MAAAA,MAAM,CAAC5S,IAAP,CAAa;AACnB;AACA;AACA,EAAEsV,OAAQ;AACV;AACA,EAAEhT,SAAU;AACZ;AACA,EAAE0R,eAAgB;AAClB,CARM;AASA;AACD;;AAED,QAAIuB,IAAJ;;AACA,QAAIjT,SAAS,CAAC,CAAD,CAAT,KAAiB,GAArB,EAA0B;AACxBiT,MAAAA,IAAI,GAAGjT,SAAP;AACD,KAFD,MAEO,IAAIA,SAAS,CAACgB,UAAV,CAAqB,IAArB,CAAJ,EAAgC;AACrCiS,MAAAA,IAAI,GAAGjT,SAAP;AACD,KAFM,MAEA;AACLiT,MAAAA,IAAI,GAAGjT,SAAP;AACD;;AAED,UAAMkT,EAAE,GAAGF,OAAX;AAEAF,IAAAA,wBAAwB,CAACG,IAAD,CAAxB,GAAiCC,EAAjC;AACD,GAlDD;AAoDA,SAAOJ,wBAAP;AACD,CArEM;;ACHP;AAKO,MAAMK,mBAAmB,GAAG,CAAC;AAClC7C,EAAAA,MADkC;AAElCf,EAAAA,cAFkC;AAGlC6D,EAAAA,WAHkC;AAIlC1D,EAAAA,iBAJkC;AAKlC2D,EAAAA,WAAW,EAAE;AAAEvC,IAAAA;AAAF,GALqB;AAMlCwC,EAAAA;AANkC,CAAD,KAO7B;AACJ,QAAMC,wBAAwB,GAAG,EAAjC;AAEA,QAAM7B,eAAe,GAAG5J,mBAAmB,CAACyH,cAAD,CAA3C;AACA,QAAM;AAAEiE,IAAAA,OAAO,EAAEC;AAAX,MAA8B/D,iBAApC,CAJI;;AAOJ,MAAI+D,cAAc,KAAK,KAAvB,EAA8B;AAC5B,WAAOF,wBAAP;AACD;;AAED,QAAMG,oBAAoB,GAAIV,OAAD,IAAa;AACxC,QAAIA,OAAO,CAAC,CAAD,CAAP,KAAe,GAAnB,EAAwB;AACtB,aAAOA,OAAP;AACD;;AACD,QAAIA,OAAO,CAAChS,UAAR,CAAmB,IAAnB,CAAJ,EAA8B;AAC5B,aAAQ,KAAI8P,2BAA4B,GAAEkC,OAAO,CAACjU,KAAR,CAAc,CAAd,CAAiB,EAA3D;AACD;;AACD,WAAQ,KAAI+R,2BAA4B,GAAEkC,OAAQ,EAAlD;AACD,GARD,CAXI;;;AAsBJ,MAAI,OAAOS,cAAP,KAA0B,QAA9B,EAAwC;AACtC,UAAMR,IAAI,GAAGG,WAAb;AACA,UAAMF,EAAE,GAAGQ,oBAAoB,CAACD,cAAD,CAA/B;AACAF,IAAAA,wBAAwB,CAACN,IAAD,CAAxB,GAAiCC,EAAjC;AACA,WAAOK,wBAAP;AACD;;AAED,MAAI,OAAOE,cAAP,KAA0B,QAA1B,IAAsCA,cAAc,KAAK,IAA7D,EAAmE;AACjEnD,IAAAA,MAAM,CAAC5S,IAAP,CAAa;AACjB;AACA;AACA,EAAE+V,cAAe;AACjB;AACA,EAAE/B,eAAgB;AAClB,CANI;AAOA,WAAO6B,wBAAP;AACD;;AAED,QAAMI,kBAAkB,GAAGzR,MAAM,CAACC,IAAP,CAAYsR,cAAZ,CAA3B;AACA,QAAMG,0BAA0B,GAAGD,kBAAkB,CAACE,IAAnB,CAAyB3D,GAAD,IAASA,GAAG,CAAClP,UAAJ,CAAe,GAAf,CAAjC,CAAnC;;AACA,MAAI4S,0BAAJ,EAAgC;AAC9B,UAAME,iCAAiC,GAAGH,kBAAkB,CAACE,IAAnB,CAAyB3D,GAAD,IAAS,CAACA,GAAG,CAAClP,UAAJ,CAAe,GAAf,CAAlC,CAA1C;;AACA,QAAI8S,iCAAJ,EAAuC;AACrC;AACAxD,MAAAA,MAAM,CAAC3S,KAAP,CAAc;AACpB;AACA;AACA,EAAE+T,eAAgB;AAClB,CAJM;AAKA,aAAO6B,wBAAP;AACD;AACF;;AAEDI,EAAAA,kBAAkB,CAACvR,OAAnB,CAA4BpC,SAAD,IAAe;AACxC,QAAI,CAAC4S,mBAAmB,CAAC5S,SAAD,CAAxB,EAAqC;AACnCsQ,MAAAA,MAAM,CAAC5S,IAAP,CAAa;AACnB;AACA;AACA,EAAEsC,SAAU;AACZ;AACA,EAAE0R,eAAgB;AAClB,CANM;AAOA;AACD;;AAED,UAAMvT,KAAK,GAAGsV,cAAc,CAACzT,SAAD,CAA5B;AACA,QAAIgT,OAAJ;;AAEA,QAAI,OAAO7U,KAAP,KAAiB,QAArB,EAA+B;AAC7B6U,MAAAA,OAAO,GAAGe,cAAc,CAAC5V,KAAD,EAAQmV,yBAAR,CAAxB;;AAEA,UAAI,CAACN,OAAL,EAAc;AACZ;AACD;;AACD,UAAI,OAAOA,OAAP,KAAmB,QAAvB,EAAiC;AAC/BA,QAAAA,OAAO,GAAGe,cAAc,CAACf,OAAD,EAAUM,yBAAV,CAAxB;;AACA,YAAI,CAACN,OAAL,EAAc;AACZ;AACD;AACF;AACF,KAZD,MAYO,IAAI,OAAO7U,KAAP,KAAiB,QAArB,EAA+B;AACpC6U,MAAAA,OAAO,GAAG7U,KAAV;AACD,KAFM,MAEA;AACLmS,MAAAA,MAAM,CAAC5S,IAAP,CAAa;AACnB;AACA;AACA,EAAEsV,OAAQ;AACV;AACA,EAAEhT,SAAU;AACZ;AACA,EAAE0R,eAAgB;AAClB,CARM;AASA;AACD;;AAED,QAAI,CAACkB,mBAAmB,CAACI,OAAD,CAAxB,EAAmC;AACjC1C,MAAAA,MAAM,CAAC5S,IAAP,CAAa;AACnB;AACA;AACA,EAAEsV,OAAQ;AACV;AACA,EAAEhT,SAAU;AACZ;AACA,EAAE0R,eAAgB;AAClB,CARM;AASA;AACD;;AAED,QAAIuB,IAAJ;;AACA,QAAIjT,SAAS,KAAK,GAAlB,EAAuB;AACrBiT,MAAAA,IAAI,GAAGG,WAAP;AACD,KAFD,MAEO,IAAIpT,SAAS,CAAC,CAAD,CAAT,KAAiB,GAArB,EAA0B;AAC/BiT,MAAAA,IAAI,GAAGjT,SAAP;AACD,KAFM,MAEA,IAAIA,SAAS,CAACgB,UAAV,CAAqB,IAArB,CAAJ,EAAgC;AACrCiS,MAAAA,IAAI,GAAI,GAAEG,WAAY,GAAEpT,SAAS,CAACjB,KAAV,CAAgB,CAAhB,CAAmB,EAA3C;AACD,KAFM,MAEA;AACLkU,MAAAA,IAAI,GAAI,GAAEG,WAAY,IAAGpT,SAAU,EAAnC;AACD;;AAED,UAAMkT,EAAE,GAAGQ,oBAAoB,CAACV,OAAD,CAA/B;AAEAO,IAAAA,wBAAwB,CAACN,IAAD,CAAxB,GAAiCC,EAAjC;AACD,GArED;AAuEA,SAAOK,wBAAP;AACD,CAtIM;;AAwIP,MAAMQ,cAAc,GAAG,CAACC,MAAD,EAASC,WAAT,KAAyB;AAC9C,QAAMC,UAAU,GAAGD,WAAW,CAAC5J,IAAZ,CAAkB6F,GAAD,IAAS8D,MAAM,CAAC1R,cAAP,CAAsB4N,GAAtB,CAA1B,CAAnB;;AACA,MAAIgE,UAAJ,EAAgB;AACd,WAAOF,MAAM,CAACE,UAAD,CAAb;AACD;;AACD,MAAIF,MAAM,CAAC1R,cAAP,CAAsB,SAAtB,CAAJ,EAAsC;AACpC,WAAO0R,MAAM,CAACG,OAAd;AACD;;AACD,SAAOtO,SAAP;AACD,CATD;;MC5HauO,2BAA2B,GAAG,OAAO;AAChD;AACA;AACA;AACA;AACA7W,EAAAA,QALgD;AAMhD8W,EAAAA,mBANgD;AAOhD9D,EAAAA,uBAPgD;AAQhD+D,EAAAA,wBAAwB,GAAG,wBARqB;AAUhDC,EAAAA,qCAAqC,GAAG,gBAAyB,YAVjB;AAWhD;AACAjB,EAAAA,yBAAyB,GAAG,CAAC,QAAD,EAAW,MAAX,EAAmB,SAAnB,CAZoB;AAahDkB,EAAAA,uBAAuB,GAAG,IAbsB;AAchDC,EAAAA,qBAAqB,GAAG,IAdwB;AAehDC,EAAAA,uBAAuB,GAAG,IAfsB;AAgBhDlF,EAAAA,uBAAuB,GAAG;AAhBsB,CAAP,KAkBzClD,oBAAoB,CAClB,YAAY;AACV,QAAMgE,MAAM,GAAGhT,YAAY,CAAC;AAAEC,IAAAA;AAAF,GAAD,CAA3B;AAEA8W,EAAAA,mBAAmB,GAAGpN,8BAA8B,CAACoN,mBAAD,CAApD;;AACA,MAAI,OAAO9D,uBAAP,KAAmC,WAAvC,EAAoD;AAClDA,IAAAA,uBAAuB,GAAG8D,mBAA1B;AACD,GAFD,MAEO;AACL9D,IAAAA,uBAAuB,GAAGtJ,8BAA8B,CAACsJ,uBAAD,CAAxD;AACD;;AAED,QAAMoE,qBAAqB,GAAG5U,YAAU,CAAC,gBAAD,EAAmBsU,mBAAnB,CAAxC;AACA,QAAMO,yBAAyB,GAAG7U,YAAU,CAAC,gBAAD,EAAmBwQ,uBAAnB,CAA5C;AAEA,QAAMjP,OAAO,GAAG,EAAhB;AACA,QAAMO,MAAM,GAAG,EAAf;AACA,QAAMgT,IAAI,GAAG,EAAb;;AAEA,QAAMC,iBAAiB,GAAG,CAACvF,cAAD,EAAiBwF,sBAAjB,KAA4C;AACpE,QAAIxF,cAAc,IAAIsF,IAAtB,EAA4B;AAC1BA,MAAAA,IAAI,CAACtF,cAAD,CAAJ,CAAqB2B,IAArB,CAA0B6D,sBAA1B;AACD,KAFD,MAEO;AACLF,MAAAA,IAAI,CAACtF,cAAD,CAAJ,GAAuB,CAACwF,sBAAD,CAAvB;AACD;AACF,GAND;;AAQA,QAAMC,aAAa,GAAG,CAACzF,cAAD,EAAiBwF,sBAAjB,KAA4C;AAChE,WAAOxF,cAAc,IAAIsF,IAAlB,IAA0BA,IAAI,CAACtF,cAAD,CAAJ,CAAqBpL,QAArB,CAA8B4Q,sBAA9B,CAAjC;AACD,GAFD;;AAIA,QAAMjJ,KAAK,GAAG,OAAO;AACnByD,IAAAA,cADmB;AAEnB6D,IAAAA,WAFmB;AAGnB1D,IAAAA,iBAHmB;AAInBqF,IAAAA,sBAJmB;AAKnBE,IAAAA,yBALmB;AAMnBC,IAAAA;AANmB,GAAP,KAOR;AACJ,UAAMC,iBAAiB,CAAC;AACtB5F,MAAAA,cADsB;AAEtBG,MAAAA,iBAFsB;AAGtBwF,MAAAA;AAHsB,KAAD,CAAvB;AAKA,UAAME,YAAY,CAAC;AACjB7F,MAAAA,cADiB;AAEjB6D,MAAAA,WAFiB;AAGjB1D,MAAAA,iBAHiB;AAIjBqF,MAAAA,sBAJiB;AAKjBE,MAAAA;AALiB,KAAD,CAAlB;AAOD,GApBD;;AAsBA,QAAMG,YAAY,GAAG,OAAO;AAC1B7F,IAAAA,cAD0B;AAE1B6D,IAAAA,WAF0B;AAG1B1D,IAAAA,iBAH0B;AAI1BqF,IAAAA,sBAJ0B;AAK1BE,IAAAA;AAL0B,GAAP,KAMf;AACJ,UAAM5B,WAAW,GAAGgC,kBAAkB,CAAC;AACrC9F,MAAAA,cADqC;AAErC6D,MAAAA,WAFqC;AAGrC2B,MAAAA;AAHqC,KAAD,CAAtC;AAMA,UAAMO,gBAAgB,CAAC;AACrB/F,MAAAA,cADqB;AAErB6D,MAAAA,WAFqB;AAGrB1D,MAAAA,iBAHqB;AAIrB2D,MAAAA;AAJqB,KAAD,CAAtB;;AAOA,QAAIqB,uBAAuB,IAAI,aAAahF,iBAA5C,EAA+D;AAC7D,YAAMoD,wBAAwB,GAAGD,mBAAmB,CAAC;AACnDvC,QAAAA,MADmD;AAEnDf,QAAAA,cAFmD;AAGnD6D,QAAAA,WAHmD;AAInD1D,QAAAA,iBAJmD;AAKnD2D,QAAAA;AALmD,OAAD,CAApD;AAQA,YAAM;AAAEkC,QAAAA,aAAF;AAAiBzE,QAAAA;AAAjB,UAAiDuC,WAAvD;AACAnR,MAAAA,MAAM,CAACC,IAAP,CAAY2Q,wBAAZ,EAAsC1Q,OAAtC,CAA+C6Q,IAAD,IAAU;AACtD,cAAMC,EAAE,GAAGJ,wBAAwB,CAACG,IAAD,CAAnC;;AAEA,YAAIsC,aAAJ,EAAmB;AACjBC,UAAAA,wBAAwB,CAAC;AAAEvC,YAAAA,IAAF;AAAQC,YAAAA;AAAR,WAAD,CAAxB;AACD,SAFD,MAEO;AACL,gBAAMuC,QAAQ,GACZvC,EAAE,CAAC,CAAD,CAAF,KAAU,GAAV,GACIA,EADJ,GAEK,KAAIpC,2BAA4B,GAAEoC,EAAE,CAAClS,UAAH,CAAc,IAAd,IAAsBkS,EAAE,CAACnU,KAAH,CAAS,CAAT,CAAtB,GAAoCmU,EAAG,EAHhF;AAKAwC,UAAAA,sBAAsB,CAAC;AACrBC,YAAAA,KAAK,EAAG,KAAI7E,2BAA4B,EADnB;AAErBmC,YAAAA,IAFqB;AAGrBC,YAAAA,EAAE,EAAEuC;AAHiB,WAAD,CAAtB,CANK;AAaL;AACA;;AACA,cAAIxC,IAAI,KAAK,IAAT,IAAiBC,EAAE,KAAK,IAA5B,EAAkC;AAChCwC,YAAAA,sBAAsB,CAAC;AACrBC,cAAAA,KAAK,EAAG,KAAI7E,2BAA4B,EADnB;AAErBmC,cAAAA,IAAI,EAAG,KAAInC,2BAA4B,EAFlB;AAGrBoC,cAAAA,EAAE,EAAG,KAAIpC,2BAA4B;AAHhB,aAAD,CAAtB;AAKD,WAND,MAMO,IAAImC,IAAI,KAAK,GAAT,IAAgBC,EAAE,KAAK,GAA3B,EAAgC;AACrCwC,YAAAA,sBAAsB,CAAC;AACrBC,cAAAA,KAAK,EAAG,KAAI7E,2BAA4B,EADnB;AAErBmC,cAAAA,IAAI,EAAG,KAAInC,2BAA4B,EAFlB;AAGrBoC,cAAAA,EAAE,EAAG,KAAIpC,2BAA4B;AAHhB,aAAD,CAAtB;AAKD;AACF;AACF,OAlCD;AAmCD;;AAED,QAAI2D,qBAAJ,EAA2B;AACzB,YAAM;AAAEc,QAAAA,aAAF;AAAiBzE,QAAAA;AAAjB,UAAiDuC,WAAvD,CADyB;;AAIzB,UAAIkC,aAAJ,EAAmB;AACjBC,QAAAA,wBAAwB,CAAC;AACvBvC,UAAAA,IAAI,EAAG,GAAEG,WAAY,GADE;AAEvBF,UAAAA,EAAE,EAAG,KAAIpC,2BAA4B;AAFd,SAAD,CAAxB;AAID,OALD;AAAA,WAOK;AACH4E,UAAAA,sBAAsB,CAAC;AACrBC,YAAAA,KAAK,EAAG,KAAI7E,2BAA4B,EADnB;AAErBmC,YAAAA,IAAI,EAAG,GAAEG,WAAY,GAFA;AAGrBF,YAAAA,EAAE,EAAG,KAAIpC,2BAA4B;AAHhB,WAAD,CAAtB;AAKD;AACF;;AAED,QAAI0D,uBAAuB,IAAI,aAAa9E,iBAA5C,EAA+D;AAC7D,YAAM6D,wBAAwB,GAAGJ,mBAAmB,CAAC;AACnD7C,QAAAA,MADmD;AAEnDf,QAAAA,cAFmD;AAGnD6D,QAAAA,WAHmD;AAInD1D,QAAAA,iBAJmD;AAKnD2D,QAAAA,WALmD;AAMnDC,QAAAA;AANmD,OAAD,CAApD;AASA,YAAM;AACJsC,QAAAA,cADI;AAEJC,QAAAA,mBAFI;AAGJN,QAAAA,aAHI;AAIJzE,QAAAA,2BAJI;AAMJ;;AANI,UAOFuC,WAPJ;;AASA,UAAIkC,aAAa,IAAId,qBAArB,EAA4C;AAC1CvS,QAAAA,MAAM,CAACC,IAAP,CAAYoR,wBAAZ,EAAsCnR,OAAtC,CAA+C6Q,IAAD,IAAU;AACtD,gBAAMC,EAAE,GAAGK,wBAAwB,CAACN,IAAD,CAAnC;AACAuC,UAAAA,wBAAwB,CAAC;AACvBvC,YAAAA,IADuB;AAEvBC,YAAAA;AAFuB,WAAD,CAAxB;AAID,SAND;AAOD,OARD,MAQO,IAAIqC,aAAJ,EAAmB,CAAnB,MAEA;AACLrT,QAAAA,MAAM,CAACC,IAAP,CAAYoR,wBAAZ,EAAsCnR,OAAtC,CAA+C6Q,IAAD,IAAU;AACtD,gBAAMC,EAAE,GAAGK,wBAAwB,CAACN,IAAD,CAAnC,CADsD;;AAItD,cAAI2C,cAAJ,EAAoB;AAClB;AACA;AACA,gBAAIX,yBAAyB,CAAC/O,IAA1B,KAAmCkN,WAAvC,EAAoD;AAClDsC,cAAAA,sBAAsB,CAAC;AACrBC,gBAAAA,KAAK,EAAG,KAAI7E,2BAA4B,EADnB;AAErBmC,gBAAAA,IAFqB;AAGrBC,gBAAAA;AAHqB,eAAD,CAAtB;;AAKA,kBAAID,IAAI,KAAKG,WAAT,IAAwBH,IAAI,IAAI3R,OAAR,KAAoB,KAAhD,EAAuD;AACrDkU,gBAAAA,wBAAwB,CAAC;AAAEvC,kBAAAA,IAAF;AAAQC,kBAAAA;AAAR,iBAAD,CAAxB;AACD;AACF,aATD,MASO;AACLsC,cAAAA,wBAAwB,CAAC;AAAEvC,gBAAAA,IAAF;AAAQC,gBAAAA;AAAR,eAAD,CAAxB;AACD;AACF,WAfD,MAeO;AACLwC,YAAAA,sBAAsB,CAAC;AACrBC,cAAAA,KAAK,EAAG,KAAI7E,2BAA4B,EADnB;AAErBmC,cAAAA,IAFqB;AAGrBC,cAAAA;AAHqB,aAAD,CAAtB;AAKD,WAzBqD;AA4BtD;;;AACA,cAAI0C,cAAJ,EAAoB;AAClB;AACD,WA/BqD;AAkCtD;AACA;;;AACAF,UAAAA,sBAAsB,CAAC;AAAEC,YAAAA,KAAK,EAAG,KAAIE,mBAAoB,EAAlC;AAAqC5C,YAAAA,IAArC;AAA2CC,YAAAA;AAA3C,WAAD,CAAtB;AACD,SArCD;AAsCD;AACF;AACF,GA7JD;;AA+JA,QAAMoC,gBAAgB,GAAG,OAAO;AAC9B/F,IAAAA,cAD8B;AAE9B6D,IAAAA,WAF8B;AAG9B1D,IAAAA,iBAH8B;AAI9B2D,IAAAA,WAAW,EAAE;AACXuC,MAAAA,cADW;AAEXC,MAAAA,mBAFW;AAGXN,MAAAA,aAHW;AAIXO,MAAAA,gBAJW;AAKXrF,MAAAA,mBALW;AAMXsF,MAAAA;AANW;AAJiB,GAAP,KAYnB;AACJ,UAAMC,IAAI,GAAGT,aAAa,IAAIO,gBAA9B;AACA,QAAIE,IAAI,IAAI,CAACvB,qBAAb,EAAoC;AAEpC,UAAM5C,WAAW,GAAG,MAAMV,kBAAkB,CAAC;AAC3C5B,MAAAA,cAD2C;AAE3CG,MAAAA,iBAF2C;AAG3CY,MAAAA;AAH2C,KAAD,CAA5C,CAJI;AAWJ;AACA;;AACA,QAAIuB,WAAW,KAAK,IAApB,EAA0B;AAE1B,UAAMF,mBAAmB,GAAGtO,kBAAgB,CAACwO,WAAD,EAActB,uBAAd,CAA5C;AACA,UAAM0C,IAAI,GAAGG,WAAb;AACA,UAAMF,EAAE,GAAI,KAAIvB,mBAAoB,EAApC;;AAEA,QAAIiE,cAAJ,EAAoB;AAClBJ,MAAAA,wBAAwB,CAAC;AAAEvC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,OAAD,CAAxB;AACD,KAFD,MAEO;AACLwC,MAAAA,sBAAsB,CAAC;AAAEC,QAAAA,KAAK,EAAG,KAAIE,mBAAoB,EAAlC;AAAqC5C,QAAAA,IAArC;AAA2CC,QAAAA;AAA3C,OAAD,CAAtB;AACD;;AACD,QAAIzC,mBAAmB,KAAKsF,2BAA5B,EAAyD;AACvDL,MAAAA,sBAAsB,CAAC;AAAEC,QAAAA,KAAK,EAAG,KAAIE,mBAAoB,EAAlC;AAAqC5C,QAAAA,IAArC;AAA2CC,QAAAA;AAA3C,OAAD,CAAtB;AACD;AACF,GAvCD;;AAyCA,QAAMiC,iBAAiB,GAAG,OAAO;AAC/B5F,IAAAA,cAD+B;AAE/BG,IAAAA,iBAF+B;AAG/BwF,IAAAA;AAH+B,GAAP,KAIpB;AACJ,UAAMe,aAAa,GAAG,EAAtB;AAEA,UAAM;AAAEC,MAAAA,YAAY,GAAG;AAAjB,QAAwBxG,iBAA9B,CAHI;;AAKJ,UAAM;AAAEyG,MAAAA,oBAAoB,GAAG;AAAzB,QAAgCzG,iBAAtC;AACAxN,IAAAA,MAAM,CAACC,IAAP,CAAY+T,YAAZ,EAA0B9T,OAA1B,CAAmCoO,cAAD,IAAoB;AACpDyF,MAAAA,aAAa,CAACzF,cAAD,CAAb,GAAgC;AAC9BnS,QAAAA,IAAI,EAAE,YADwB;AAE9B+X,QAAAA,UAAU,EAAE5F,cAAc,IAAI2F,oBAFA;AAG9BE,QAAAA,cAAc,EAAEH,YAAY,CAAC1F,cAAD;AAHE,OAAhC;AAKD,KAND;AAQA,UAAM;AAAE8F,MAAAA,gBAAgB,GAAG;AAArB,QAA4B5G,iBAAlC;AACA,UAAM;AAAE6G,MAAAA,oBAAoB,GAAG;AAAzB,QAAgC7G,iBAAtC;AACAxN,IAAAA,MAAM,CAACC,IAAP,CAAYmU,gBAAZ,EAA8BlU,OAA9B,CAAuCoO,cAAD,IAAoB;AACxDyF,MAAAA,aAAa,CAACzF,cAAD,CAAb,GAAgC;AAC9BnS,QAAAA,IAAI,EAAE,gBADwB;AAE9BgY,QAAAA,cAAc,EAAEC,gBAAgB,CAAC9F,cAAD,CAFF;AAG9B4F,QAAAA,UAAU,EACR5F,cAAc,IAAI+F,oBAAlB,IACAA,oBAAoB,CAAC/F,cAAD,CAApB,CAAqCgG;AALT,OAAhC;AAOD,KARD;AAUA,UAAMC,gBAAgB,GAAGlH,cAAc,KAAKoF,qBAA5C;;AACA,QAAIO,sBAAsB,IAAIuB,gBAA9B,EAAgD;AAC9C,YAAM;AAAEC,QAAAA,eAAe,GAAG;AAApB,UAA2BhH,iBAAjC;AACAxN,MAAAA,MAAM,CAACC,IAAP,CAAYuU,eAAZ,EAA6BtU,OAA7B,CAAsCoO,cAAD,IAAoB;AACvD,YAAI,CAACyF,aAAa,CAAC3T,cAAd,CAA6BkO,cAA7B,CAAL,EAAmD;AACjDyF,UAAAA,aAAa,CAACzF,cAAD,CAAb,GAAgC;AAC9BnS,YAAAA,IAAI,EAAE,eADwB;AAE9BgY,YAAAA,cAAc,EAAEK,eAAe,CAAClG,cAAD;AAFD,WAAhC;AAID;AACF,OAPD;AAQD;;AAED,UAAM9G,OAAO,CAACiN,GAAR,CACJzU,MAAM,CAACC,IAAP,CAAY8T,aAAZ,EAA2BW,GAA3B,CAA+B,MAAOpG,cAAP,IAA0B;AACvD,YAAMqG,UAAU,GAAGZ,aAAa,CAACzF,cAAD,CAAhC;AACA,YAAMsG,eAAe,CAAC;AACpBvH,QAAAA,cADoB;AAEpBG,QAAAA,iBAFoB;AAGpBc,QAAAA,cAHoB;AAIpBuG,QAAAA,cAAc,EAAEF,UAAU,CAACxY,IAJP;AAKpB2Y,QAAAA,oBAAoB,EAAEH,UAAU,CAACT,UALb;AAMpBa,QAAAA,wBAAwB,EAAEJ,UAAU,CAACR;AANjB,OAAD,CAArB;AAQD,KAVD,CADI,CAAN;AAaD,GAxDD;;AA0DA,QAAMS,eAAe,GAAG,OAAO;AAC7BvH,IAAAA,cAD6B;AAE7BG,IAAAA,iBAF6B;AAG7Bc,IAAAA,cAH6B;AAI7BuG,IAAAA,cAJ6B;AAK7BC,IAAAA,oBAL6B;AAM7BC,IAAAA;AAN6B,GAAP,KAOlB;AACJ,UAAMC,cAAc,GAAG,MAAMC,cAAc,CAAC;AAC1C5H,MAAAA,cAD0C;AAE1CiB,MAAAA;AAF0C,KAAD,CAA3C;;AAIA,QAAI,CAAC0G,cAAL,EAAqB;AACnB5G,MAAAA,MAAM,CAAC0G,oBAAoB,GAAG,OAAH,GAAa,MAAlC,CAAN,CAAiD;AAC3D,EACEA,oBAAoB,GACf,2BAA0BD,cAAe,GAD1B,GAEf,iBAAgBA,cAAe,GACrC;AACD,MAAMA,cAAe;AACrB,EAAEvG,cAAe,IAAGyG,wBAAyB;AAC7C;AACA,EAAEvH,iBAAiB,CAACxJ,IAAK,IAAGwJ,iBAAiB,CAACC,OAAQ;AACtD;AACA,EAAE7H,mBAAmB,CAACyH,cAAD,CAAiB;AACtC,KAZU;AAaA;AACD;;AAED,UAAM;AACJA,MAAAA,cAAc,EAAE6H,wBADZ;AAEJ1H,MAAAA,iBAAiB,EAAE2H;AAFf,QAGFH,cAHJ;;AAKA,QAAIlC,aAAa,CAACoC,wBAAD,EAA2B7H,cAA3B,CAAjB,EAA6D;AAC3D;AACD;;AACDuF,IAAAA,iBAAiB,CAACsC,wBAAD,EAA2B7H,cAA3B,CAAjB;AACA,UAAMzD,KAAK,CAAC;AACVyD,MAAAA,cAAc,EAAE6H,wBADN;AAEVhE,MAAAA,WAAW,EAAE5C,cAFH;AAGVd,MAAAA,iBAAiB,EAAE2H,2BAHT;AAIVtC,MAAAA,sBAAsB,EAAExF,cAJd;AAKV0F,MAAAA,yBAAyB,EAAEvF;AALjB,KAAD,CAAX;AAOD,GA7CD;;AA+CA,QAAM2F,kBAAkB,GAAG,CAAC;AAAE9F,IAAAA,cAAF;AAAkB6D,IAAAA,WAAlB;AAA+B2B,IAAAA;AAA/B,GAAD,KAA6D;AACtF,UAAMa,cAAc,GAAGb,sBAAsB,KAAKH,yBAAlD;AAEA,UAAM0C,iBAAiB,GAAGvC,sBAAsB,KAAKJ,qBAArD;AAEA,UAAM4C,2BAA2B,GAAGxX,YAAU,CAAC,IAAD,EAAOgV,sBAAP,CAA9C;AAEA,UAAMc,mBAAmB,GAAGD,cAAc,GACrC,GAAE5G,aAAa,CAACuB,uBAAuB,CAACxR,KAAxB,CAA8B,CAA9B,EAAiC,CAAC,CAAlC,CAAD,CAAuC,GADjB,GAEtCsE,kBAAgB,CAACkU,2BAAD,EAA8BhH,uBAA9B,CAFpB;AAIA,UAAMgF,aAAa,GAAGhG,cAAc,KAAKqF,yBAAzC;AAEA,UAAMkB,gBAAgB,GAAGvG,cAAc,KAAKoF,qBAA5C;AAEA,UAAMlE,mBAAmB,GAAG1Q,YAAU,CAAC,IAAD,EAAOwP,cAAP,CAAtC;AAEA,QAAIwG,2BAAJ;;AACA,QAAID,gBAAgB,IAAI,CAACP,aAAzB,EAAwC;AACtCQ,MAAAA,2BAA2B,GAAGwB,2BAA9B;AACD,KAFD,MAEO;AACLxB,MAAAA,2BAA2B,GAAI,GAAEwB,2BAA4B,gBAAenE,WAAY,GAAxF;AACD;;AAED,UAAMtC,2BAA2B,GAAGzN,kBAAgB,CAClDoN,mBADkD,EAElDF,uBAFkD,CAApD;AAKA,WAAO;AACLqF,MAAAA,cADK;AAEL0B,MAAAA,iBAFK;AAGLzB,MAAAA,mBAHK;AAILN,MAAAA,aAJK;AAKLO,MAAAA,gBALK;AAMLrF,MAAAA,mBANK;AAOLsF,MAAAA,2BAPK;AAQLjF,MAAAA;AARK,KAAP;AAUD,GAvCD;;AAyCA,QAAM0E,wBAAwB,GAAG,CAAC;AAAEvC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD,KAAkB;AACjD;AACA;AACA;AACA,QAAID,IAAI,KAAKC,EAAb,EAAiB;AACf;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACU,UAAID,IAAI,KAAK,GAAb,EAAkB;AACnB;;AAED3R,IAAAA,OAAO,CAAC2R,IAAD,CAAP,GAAgBC,EAAhB;AACD,GAnBD;;AAqBA,QAAMwC,sBAAsB,GAAG,CAAC;AAAEC,IAAAA,KAAF;AAAS1C,IAAAA,IAAT;AAAeC,IAAAA;AAAf,GAAD,KAAyB;AACtDrR,IAAAA,MAAM,CAAC8T,KAAD,CAAN,GAAgB,EACd,IAAI9T,MAAM,CAAC8T,KAAD,CAAN,IAAiB,EAArB,CADc;AAEd,OAAC1C,IAAD,GAAQC;AAFM,KAAhB;AAID,GALD;;AAOA,QAAMsE,iBAAiB,GAAG,EAA1B;;AACA,QAAML,cAAc,GAAG,CAAC;AAAE5H,IAAAA,cAAF;AAAkBiB,IAAAA;AAAlB,GAAD,KAAwC;AAC7D,QAAIjB,cAAc,IAAIiI,iBAAlB,KAAwC,KAA5C,EAAmD;AACjDA,MAAAA,iBAAiB,CAACjI,cAAD,CAAjB,GAAoC,EAApC;AACD;;AACD,QAAIiB,cAAc,IAAIgH,iBAAiB,CAACjI,cAAD,CAAvC,EAAyD;AACvD,aAAOiI,iBAAiB,CAACjI,cAAD,CAAjB,CAAkCiB,cAAlC,CAAP;AACD;;AACD,UAAMiH,iBAAiB,GAAGpH,iBAAiB,CAAC;AAC1CC,MAAAA,MAD0C;AAE1CC,MAAAA,uBAF0C;AAG1Cf,MAAAA,uBAH0C;AAI1CD,MAAAA,cAJ0C;AAK1CiB,MAAAA;AAL0C,KAAD,CAA3C;AAOAgH,IAAAA,iBAAiB,CAACjI,cAAD,CAAjB,CAAkCiB,cAAlC,IAAoDiH,iBAApD;AACA,WAAOA,iBAAP;AACD,GAhBD;;AAkBA,QAAMC,wBAAwB,GAAG,MAAMpI,eAAe,CACpDqF,qBADoD,EAEpDnF,uBAFoD,CAAtD;AAKA,QAAMD,cAAc,GAAGoF,qBAAvB;AACA,QAAMI,sBAAsB,GAAGJ,qBAA/B;AACAG,EAAAA,iBAAiB,CAACvF,cAAD,EAAiBwF,sBAAjB,CAAjB;AAEA,QAAM3B,WAAW,GAAGsE,wBAAwB,CAACxR,IAA7C;;AACA,MAAI,OAAOkN,WAAP,KAAuB,QAA3B,EAAqC;AACnC,UAAMtH,KAAK,CAAC;AACVyD,MAAAA,cADU;AAEV6D,MAAAA,WAAW,EAAEsE,wBAAwB,CAACxR,IAF5B;AAGVwJ,MAAAA,iBAAiB,EAAEgI,wBAHT;AAIV3C,MAAAA,sBAJU;AAKVE,MAAAA,yBAAyB,EAAE,IALjB;AAMVC,MAAAA,sBAAsB,EAAEX;AANd,KAAD,CAAX;AAQD,GATD,MASO;AACLjE,IAAAA,MAAM,CAAC5S,IAAP,CAAa;AACrB;AACA,EAAE0V,WAAY;AACd;AACA,EAAE7D,cAAe,EAJT;AAKD,GArdS;;;AAwdVrN,EAAAA,MAAM,CAACC,IAAP,CAAYN,MAAZ,EAAoBO,OAApB,CAA6B8N,GAAD,IAAS;AACnC,UAAMyH,aAAa,GAAG9V,MAAM,CAACqO,GAAD,CAA5B;AACAhO,IAAAA,MAAM,CAACC,IAAP,CAAYwV,aAAZ,EAA2BvV,OAA3B,CAAoCwV,eAAD,IAAqB;AACtD,UACEA,eAAe,IAAItW,OAAnB,IACAA,OAAO,CAACsW,eAAD,CAAP,KAA6BD,aAAa,CAACC,eAAD,CAF5C,EAGE;AACA,eAAOD,aAAa,CAACC,eAAD,CAApB;AACD;AACF,KAPD;;AAQA,QAAI1V,MAAM,CAACC,IAAP,CAAYwV,aAAZ,EAA2BvY,MAA3B,KAAsC,CAA1C,EAA6C;AAC3C,aAAOyC,MAAM,CAACqO,GAAD,CAAb;AACD;AACF,GAbD,EAxdU;AAweV;AACA;;AACA,MAAI9O,SAAS,GAAG;AAAEE,IAAAA,OAAF;AAAWO,IAAAA;AAAX,GAAhB;;AACA,MAAIyS,wBAAJ,EAA8B;AAC5B;AACA;AACA;AACA;AACA,UAAMuD,mBAAmB,GAAG9X,YAAU,CAAC,mBAAD,EAAsBsU,mBAAtB,CAAtC;AACA,UAAMyD,gBAAgB,GAAG/X,YAAU,CAACuU,wBAAD,EAA2BD,mBAA3B,CAAnC;AACAjT,IAAAA,SAAS,GAAGmD,aAAa,CAACnD,SAAD,EAAYyW,mBAAZ,EAAiCC,gBAAjC,CAAzB;AACD;;AACD1W,EAAAA,SAAS,GAAGuE,aAAa,CAACvE,SAAD,CAAzB;AAEA,SAAOA,SAAP;AACD,CAxfiB,EAyflB;AAAEoL,EAAAA,iBAAiB,EAAE,IAArB;AAA2BC,EAAAA,wBAAwB,EAAE;AAArD,CAzfkB;;MCjCTsL,oBAAoB,GAAG,MAAOC,iBAAP,IAA6B;AAC/D,QAAMC,gBAAgB,GAAG7Q,yBAAyB,CAAC4Q,iBAAD,CAAlD;AACA,QAAME,oBAAoB,GAAG,MAAM5J,QAAQ,CAAC2J,gBAAD,CAA3C;AACA,QAAM7W,SAAS,GAAGuN,IAAI,CAACC,KAAL,CAAWsJ,oBAAX,CAAlB;AACA,SAAO9W,SAAP;AACD;;ACPM,MAAM+W,4BAA4B,GAAG,CAAC;AAAE7W,EAAAA,OAAO,GAAG;AAAZ,CAAD,KAAsB;AAChE,QAAM8W,KAAK,GAAG,EAAd;AAEAlW,EAAAA,MAAM,CAACC,IAAP,CAAYb,OAAZ,EAAqBc,OAArB,CAA8BmD,SAAD,IAAe;AAC1C,UAAMC,WAAW,GAAGlE,OAAO,CAACiE,SAAD,CAA3B;AAEA,QAAI2K,GAAJ;;AACA,QAAI3K,SAAS,CAACkB,QAAV,CAAmB,GAAnB,CAAJ,EAA6B;AAC3ByJ,MAAAA,GAAG,GAAI,GAAE3K,SAAU,GAAnB;AACD,KAFD,MAEO;AACL2K,MAAAA,GAAG,GAAG3K,SAAN;AACD;;AAED,UAAM8S,gBAAgB,GAAG,OAAO7S,WAAP,KAAuB,QAAvB,GAAkC,CAACA,WAAD,CAAlC,GAAkDA,WAA3E;AACA,UAAM8S,iBAAiB,GAAGD,gBAAgB,CAACzB,GAAjB,CAAsBpR,WAAD,IAAiB;AAC9D,UAAIA,WAAW,CAACiB,QAAZ,CAAqB,GAArB,CAAJ,EAA+B;AAC7B,eAAQ,GAAEjB,WAAY,GAAtB;AACD;;AACD,aAAOA,WAAP;AACD,KALyB,CAA1B;;AAOA,QAAI0K,GAAG,IAAIkI,KAAX,EAAkB;AAChBA,MAAAA,KAAK,CAAClI,GAAD,CAAL,GAAa,CAAC,GAAGkI,KAAK,CAAClI,GAAD,CAAT,EAAgB,GAAGoI,iBAAnB,CAAb;AACD,KAFD,MAEO;AACLF,MAAAA,KAAK,CAAClI,GAAD,CAAL,GAAaoI,iBAAb;AACD;AACF,GAvBD;AAyBA,SAAOF,KAAP;AACD,CA7BM;;MCUMG,2BAA2B,GAAG,OACzCC,eAAe,GAAG,EADuB,EAEzC;AACEnE,EAAAA,mBADF;AAGEoE,EAAAA,aAAa,GAAG,IAHlB;AAGwB;AACtBnE,EAAAA,wBAAwB,GAAG,wBAJ7B;AAKEoE,EAAAA,gBAAgB,GAAG,IALrB;AAOEC,EAAAA,YAAY,GAAG,KAPjB;AAOwB;AACtBC,EAAAA,eAAe,GAAG,IARpB;AASEC,EAAAA,oBAAoB,GAAG;AATzB,CAFyC,KAczCvM,oBAAoB,CAClB,YAAY;AACV+H,EAAAA,mBAAmB,GAAGpN,8BAA8B,CAACoN,mBAAD,CAApD;;AAEA,MAAImE,eAAe,CAACpZ,MAAhB,KAA2B,CAA/B,EAAkC;AAChCnB,IAAAA,OAAO,CAACP,IAAR,CAAc,iEAAd;AACD;;AAED,QAAMob,UAAU,GAAG,MAAMpP,OAAO,CAACiN,GAAR,CAAY6B,eAAZ,CAAzB;AAEA,QAAMpX,SAAS,GAAG0X,UAAU,CAACC,MAAX,CAAkB,CAACC,QAAD,EAAWC,OAAX,KAAuB;AACzD,WAAOhY,oBAAoB,CAAC+X,QAAD,EAAWC,OAAX,CAA3B;AACD,GAFiB,EAEf,EAFe,CAAlB;;AAIA,MAAIR,aAAJ,EAAmB;AACjB,UAAMR,gBAAgB,GAAGlY,YAAU,CAACuU,wBAAD,EAA2BD,mBAA3B,CAAnC;AACA,UAAMlF,SAAS,CAAC8I,gBAAD,EAAmBtJ,IAAI,CAACuK,SAAL,CAAe9X,SAAf,EAA0B,IAA1B,EAAgC,IAAhC,CAAnB,CAAf;;AACA,QAAIsX,gBAAJ,EAAsB;AACpBza,MAAAA,OAAO,CAACR,IAAR,CAAc,MAAKqK,mBAAmB,CAACmQ,gBAAD,CAAmB,EAAzD;AACD;AACF;;AACD,MAAIU,YAAJ,EAAkB;AAChB,UAAMQ,eAAe,GAAGpZ,YAAU,CAAC,iBAAD,EAAoBsU,mBAApB,CAAlC;;AACA,QAAI;AACF,YAAM+E,QAAQ,GAAG;AACfC,QAAAA,eAAe,EAAE;AACfpZ,UAAAA,OAAO,EAAE,GADM;AAEfmY,UAAAA,KAAK,EAAE,EACL,IAAIS,oBAAoB,GAAG;AAAE,oBAAM,CAAC,KAAD;AAAR,aAAH,GAAuB,EAA/C,CADK;AAEL,eAAGV,4BAA4B,CAAC/W,SAAD;AAF1B;AAFQ;AADF,OAAjB;AASA,YAAM+N,SAAS,CAACgK,eAAD,EAAkBxK,IAAI,CAACuK,SAAL,CAAeE,QAAf,EAAyB,IAAzB,EAA+B,IAA/B,CAAlB,CAAf;;AACA,UAAIR,eAAJ,EAAqB;AACnB3a,QAAAA,OAAO,CAACR,IAAR,CAAc,MAAKqK,mBAAmB,CAACqR,eAAD,CAAkB,EAAxD;AACD;AACF,KAdD,CAcE,OAAOhS,CAAP,EAAU;AACV,UAAIA,CAAC,CAACsE,IAAF,KAAW,QAAf,EAAyB;AACvB,cAAMtE,CAAN;AACD;AACF;AACF;;AAED,SAAO/F,SAAP;AACD,CA7CiB,EA8ClB;AAAEoL,EAAAA,iBAAiB,EAAE,IAArB;AAA2BC,EAAAA,wBAAwB,EAAE;AAArD,CA9CkB;;;;;;"
}