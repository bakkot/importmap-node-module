{
  "version": 3,
  "file": "main.cjs",
  "sources": [
    "../../src/internal/readPackageFile.js",
    "../../src/internal/resolveNodeModule.js",
    "../../src/internal/resolvePackageMain.js",
    "../../src/internal/specifierIsRelative.js",
    "../../src/internal/visitPackageImports.js",
    "../../src/internal/visitPackageExports.js",
    "../../src/getImportMapFromNodeModules.js",
    "../../src/getImportMapFromFile.js",
    "../../src/internal/importMapToVsCodeConfigPaths.js",
    "../../src/generateImportMapForProject.js"
  ],
  "sourcesContent": [
    "import { readFile } from \"@jsenv/util\"\n\nexport const readPackageFile = async (packageFileUrl, packagesManualOverrides) => {\n  const packageFileString = await readFile(packageFileUrl)\n  const packageJsonObject = JSON.parse(packageFileString)\n  const { name, version } = packageJsonObject\n\n  const overrideKey = Object.keys(packagesManualOverrides).find((overrideKeyCandidate) => {\n    if (name === overrideKeyCandidate) return true\n    if (`${name}@${version}` === overrideKeyCandidate) return true\n    return false\n  })\n  if (overrideKey) {\n    return composeObject(packageJsonObject, packagesManualOverrides[overrideKey])\n  }\n  return packageJsonObject\n}\n\nconst composeObject = (leftObject, rightObject) => {\n  const composedObject = {\n    ...leftObject,\n  }\n  Object.keys(rightObject).forEach((key) => {\n    const rightValue = rightObject[key]\n\n    if (rightValue === null || typeof rightValue !== \"object\" || key in leftObject === false) {\n      composedObject[key] = rightValue\n    } else {\n      const leftValue = leftObject[key]\n      if (leftValue === null || typeof leftValue !== \"object\") {\n        composedObject[key] = rightValue\n      } else {\n        composedObject[key] = composeObject(leftValue, rightValue)\n      }\n    }\n  })\n  return composedObject\n}\n",
    "import { firstOperationMatching } from \"@jsenv/cancellation\"\nimport { urlToRelativeUrl, resolveUrl, urlToFileSystemPath } from \"@jsenv/util\"\nimport { readPackageFile } from \"./readPackageFile.js\"\n\nexport const resolveNodeModule = async ({\n  logger,\n  rootProjectDirectoryUrl,\n  packagesManualOverrides,\n  packageFileUrl,\n  dependencyName,\n}) => {\n  const packageDirectoryUrl = resolveUrl(\"./\", packageFileUrl)\n  const nodeModuleCandidateArray = [\n    ...computeNodeModuleCandidateArray(packageDirectoryUrl, rootProjectDirectoryUrl),\n    `node_modules/`,\n  ]\n\n  return firstOperationMatching({\n    array: nodeModuleCandidateArray,\n    start: async (nodeModuleCandidate) => {\n      const packageFileUrl = `${rootProjectDirectoryUrl}${nodeModuleCandidate}${dependencyName}/package.json`\n      try {\n        const packageJsonObject = await readPackageFile(packageFileUrl, packagesManualOverrides)\n        return {\n          packageFileUrl,\n          packageJsonObject,\n        }\n      } catch (e) {\n        if (e.code === \"ENOENT\") {\n          return {}\n        }\n\n        if (e.name === \"SyntaxError\") {\n          logger.error(`\nerror while parsing dependency package.json.\n--- parsing error message ---\n${e.message}\n--- package.json path ---\n${urlToFileSystemPath(packageFileUrl)}\n`)\n          return {}\n        }\n\n        throw e\n      }\n    },\n    predicate: ({ packageJsonObject }) => Boolean(packageJsonObject),\n  })\n}\n\nconst computeNodeModuleCandidateArray = (packageDirectoryUrl, rootProjectDirectoryUrl) => {\n  if (packageDirectoryUrl === rootProjectDirectoryUrl) {\n    return []\n  }\n\n  const packageDirectoryRelativeUrl = urlToRelativeUrl(packageDirectoryUrl, rootProjectDirectoryUrl)\n\n  const candidateArray = []\n  const relativeNodeModuleDirectoryArray = packageDirectoryRelativeUrl.split(\"node_modules/\")\n  // remove the first empty string\n  relativeNodeModuleDirectoryArray.shift()\n\n  let i = relativeNodeModuleDirectoryArray.length\n  while (i--) {\n    candidateArray.push(\n      `node_modules/${relativeNodeModuleDirectoryArray\n        .slice(0, i + 1)\n        .join(\"node_modules/\")}node_modules/`,\n    )\n  }\n\n  return candidateArray\n}\n",
    "import { dirname, extname, basename } from \"path\"\nimport { firstOperationMatching } from \"@jsenv/cancellation\"\nimport { resolveUrl, urlToFileSystemPath, readFileSystemNodeStat } from \"@jsenv/util\"\n\nexport const resolvePackageMain = ({ logger, packageFileUrl, packageJsonObject }) => {\n  if (\"module\" in packageJsonObject) {\n    return resolveMainFile({\n      logger,\n      packageFileUrl,\n      packageMainFieldName: \"module\",\n      packageMainFieldValue: packageJsonObject.module,\n    })\n  }\n\n  if (\"jsnext:main\" in packageJsonObject) {\n    return resolveMainFile({\n      logger,\n      packageFileUrl,\n      packageMainFieldName: \"jsnext:main\",\n      packageMainFieldValue: packageJsonObject[\"jsnext:main\"],\n    })\n  }\n\n  if (\"main\" in packageJsonObject) {\n    return resolveMainFile({\n      logger,\n      packageFileUrl,\n      packageMainFieldName: \"main\",\n      packageMainFieldValue: packageJsonObject.main,\n    })\n  }\n\n  return resolveMainFile({\n    logger,\n    packageFileUrl,\n    packageMainFieldName: \"default\",\n    packageMainFieldValue: \"index\",\n  })\n}\n\nconst extensionCandidateArray = [\"js\", \"json\", \"node\"]\n\nconst resolveMainFile = async ({\n  logger,\n  packageFileUrl,\n  packageMainFieldName,\n  packageMainFieldValue,\n}) => {\n  // main is explicitely empty meaning\n  // it is assumed that we should not find a file\n  if (packageMainFieldValue === \"\") {\n    return null\n  }\n\n  const packageFilePath = urlToFileSystemPath(packageFileUrl)\n  const packageDirectoryUrl = resolveUrl(\"./\", packageFileUrl)\n  const mainFileRelativeUrl = packageMainFieldValue.endsWith(\"/\")\n    ? `${packageMainFieldValue}index`\n    : packageMainFieldValue\n\n  const mainFileUrlFirstCandidate = resolveUrl(mainFileRelativeUrl, packageFileUrl)\n\n  if (!mainFileUrlFirstCandidate.startsWith(packageDirectoryUrl)) {\n    logger.warn(\n      `\n${packageMainFieldName} field in package.json must be inside package.json folder.\n--- ${packageMainFieldName} ---\n${packageMainFieldValue}\n--- package.json path ---\n${packageFilePath}\n`,\n    )\n    return null\n  }\n\n  const mainFileUrl = await findMainFileUrlOrNull(mainFileUrlFirstCandidate)\n\n  if (mainFileUrl === null) {\n    // we know in advance this remapping does not lead to an actual file.\n    // we only warn because we have no guarantee this remapping will actually be used\n    // in the codebase.\n\n    // warn only if there is actually a main field\n    // otherwise the package.json is missing the main field\n    // it certainly means it's not important\n    if (packageMainFieldName !== \"default\") {\n      const extensionTried =\n        extname(urlToFileSystemPath(mainFileUrlFirstCandidate)) === \"\"\n          ? `--- extensions tried ---\n${extensionCandidateArray.join(`,`)}\n`\n          : `\n`\n\n      logger.warn(\n        `\ncannot find file for package.json ${packageMainFieldName} field\n--- ${packageMainFieldName} ---\n${packageMainFieldValue}\n--- file path ---\n${urlToFileSystemPath(mainFileUrlFirstCandidate)}\n--- package.json path ---\n${packageFilePath}\n${extensionTried}`,\n      )\n    }\n    return mainFileUrlFirstCandidate\n  }\n\n  return mainFileUrl\n}\n\nconst findMainFileUrlOrNull = async (mainFileUrl) => {\n  const mainStats = await readFileSystemNodeStat(mainFileUrl, { nullIfNotFound: true })\n\n  if (mainStats && mainStats.isFile()) {\n    return mainFileUrl\n  }\n\n  if (mainStats && mainStats.isDirectory()) {\n    const indexFileUrl = resolveUrl(\n      \"./index\",\n      mainFileUrl.endsWith(\"/\") ? mainFileUrl : `${mainFileUrl}/`,\n    )\n    const extensionLeadingToAFile = await findExtension(indexFileUrl)\n    if (extensionLeadingToAFile === null) {\n      return null\n    }\n    return `${indexFileUrl}.${extensionLeadingToAFile}`\n  }\n\n  const mainFilePath = urlToFileSystemPath(mainFileUrl)\n  const extension = extname(mainFilePath)\n\n  if (extension === \"\") {\n    const extensionLeadingToAFile = await findExtension(mainFileUrl)\n    if (extensionLeadingToAFile === null) {\n      return null\n    }\n    return `${mainFileUrl}.${extensionLeadingToAFile}`\n  }\n  return null\n}\n\nconst findExtension = async (fileUrl) => {\n  const filePath = urlToFileSystemPath(fileUrl)\n  const fileDirname = dirname(filePath)\n  const fileBasename = basename(filePath)\n  const extensionLeadingToFile = await firstOperationMatching({\n    array: extensionCandidateArray,\n    start: async (extensionCandidate) => {\n      const filePathCandidate = `${fileDirname}/${fileBasename}.${extensionCandidate}`\n      const stats = await readFileSystemNodeStat(filePathCandidate, { nullIfNotFound: true })\n      return stats && stats.isFile() ? extensionCandidate : null\n    },\n    predicate: (extension) => Boolean(extension),\n  })\n  return extensionLeadingToFile || null\n}\n",
    "export const specifierIsRelative = (specifier) => {\n  if (specifier.startsWith(\"//\")) {\n    return false\n  }\n  if (specifier.startsWith(\"../\")) {\n    return false\n  }\n  // starts with http:// or file:// or ftp: for instance\n  if (/^[a-zA-Z]+\\:/.test(specifier)) {\n    return false\n  }\n  return true\n}\n",
    "import { urlToFileSystemPath } from \"@jsenv/util\"\nimport { specifierIsRelative } from \"./specifierIsRelative.js\"\n\nexport const visitPackageImports = ({ logger, packageFileUrl, packageJsonObject }) => {\n  const importsForPackageImports = {}\n  const packageFilePath = urlToFileSystemPath(packageFileUrl)\n\n  const { imports: packageImports } = packageJsonObject\n  if (typeof packageImports !== \"object\" || packageImports === null) {\n    logger.warn(`\nimports of package.json must be an object.\n--- package.json imports ---\n${packageImports}\n--- package.json path ---\n${packageFilePath}\n`)\n    return importsForPackageImports\n  }\n\n  Object.keys(packageImports).forEach((specifier) => {\n    if (!specifierIsRelative(specifier)) {\n      logger.warn(`\nfound unexpected specifier in imports of package.json, it must be relative to package.json.\n--- specifier ---\n${specifier}\n--- package.json path ---\n${packageFilePath}\n`)\n      return\n    }\n\n    const address = packageImports[specifier]\n    if (typeof address !== \"string\") {\n      logger.warn(`\nfound unexpected address in imports of package.json, it must be a string.\n--- address ---\n${address}\n--- specifier ---\n${specifier}\n--- package.json path ---\n${packageFilePath}\n`)\n      return\n    }\n    if (!specifierIsRelative(address)) {\n      logger.warn(`\nfound unexpected address in imports of package.json, it must be relative to package.json.\n--- address ---\n${address}\n--- specifier ---\n${specifier}\n--- package.json path ---\n${packageFilePath}\n`)\n      return\n    }\n\n    let from\n    if (specifier[0] === \"/\") {\n      from = specifier\n    } else if (specifier.startsWith(\"./\")) {\n      from = specifier\n    } else {\n      from = specifier\n    }\n\n    const to = address\n\n    importsForPackageImports[from] = to\n  })\n\n  return importsForPackageImports\n}\n",
    "// https://nodejs.org/dist/latest-v13.x/docs/api/esm.html#esm_package_exports\n\nimport { urlToFileSystemPath } from \"@jsenv/util\"\nimport { specifierIsRelative } from \"./specifierIsRelative.js\"\n\nexport const visitPackageExports = ({\n  logger,\n  packageFileUrl,\n  packageName,\n  packageJsonObject,\n  packageInfo: { packageDirectoryRelativeUrl },\n  packagesExportsPreference,\n}) => {\n  const importsForPackageExports = {}\n\n  const packageFilePath = urlToFileSystemPath(packageFileUrl)\n  const { exports: packageExports } = packageJsonObject\n\n  // false is allowed as laternative to exports: {}\n  if (packageExports === false) {\n    return importsForPackageExports\n  }\n\n  const addressToDestination = (address) => {\n    if (address[0] === \"/\") {\n      return address\n    }\n    if (address.startsWith(\"./\")) {\n      return `./${packageDirectoryRelativeUrl}${address.slice(2)}`\n    }\n    return `./${packageDirectoryRelativeUrl}${address}`\n  }\n\n  // exports used to indicate the main file\n  if (typeof packageExports === \"string\") {\n    const from = packageName\n    const to = addressToDestination(packageExports)\n    importsForPackageExports[from] = to\n    return importsForPackageExports\n  }\n\n  if (typeof packageExports !== \"object\" || packageExports === null) {\n    logger.warn(`\nexports of package.json must be an object.\n--- package.json exports ---\n${packageExports}\n--- package.json path ---\n${packageFilePath}\n`)\n    return importsForPackageExports\n  }\n\n  const packageExportsKeys = Object.keys(packageExports)\n  const someSpecifierStartsWithDot = packageExportsKeys.some((key) => key.startsWith(\".\"))\n  if (someSpecifierStartsWithDot) {\n    const someSpecifierDoesNotStartsWithDot = packageExportsKeys.some((key) => !key.startsWith(\".\"))\n    if (someSpecifierDoesNotStartsWithDot) {\n      // see https://nodejs.org/dist/latest-v13.x/docs/api/esm.html#esm_exports_sugar\n      logger.error(`\nexports of package.json mixes conditional exports and direct exports.\n--- package.json path ---\n${packageFilePath}\n`)\n      return importsForPackageExports\n    }\n  }\n\n  packageExportsKeys.forEach((specifier) => {\n    if (!specifierIsRelative(specifier)) {\n      logger.warn(`\nfound unexpected specifier in exports of package.json, it must be relative to package.json.\n--- specifier ---\n${specifier}\n--- package.json path ---\n${packageFilePath}\n`)\n      return\n    }\n\n    const value = packageExports[specifier]\n    let address\n\n    if (typeof value === \"object\") {\n      address = readFavoredKey(value, packagesExportsPreference)\n\n      if (!address) {\n        return\n      }\n      if (typeof address === \"object\") {\n        address = readFavoredKey(address, packagesExportsPreference)\n        if (!address) {\n          return\n        }\n      }\n    } else if (typeof value === \"string\") {\n      address = value\n    } else {\n      logger.warn(`\nfound unexpected address in exports of package.json, it must be a string.\n--- address ---\n${address}\n--- specifier ---\n${specifier}\n--- package.json path ---\n${packageFilePath}\n`)\n      return\n    }\n\n    if (!specifierIsRelative(address)) {\n      logger.warn(`\nfound unexpected address in exports of package.json, it must be relative to package.json.\n--- address ---\n${address}\n--- specifier ---\n${specifier}\n--- package.json path ---\n${packageFilePath}\n`)\n      return\n    }\n\n    let from\n    if (specifier === \".\") {\n      from = packageName\n    } else if (specifier[0] === \"/\") {\n      from = specifier\n    } else if (specifier.startsWith(\"./\")) {\n      from = `${packageName}${specifier.slice(1)}`\n    } else {\n      from = `${packageName}/${specifier}`\n    }\n\n    const to = addressToDestination(address)\n\n    importsForPackageExports[from] = to\n  })\n\n  return importsForPackageExports\n}\n\nconst readFavoredKey = (object, favoredKeys) => {\n  const favoredKey = favoredKeys.find((key) => object.hasOwnProperty(key))\n  if (favoredKey) {\n    return object[favoredKey]\n  }\n  if (object.hasOwnProperty(\"default\")) {\n    return object.default\n  }\n  return undefined\n}\n",
    "import { createLogger } from \"@jsenv/logger\"\nimport { moveImportMap, sortImportMap } from \"@jsenv/import-map\"\nimport {\n  resolveUrl,\n  urlToRelativeUrl,\n  assertAndNormalizeDirectoryUrl,\n  urlToFileSystemPath,\n  urlToBasename,\n} from \"@jsenv/util\"\nimport { readPackageFile } from \"./internal/readPackageFile.js\"\nimport { resolveNodeModule } from \"./internal/resolveNodeModule.js\"\nimport { resolvePackageMain } from \"./internal/resolvePackageMain.js\"\nimport { visitPackageImports } from \"./internal/visitPackageImports.js\"\nimport { visitPackageExports } from \"./internal/visitPackageExports.js\"\n\nexport const getImportMapFromNodeModules = async ({\n  // nothing is actually listening for this cancellationToken for now\n  // it's not very important but it would be better to register on it\n  // an stops what we are doing if asked to do so\n  // cancellationToken = createCancellationTokenForProcess(),\n  logLevel,\n  projectDirectoryUrl,\n  rootProjectDirectoryUrl,\n  importMapFileRelativeUrl = \"./import-map.importmap\",\n\n  projectPackageDevDependenciesIncluded = process.env.NODE_ENV !== \"production\",\n  // pass [\"import\", \"browser\", \"require\"] to read browser first if defined\n  packagesExportsPreference = [\"import\", \"node\", \"require\"],\n  packagesExportsIncluded = true,\n  packagesSelfReference = true,\n  packagesImportsIncluded = true,\n  packagesManualOverrides = {},\n  packageIncludedPredicate = () => true,\n}) => {\n  const logger = createLogger({ logLevel })\n\n  projectDirectoryUrl = assertAndNormalizeDirectoryUrl(projectDirectoryUrl)\n  if (typeof rootProjectDirectoryUrl === \"undefined\") {\n    rootProjectDirectoryUrl = projectDirectoryUrl\n  } else {\n    rootProjectDirectoryUrl = assertAndNormalizeDirectoryUrl(rootProjectDirectoryUrl)\n  }\n\n  const projectPackageFileUrl = resolveUrl(\"./package.json\", projectDirectoryUrl)\n  const rootProjectPackageFileUrl = resolveUrl(\"./package.json\", rootProjectDirectoryUrl)\n\n  const imports = {}\n  const scopes = {}\n  const seen = {}\n\n  const markPackageAsSeen = (packageFileUrl, importerPackageFileUrl) => {\n    if (packageFileUrl in seen) {\n      seen[packageFileUrl].push(importerPackageFileUrl)\n    } else {\n      seen[packageFileUrl] = [importerPackageFileUrl]\n    }\n  }\n\n  const packageIsSeen = (packageFileUrl, importerPackageFileUrl) => {\n    return packageFileUrl in seen && seen[packageFileUrl].includes(importerPackageFileUrl)\n  }\n\n  const visit = async ({\n    packageFileUrl,\n    packageName,\n    packageJsonObject,\n    importerPackageFileUrl,\n    importerPackageJsonObject,\n    includeDevDependencies,\n  }) => {\n    if (!packageIncludedPredicate({ packageName, packageFileUrl, packageJsonObject })) {\n      return\n    }\n\n    await visitDependencies({\n      packageFileUrl,\n      packageJsonObject,\n      includeDevDependencies,\n    })\n    await visitPackage({\n      packageFileUrl,\n      packageName,\n      packageJsonObject,\n      importerPackageFileUrl,\n      importerPackageJsonObject,\n    })\n  }\n\n  const visitPackage = async ({\n    packageFileUrl,\n    packageName,\n    packageJsonObject,\n    importerPackageFileUrl,\n    importerPackageJsonObject,\n  }) => {\n    const packageInfo = computePackageInfo({\n      packageFileUrl,\n      packageName,\n      importerPackageFileUrl,\n    })\n\n    await visitPackageMain({\n      packageFileUrl,\n      packageName,\n      packageJsonObject,\n      packageInfo,\n    })\n\n    if (packagesImportsIncluded && \"imports\" in packageJsonObject) {\n      const importsForPackageImports = visitPackageImports({\n        logger,\n        packageFileUrl,\n        packageName,\n        packageJsonObject,\n        packageInfo,\n      })\n\n      const { packageIsRoot, packageDirectoryRelativeUrl } = packageInfo\n      Object.keys(importsForPackageImports).forEach((from) => {\n        const to = importsForPackageImports[from]\n\n        if (packageIsRoot) {\n          addTopLevelImportMapping({ from, to })\n        } else {\n          const toScoped =\n            to[0] === \"/\"\n              ? to\n              : `./${packageDirectoryRelativeUrl}${to.startsWith(\"./\") ? to.slice(2) : to}`\n\n          addScopedImportMapping({\n            scope: `./${packageDirectoryRelativeUrl}`,\n            from,\n            to: toScoped,\n          })\n\n          // when a package says './' maps to './'\n          // we must add something to say if we are already inside the package\n          // no need to ensure leading slash are scoped to the package\n          if (from === \"./\" && to === \"./\") {\n            addScopedImportMapping({\n              scope: `./${packageDirectoryRelativeUrl}`,\n              from: `./${packageDirectoryRelativeUrl}`,\n              to: `./${packageDirectoryRelativeUrl}`,\n            })\n          } else if (from === \"/\" && to === \"/\") {\n            addScopedImportMapping({\n              scope: `./${packageDirectoryRelativeUrl}`,\n              from: `./${packageDirectoryRelativeUrl}`,\n              to: `./${packageDirectoryRelativeUrl}`,\n            })\n          }\n        }\n      })\n    }\n\n    if (packagesSelfReference) {\n      const { packageIsRoot, packageDirectoryRelativeUrl } = packageInfo\n\n      // allow import 'package-name/dir/file.js' in package-name files\n      if (packageIsRoot) {\n        addTopLevelImportMapping({\n          from: `${packageName}/`,\n          to: `./${packageDirectoryRelativeUrl}`,\n        })\n      }\n      // scoped allow import 'package-name/dir/file.js' in package-name files\n      else {\n        addScopedImportMapping({\n          scope: `./${packageDirectoryRelativeUrl}`,\n          from: `${packageName}/`,\n          to: `./${packageDirectoryRelativeUrl}`,\n        })\n      }\n    }\n\n    if (packagesExportsIncluded && \"exports\" in packageJsonObject) {\n      const importsForPackageExports = visitPackageExports({\n        logger,\n        packageFileUrl,\n        packageName,\n        packageJsonObject,\n        packageInfo,\n        packagesExportsPreference,\n      })\n\n      const {\n        importerIsRoot,\n        importerRelativeUrl,\n        packageIsRoot,\n        packageDirectoryRelativeUrl,\n        // packageDirectoryUrl,\n        // packageDirectoryUrlExpected,\n      } = packageInfo\n\n      if (packageIsRoot && packagesSelfReference) {\n        Object.keys(importsForPackageExports).forEach((from) => {\n          const to = importsForPackageExports[from]\n          addTopLevelImportMapping({\n            from,\n            to,\n          })\n        })\n      } else if (packageIsRoot) {\n        // ignore exports\n      } else {\n        Object.keys(importsForPackageExports).forEach((from) => {\n          const to = importsForPackageExports[from]\n\n          // own package exports available to himself\n          if (importerIsRoot) {\n            // importer is the package himself, keep exports scoped\n            // otherwise the dependency exports would override the package exports.\n            if (importerPackageJsonObject.name === packageName) {\n              addScopedImportMapping({\n                scope: `./${packageDirectoryRelativeUrl}`,\n                from,\n                to,\n              })\n              if (from === packageName || from in imports === false) {\n                addTopLevelImportMapping({ from, to })\n              }\n            } else {\n              addTopLevelImportMapping({ from, to })\n            }\n          } else {\n            addScopedImportMapping({\n              scope: `./${packageDirectoryRelativeUrl}`,\n              from,\n              to,\n            })\n          }\n\n          // now make package exports available to the importer\n          // if importer is root no need because the top level remapping does it\n          if (importerIsRoot) {\n            return\n          }\n\n          // now make it available to the importer\n          // here if the importer is himself we could do stuff\n          // we should even handle the case earlier to prevent top level remapping\n          addScopedImportMapping({ scope: `./${importerRelativeUrl}`, from, to })\n        })\n      }\n    }\n  }\n\n  const visitPackageMain = async ({\n    packageFileUrl,\n    packageName,\n    packageJsonObject,\n    packageInfo: {\n      importerIsRoot,\n      importerRelativeUrl,\n      packageIsRoot,\n      packageIsProject,\n      packageDirectoryUrl,\n      packageDirectoryUrlExpected,\n    },\n  }) => {\n    const self = packageIsRoot || packageIsProject\n    if (self && !packagesSelfReference) return\n\n    const mainFileUrl = await resolvePackageMain({\n      packageFileUrl,\n      packageJsonObject,\n      logger,\n    })\n\n    // it's possible to have no main\n    // like { main: \"\" } in package.json\n    // or a main that does not lead to an actual file\n    if (mainFileUrl === null) return\n\n    const mainFileRelativeUrl = urlToRelativeUrl(mainFileUrl, rootProjectDirectoryUrl)\n    const from = packageName\n    const to = `./${mainFileRelativeUrl}`\n\n    if (importerIsRoot) {\n      addTopLevelImportMapping({ from, to })\n    } else {\n      addScopedImportMapping({ scope: `./${importerRelativeUrl}`, from, to })\n    }\n    if (packageDirectoryUrl !== packageDirectoryUrlExpected) {\n      addScopedImportMapping({ scope: `./${importerRelativeUrl}`, from, to })\n    }\n  }\n\n  const visitDependencies = async ({\n    packageFileUrl,\n    packageJsonObject,\n    includeDevDependencies,\n  }) => {\n    const dependencyMap = {}\n\n    const { dependencies = {} } = packageJsonObject\n    // https://npm.github.io/using-pkgs-docs/package-json/types/optionaldependencies.html\n    const { optionalDependencies = {} } = packageJsonObject\n    Object.keys(dependencies).forEach((dependencyName) => {\n      dependencyMap[dependencyName] = {\n        type: \"dependency\",\n        isOptional: dependencyName in optionalDependencies,\n        versionPattern: dependencies[dependencyName],\n      }\n    })\n\n    const { peerDependencies = {} } = packageJsonObject\n    const { peerDependenciesMeta = {} } = packageJsonObject\n    Object.keys(peerDependencies).forEach((dependencyName) => {\n      dependencyMap[dependencyName] = {\n        type: \"peerDependency\",\n        versionPattern: peerDependencies[dependencyName],\n        isOptional:\n          dependencyName in peerDependenciesMeta && peerDependenciesMeta[dependencyName].optional,\n      }\n    })\n\n    const isProjectPackage = packageFileUrl === projectPackageFileUrl\n    if (includeDevDependencies && isProjectPackage) {\n      const { devDependencies = {} } = packageJsonObject\n      Object.keys(devDependencies).forEach((dependencyName) => {\n        if (!dependencyMap.hasOwnProperty(dependencyName)) {\n          dependencyMap[dependencyName] = {\n            type: \"devDependency\",\n            versionPattern: devDependencies[dependencyName],\n          }\n        }\n      })\n    }\n\n    await Promise.all(\n      Object.keys(dependencyMap).map(async (dependencyName) => {\n        const dependency = dependencyMap[dependencyName]\n        await visitDependency({\n          packageFileUrl,\n          packageJsonObject,\n          dependencyName,\n          dependencyType: dependency.type,\n          dependencyIsOptional: dependency.isOptional,\n          dependencyVersionPattern: dependency.versionPattern,\n        })\n      }),\n    )\n  }\n\n  const visitDependency = async ({\n    packageFileUrl,\n    packageJsonObject,\n    dependencyName,\n    dependencyType,\n    dependencyIsOptional,\n    dependencyVersionPattern,\n  }) => {\n    const dependencyData = await findDependency({\n      packageFileUrl,\n      dependencyName,\n    })\n    if (!dependencyData) {\n      logger[dependencyIsOptional ? \"debug\" : \"warn\"](`\n${\n  dependencyIsOptional\n    ? `cannot find an optional ${dependencyType}.`\n    : `cannot find a ${dependencyType}.`\n}\n--- ${dependencyType} ---\n${dependencyName}@${dependencyVersionPattern}\n--- required by ---\n${packageJsonObject.name}@${packageJsonObject.version}\n--- package.json path ---\n${urlToFileSystemPath(packageFileUrl)}\n    `)\n      return\n    }\n\n    const {\n      packageFileUrl: dependencyPackageFileUrl,\n      packageJsonObject: dependencyPackageJsonObject,\n    } = dependencyData\n\n    if (packageIsSeen(dependencyPackageFileUrl, packageFileUrl)) {\n      return\n    }\n    markPackageAsSeen(dependencyPackageFileUrl, packageFileUrl)\n    await visit({\n      packageFileUrl: dependencyPackageFileUrl,\n      packageName: dependencyName,\n      packageJsonObject: dependencyPackageJsonObject,\n      importerPackageFileUrl: packageFileUrl,\n      importerPackageJsonObject: packageJsonObject,\n    })\n  }\n\n  const computePackageInfo = ({ packageFileUrl, packageName, importerPackageFileUrl }) => {\n    const importerIsRoot = importerPackageFileUrl === rootProjectPackageFileUrl\n\n    const importerIsProject = importerPackageFileUrl === projectPackageFileUrl\n\n    const importerPackageDirectoryUrl = resolveUrl(\"./\", importerPackageFileUrl)\n\n    const importerRelativeUrl = importerIsRoot\n      ? `${urlToBasename(rootProjectDirectoryUrl.slice(0, -1))}/`\n      : urlToRelativeUrl(importerPackageDirectoryUrl, rootProjectDirectoryUrl)\n\n    const packageIsRoot = packageFileUrl === rootProjectPackageFileUrl\n\n    const packageIsProject = packageFileUrl === projectPackageFileUrl\n\n    const packageDirectoryUrl = resolveUrl(\"./\", packageFileUrl)\n\n    let packageDirectoryUrlExpected\n    if (packageIsProject && !packageIsRoot) {\n      packageDirectoryUrlExpected = importerPackageDirectoryUrl\n    } else {\n      packageDirectoryUrlExpected = `${importerPackageDirectoryUrl}node_modules/${packageName}/`\n    }\n\n    const packageDirectoryRelativeUrl = urlToRelativeUrl(\n      packageDirectoryUrl,\n      rootProjectDirectoryUrl,\n    )\n\n    return {\n      importerIsRoot,\n      importerIsProject,\n      importerRelativeUrl,\n      packageIsRoot,\n      packageIsProject,\n      packageDirectoryUrl,\n      packageDirectoryUrlExpected,\n      packageDirectoryRelativeUrl,\n    }\n  }\n\n  const addTopLevelImportMapping = ({ from, to }) => {\n    // we could think it's useless to remap from with to\n    // however it can be used to ensure a weaker remapping\n    // does not win over this specific file or folder\n    if (from === to) {\n      /**\n       * however remapping '/' to '/' is truly useless\n       * moreover it would make wrapImportMap create something like\n       * {\n       *   imports: {\n       *     \"/\": \"/.dist/best/\"\n       *   }\n       * }\n       * that would append the wrapped folder twice\n       * */\n      if (from === \"/\") return\n    }\n\n    imports[from] = to\n  }\n\n  const addScopedImportMapping = ({ scope, from, to }) => {\n    scopes[scope] = {\n      ...(scopes[scope] || {}),\n      [from]: to,\n    }\n  }\n\n  const dependenciesCache = {}\n  const findDependency = ({ packageFileUrl, dependencyName }) => {\n    if (packageFileUrl in dependenciesCache === false) {\n      dependenciesCache[packageFileUrl] = {}\n    }\n    if (dependencyName in dependenciesCache[packageFileUrl]) {\n      return dependenciesCache[packageFileUrl][dependencyName]\n    }\n    const dependencyPromise = resolveNodeModule({\n      logger,\n      rootProjectDirectoryUrl,\n      packagesManualOverrides,\n      packageFileUrl,\n      dependencyName,\n    })\n    dependenciesCache[packageFileUrl][dependencyName] = dependencyPromise\n    return dependencyPromise\n  }\n\n  const projectPackageJsonObject = await readPackageFile(\n    projectPackageFileUrl,\n    packagesManualOverrides,\n  )\n\n  const packageFileUrl = projectPackageFileUrl\n  const importerPackageFileUrl = projectPackageFileUrl\n  markPackageAsSeen(packageFileUrl, importerPackageFileUrl)\n\n  const packageName = projectPackageJsonObject.name\n  if (typeof packageName === \"string\") {\n    await visit({\n      packageFileUrl,\n      packageName: projectPackageJsonObject.name,\n      packageJsonObject: projectPackageJsonObject,\n      importerPackageFileUrl,\n      importerPackageJsonObject: null,\n      includeDevDependencies: projectPackageDevDependenciesIncluded,\n    })\n  } else {\n    logger.warn(`package name field must be a string\n--- package name field ---\n${packageName}\n--- package.json file path ---\n${packageFileUrl}`)\n  }\n\n  // remove useless duplicates (scoped key+value already defined on imports)\n  Object.keys(scopes).forEach((key) => {\n    const scopedImports = scopes[key]\n    Object.keys(scopedImports).forEach((scopedImportKey) => {\n      if (\n        scopedImportKey in imports &&\n        imports[scopedImportKey] === scopedImports[scopedImportKey]\n      ) {\n        delete scopedImports[scopedImportKey]\n      }\n    })\n    if (Object.keys(scopedImports).length === 0) {\n      delete scopes[key]\n    }\n  })\n\n  // The importmap generated at this point is relative to the project directory url\n  // In other words if you want to use that importmap you have to put it\n  // inside projectDirectoryUrl (it cannot be nested in a subdirectory).\n  let importMap = { imports, scopes }\n  if (importMapFileRelativeUrl) {\n    // When there is an importMapFileRelativeUrl we will make remapping relative\n    // to the importmap file future location (where user will write it).\n    // This allows to put the importmap anywhere inside the projectDirectoryUrl.\n    // (If possible prefer to have it top level to avoid too many ../\n    const importMapProjectUrl = resolveUrl(\"project.importmap\", projectDirectoryUrl)\n    const importMapRealUrl = resolveUrl(importMapFileRelativeUrl, projectDirectoryUrl)\n    importMap = moveImportMap(importMap, importMapProjectUrl, importMapRealUrl)\n  }\n  importMap = sortImportMap(importMap)\n\n  return importMap\n}\n",
    "import { readFile, assertAndNormalizeFileUrl } from \"@jsenv/util\"\n\nexport const getImportMapFromFile = async (importMapFilePath) => {\n  const importMapFileUrl = assertAndNormalizeFileUrl(importMapFilePath)\n  const importMapFileContent = await readFile(importMapFileUrl)\n  const importMap = JSON.parse(importMapFileContent)\n  return importMap\n}\n",
    "export const importMapToVsCodeConfigPaths = ({ imports = {} }) => {\n  const paths = {}\n\n  Object.keys(imports).forEach((importKey) => {\n    const importValue = imports[importKey]\n\n    let key\n    if (importKey.endsWith(\"/\")) {\n      key = `${importKey}*`\n    } else {\n      key = importKey\n    }\n\n    const importValueArray = typeof importValue === \"string\" ? [importValue] : importValue\n    const candidatesForPath = importValueArray.map((importValue) => {\n      if (importValue.endsWith(\"/\")) {\n        return `${importValue}*`\n      }\n      return importValue\n    })\n\n    if (key in paths) {\n      paths[key] = [...paths[key], ...candidatesForPath]\n    } else {\n      paths[key] = candidatesForPath\n    }\n  })\n\n  return paths\n}\n",
    "import {\n  resolveUrl,\n  urlToFileSystemPath,\n  assertAndNormalizeDirectoryUrl,\n  writeFile,\n} from \"@jsenv/util\"\nimport { composeTwoImportMaps } from \"@jsenv/import-map\"\nimport { importMapToVsCodeConfigPaths } from \"./internal/importMapToVsCodeConfigPaths.js\"\n\nexport const generateImportMapForProject = async (\n  importMapInputs = [],\n  {\n    projectDirectoryUrl,\n\n    importMapFile = true, // in case someone wants the importmap but not write it on filesystem\n    importMapFileRelativeUrl = \"./import-map.importmap\",\n    importMapFileLog = true,\n\n    jsConfigFile = false, // not yet documented, makes vscode aware of the import remapping\n    jsConfigFileLog = true,\n    jsConfigLeadingSlash = false,\n    jsConfigBase = {},\n  },\n) => {\n  projectDirectoryUrl = assertAndNormalizeDirectoryUrl(projectDirectoryUrl)\n\n  if (importMapInputs.length === 0) {\n    console.warn(`importMapInputs is empty, the generated importmap will be empty`)\n  }\n\n  const importMaps = await Promise.all(importMapInputs)\n\n  const importMap = importMaps.reduce((previous, current) => {\n    return composeTwoImportMaps(previous, current)\n  }, {})\n\n  if (importMapFile) {\n    const importMapFileUrl = resolveUrl(importMapFileRelativeUrl, projectDirectoryUrl)\n    await writeFile(importMapFileUrl, JSON.stringify(importMap, null, \"  \"))\n    if (importMapFileLog) {\n      console.info(`-> ${urlToFileSystemPath(importMapFileUrl)}`)\n    }\n  }\n  if (jsConfigFile) {\n    const jsConfigFileUrl = resolveUrl(\"./jsconfig.json\", projectDirectoryUrl)\n    try {\n      const jsConfig = {\n        compilerOptions: {\n          baseUrl: \".\",\n          ...jsConfigBase,\n          paths: {\n            ...(jsConfigLeadingSlash ? { \"/*\": [\"./*\"] } : {}),\n            ...importMapToVsCodeConfigPaths(importMap),\n          },\n        },\n      }\n      await writeFile(jsConfigFileUrl, JSON.stringify(jsConfig, null, \"  \"))\n      if (jsConfigFileLog) {\n        console.info(`-> ${urlToFileSystemPath(jsConfigFileUrl)}`)\n      }\n    } catch (e) {\n      if (e.code !== \"ENOENT\") {\n        throw e\n      }\n    }\n  }\n\n  return importMap\n}\n"
  ],
  "names": [
    "readPackageFile",
    "packageFileUrl",
    "packagesManualOverrides",
    "packageFileString",
    "readFile",
    "packageJsonObject",
    "JSON",
    "parse",
    "name",
    "version",
    "overrideKey",
    "Object",
    "keys",
    "find",
    "overrideKeyCandidate",
    "composeObject",
    "leftObject",
    "rightObject",
    "composedObject",
    "forEach",
    "key",
    "rightValue",
    "leftValue",
    "resolveNodeModule",
    "logger",
    "rootProjectDirectoryUrl",
    "dependencyName",
    "packageDirectoryUrl",
    "resolveUrl",
    "nodeModuleCandidateArray",
    "computeNodeModuleCandidateArray",
    "firstOperationMatching",
    "array",
    "start",
    "nodeModuleCandidate",
    "e",
    "code",
    "error",
    "message",
    "urlToFileSystemPath",
    "predicate",
    "Boolean",
    "packageDirectoryRelativeUrl",
    "urlToRelativeUrl",
    "candidateArray",
    "relativeNodeModuleDirectoryArray",
    "split",
    "shift",
    "i",
    "length",
    "push",
    "slice",
    "join",
    "resolvePackageMain",
    "resolveMainFile",
    "packageMainFieldName",
    "packageMainFieldValue",
    "module",
    "main",
    "extensionCandidateArray",
    "packageFilePath",
    "mainFileRelativeUrl",
    "endsWith",
    "mainFileUrlFirstCandidate",
    "startsWith",
    "warn",
    "mainFileUrl",
    "findMainFileUrlOrNull",
    "extensionTried",
    "extname",
    "mainStats",
    "readFileSystemNodeStat",
    "nullIfNotFound",
    "isFile",
    "isDirectory",
    "indexFileUrl",
    "extensionLeadingToAFile",
    "findExtension",
    "mainFilePath",
    "extension",
    "fileUrl",
    "filePath",
    "fileDirname",
    "dirname",
    "fileBasename",
    "basename",
    "extensionLeadingToFile",
    "extensionCandidate",
    "filePathCandidate",
    "stats",
    "specifierIsRelative",
    "specifier",
    "test",
    "visitPackageImports",
    "importsForPackageImports",
    "imports",
    "packageImports",
    "address",
    "from",
    "to",
    "visitPackageExports",
    "packageName",
    "packageInfo",
    "packagesExportsPreference",
    "importsForPackageExports",
    "exports",
    "packageExports",
    "addressToDestination",
    "packageExportsKeys",
    "someSpecifierStartsWithDot",
    "some",
    "someSpecifierDoesNotStartsWithDot",
    "value",
    "readFavoredKey",
    "object",
    "favoredKeys",
    "favoredKey",
    "hasOwnProperty",
    "default",
    "undefined",
    "getImportMapFromNodeModules",
    "logLevel",
    "projectDirectoryUrl",
    "importMapFileRelativeUrl",
    "projectPackageDevDependenciesIncluded",
    "packagesExportsIncluded",
    "packagesSelfReference",
    "packagesImportsIncluded",
    "packageIncludedPredicate",
    "createLogger",
    "assertAndNormalizeDirectoryUrl",
    "projectPackageFileUrl",
    "rootProjectPackageFileUrl",
    "scopes",
    "seen",
    "markPackageAsSeen",
    "importerPackageFileUrl",
    "packageIsSeen",
    "includes",
    "visit",
    "importerPackageJsonObject",
    "includeDevDependencies",
    "visitDependencies",
    "visitPackage",
    "computePackageInfo",
    "visitPackageMain",
    "packageIsRoot",
    "addTopLevelImportMapping",
    "toScoped",
    "addScopedImportMapping",
    "scope",
    "importerIsRoot",
    "importerRelativeUrl",
    "packageIsProject",
    "packageDirectoryUrlExpected",
    "self",
    "dependencyMap",
    "dependencies",
    "optionalDependencies",
    "type",
    "isOptional",
    "versionPattern",
    "peerDependencies",
    "peerDependenciesMeta",
    "optional",
    "isProjectPackage",
    "devDependencies",
    "Promise",
    "all",
    "map",
    "dependency",
    "visitDependency",
    "dependencyType",
    "dependencyIsOptional",
    "dependencyVersionPattern",
    "dependencyData",
    "findDependency",
    "dependencyPackageFileUrl",
    "dependencyPackageJsonObject",
    "importerIsProject",
    "importerPackageDirectoryUrl",
    "urlToBasename",
    "dependenciesCache",
    "dependencyPromise",
    "projectPackageJsonObject",
    "scopedImports",
    "scopedImportKey",
    "importMap",
    "importMapProjectUrl",
    "importMapRealUrl",
    "moveImportMap",
    "sortImportMap",
    "getImportMapFromFile",
    "importMapFilePath",
    "importMapFileUrl",
    "assertAndNormalizeFileUrl",
    "importMapFileContent",
    "importMapToVsCodeConfigPaths",
    "paths",
    "importKey",
    "importValue",
    "importValueArray",
    "candidatesForPath",
    "generateImportMapForProject",
    "importMapInputs",
    "importMapFile",
    "importMapFileLog",
    "jsConfigFile",
    "jsConfigFileLog",
    "jsConfigLeadingSlash",
    "jsConfigBase",
    "console",
    "importMaps",
    "reduce",
    "previous",
    "current",
    "composeTwoImportMaps",
    "writeFile",
    "stringify",
    "info",
    "jsConfigFileUrl",
    "jsConfig",
    "compilerOptions",
    "baseUrl"
  ],
  "mappings": "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"
}