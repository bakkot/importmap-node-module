{
  "version": 3,
  "file": "main.cjs",
  "sources": [
    "../../src/internal/resolveFile.js",
    "../../src/internal/resolvePackageMain.js",
    "../../src/internal/specifierIsRelative.js",
    "../../src/internal/visitPackageImports.js",
    "../../src/internal/visitPackageExports.js",
    "../../src/internal/memoizeAsyncFunctionByUrl.js",
    "../../src/internal/applyPackageManualOverride.js",
    "../../src/internal/readPackageFile.js",
    "../../src/internal/node-module-resolution.js",
    "../../src/getImportMapFromNodeModules.js",
    "../../src/getImportMapFromFile.js",
    "../../src/internal/importMapToVsCodeConfigPaths.js",
    "../../src/generateImportMapForProject.js"
  ],
  "sourcesContent": [
    "import { resolveUrl, readFileSystemNodeStat, urlToBasename, urlToExtension } from \"@jsenv/util\"\nimport { firstOperationMatching } from \"@jsenv/cancellation\"\n\nexport const resolveFile = async (fileUrl, { magicExtensions }) => {\n  const fileStat = await readFileSystemNodeStat(fileUrl, {\n    nullIfNotFound: true,\n  })\n\n  // file found\n  if (fileStat && fileStat.isFile()) {\n    return fileUrl\n  }\n\n  // directory found\n  if (fileStat && fileStat.isDirectory()) {\n    const indexFileSuffix = fileUrl.endsWith(\"/\") ? \"index\" : \"/index\"\n    const indexFileUrl = `${fileUrl}${indexFileSuffix}`\n    const extensionLeadingToAFile = await findExtensionLeadingToFile(indexFileUrl, magicExtensions)\n    if (extensionLeadingToAFile === null) {\n      return null\n    }\n    return `${indexFileUrl}.${extensionLeadingToAFile}`\n  }\n\n  // file not found and it has an extension\n  const extension = urlToExtension(fileUrl)\n  if (extension !== \"\") {\n    return null\n  }\n\n  const extensionLeadingToAFile = await findExtensionLeadingToFile(fileUrl, magicExtensions)\n  // magic extension not found\n  if (extensionLeadingToAFile === null) {\n    return null\n  }\n\n  // magic extension worked\n  return `${fileUrl}.${extensionLeadingToAFile}`\n}\n\nconst findExtensionLeadingToFile = async (fileUrl, magicExtensions) => {\n  const fileDirectoryUrl = resolveUrl(\"./\", fileUrl)\n  const fileBasename = urlToBasename(fileUrl)\n  const extensionLeadingToFile = await firstOperationMatching({\n    array: magicExtensions,\n    start: async (extensionCandidate) => {\n      const filePathCandidate = `${fileDirectoryUrl}/${fileBasename}.${extensionCandidate}`\n      const stats = await readFileSystemNodeStat(filePathCandidate, { nullIfNotFound: true })\n      return stats && stats.isFile() ? extensionCandidate : null\n    },\n    predicate: (extension) => Boolean(extension),\n  })\n  return extensionLeadingToFile || null\n}\n",
    "import { createDetailedMessage } from \"@jsenv/logger\"\nimport { resolveUrl, urlToFileSystemPath, urlToExtension } from \"@jsenv/util\"\nimport { resolveFile } from \"./resolveFile.js\"\n\nconst magicExtensions = [\"js\", \"json\", \"node\"]\n\nexport const resolvePackageMain = ({ logger, packageFileUrl, packageJsonObject }) => {\n  if (\"module\" in packageJsonObject) {\n    return resolveMainFile({\n      logger,\n      packageFileUrl,\n      packageMainFieldName: \"module\",\n      packageMainFieldValue: packageJsonObject.module,\n    })\n  }\n\n  if (\"jsnext:main\" in packageJsonObject) {\n    return resolveMainFile({\n      logger,\n      packageFileUrl,\n      packageMainFieldName: \"jsnext:main\",\n      packageMainFieldValue: packageJsonObject[\"jsnext:main\"],\n    })\n  }\n\n  if (\"main\" in packageJsonObject) {\n    return resolveMainFile({\n      logger,\n      packageFileUrl,\n      packageMainFieldName: \"main\",\n      packageMainFieldValue: packageJsonObject.main,\n    })\n  }\n\n  return resolveMainFile({\n    logger,\n    packageFileUrl,\n    packageMainFieldName: \"default\",\n    packageMainFieldValue: \"index\",\n  })\n}\n\nconst resolveMainFile = async ({\n  logger,\n  packageFileUrl,\n  packageMainFieldName,\n  packageMainFieldValue,\n}) => {\n  // main is explicitely empty meaning\n  // it is assumed that we should not find a file\n  if (packageMainFieldValue === \"\") {\n    return null\n  }\n\n  const packageFilePath = urlToFileSystemPath(packageFileUrl)\n  const packageDirectoryUrl = resolveUrl(\"./\", packageFileUrl)\n  const mainFileRelativeUrl = packageMainFieldValue.endsWith(\"/\")\n    ? `${packageMainFieldValue}index`\n    : packageMainFieldValue\n\n  const mainFileUrlFirstCandidate = resolveUrl(mainFileRelativeUrl, packageFileUrl)\n\n  if (!mainFileUrlFirstCandidate.startsWith(packageDirectoryUrl)) {\n    logger.warn(\n      `\n${packageMainFieldName} field in package.json must be inside package.json folder.\n--- ${packageMainFieldName} ---\n${packageMainFieldValue}\n--- package.json path ---\n${packageFilePath}\n`,\n    )\n    return null\n  }\n\n  const mainFileUrl = await resolveFile(mainFileUrlFirstCandidate, {\n    magicExtensions,\n  })\n\n  if (!mainFileUrl) {\n    // we know in advance this remapping does not lead to an actual file.\n    // we only warn because we have no guarantee this remapping will actually be used\n    // in the codebase.\n    // warn only if there is actually a main field\n    // otherwise the package.json is missing the main field\n    // it certainly means it's not important\n    if (packageMainFieldName !== \"default\") {\n      logger.warn(\n        formatFileNotFoundLog({\n          specifier: packageMainFieldValue,\n          importedIn: `${packageFileUrl}#${packageMainFieldName}`,\n          fileUrl: mainFileUrlFirstCandidate,\n          magicExtensions,\n        }),\n      )\n    }\n    return mainFileUrlFirstCandidate\n  }\n\n  return mainFileUrl\n}\n\nconst formatFileNotFoundLog = ({ specifier, importedIn, fileUrl, magicExtensions }) => {\n  return createDetailedMessage(`Cannot find file for \"${specifier}\"`, {\n    \"imported in\": importedIn,\n    \"file url\": fileUrl,\n    ...(urlToExtension(fileUrl) === \"\" ? { [\"extensions tried\"]: magicExtensions.join(`,`) } : {}),\n  })\n}\n",
    "export const specifierIsRelative = (specifier) => {\n  if (specifier.startsWith(\"//\")) {\n    return false\n  }\n  if (specifier.startsWith(\"../\")) {\n    return false\n  }\n  // starts with http:// or file:// or ftp: for instance\n  if (/^[a-zA-Z]+\\:/.test(specifier)) {\n    return false\n  }\n  return true\n}\n",
    "import { urlToFileSystemPath } from \"@jsenv/util\"\nimport { specifierIsRelative } from \"./specifierIsRelative.js\"\n\nexport const visitPackageImports = ({ logger, packageFileUrl, packageJsonObject }) => {\n  const importsForPackageImports = {}\n  const packageFilePath = urlToFileSystemPath(packageFileUrl)\n\n  const { imports: packageImports } = packageJsonObject\n  if (typeof packageImports !== \"object\" || packageImports === null) {\n    logger.warn(`\nimports of package.json must be an object.\n--- package.json imports ---\n${packageImports}\n--- package.json path ---\n${packageFilePath}\n`)\n    return importsForPackageImports\n  }\n\n  Object.keys(packageImports).forEach((specifier) => {\n    if (!specifierIsRelative(specifier)) {\n      logger.warn(`\nfound unexpected specifier in imports of package.json, it must be relative to package.json.\n--- specifier ---\n${specifier}\n--- package.json path ---\n${packageFilePath}\n`)\n      return\n    }\n\n    const address = packageImports[specifier]\n    if (typeof address !== \"string\") {\n      logger.warn(`\nfound unexpected address in imports of package.json, it must be a string.\n--- address ---\n${address}\n--- specifier ---\n${specifier}\n--- package.json path ---\n${packageFilePath}\n`)\n      return\n    }\n    if (!specifierIsRelative(address)) {\n      logger.warn(`\nfound unexpected address in imports of package.json, it must be relative to package.json.\n--- address ---\n${address}\n--- specifier ---\n${specifier}\n--- package.json path ---\n${packageFilePath}\n`)\n      return\n    }\n\n    let from\n    if (specifier[0] === \"/\") {\n      from = specifier\n    } else if (specifier.startsWith(\"./\")) {\n      from = specifier\n    } else {\n      from = specifier\n    }\n\n    const to = address\n\n    importsForPackageImports[from] = to\n  })\n\n  return importsForPackageImports\n}\n",
    "// https://nodejs.org/dist/latest-v13.x/docs/api/esm.html#esm_package_exports\n\nimport { urlToFileSystemPath } from \"@jsenv/util\"\nimport { specifierIsRelative } from \"./specifierIsRelative.js\"\n\nexport const visitPackageExports = ({\n  logger,\n  packageFileUrl,\n  packageName,\n  packageJsonObject,\n  packageInfo: { packageDirectoryRelativeUrl },\n  packagesExportsPreference,\n}) => {\n  const importsForPackageExports = {}\n\n  const packageFilePath = urlToFileSystemPath(packageFileUrl)\n  const { exports: packageExports } = packageJsonObject\n\n  // false is allowed as laternative to exports: {}\n  if (packageExports === false) {\n    return importsForPackageExports\n  }\n\n  const addRemapping = ({ from, to }) => {\n    if (from.indexOf(\"*\") === -1) {\n      importsForPackageExports[from] = to\n      return\n    }\n\n    if (\n      from.endsWith(\"/*\") &&\n      to.endsWith(\"/*\") &&\n      // ensure ends with '*' AND there is only one '*' occurence\n      to.indexOf(\"*\") === to.length - 1\n    ) {\n      const fromWithouTrailingStar = from.slice(0, -1)\n      const toWithoutTrailingStar = to.slice(0, -1)\n      importsForPackageExports[fromWithouTrailingStar] = toWithoutTrailingStar\n      return\n    }\n\n    logger.warn(`Ignoring export using \"*\" because it is not supported by importmap.\n--- key ---\n${from}\n--- value ---\n${to}\n--- package.json path ---\n${packageFilePath}\n--- see also ---\nhttps://github.com/WICG/import-maps/issues/232`)\n  }\n\n  // exports used to indicate the main file\n  if (typeof packageExports === \"string\") {\n    addRemapping({\n      from: packageName,\n      to: addressToDestination(packageExports, packageDirectoryRelativeUrl),\n    })\n    return importsForPackageExports\n  }\n\n  if (typeof packageExports !== \"object\" || packageExports === null) {\n    logger.warn(`\nexports of package.json must be an object.\n--- package.json exports ---\n${packageExports}\n--- package.json path ---\n${packageFilePath}\n`)\n    return importsForPackageExports\n  }\n\n  const packageExportsKeys = Object.keys(packageExports)\n  const someSpecifierStartsWithDot = packageExportsKeys.some((key) => key.startsWith(\".\"))\n  if (someSpecifierStartsWithDot) {\n    const someSpecifierDoesNotStartsWithDot = packageExportsKeys.some((key) => !key.startsWith(\".\"))\n    if (someSpecifierDoesNotStartsWithDot) {\n      // see https://nodejs.org/dist/latest-v13.x/docs/api/esm.html#esm_exports_sugar\n      logger.error(`\nexports of package.json mixes conditional exports and direct exports.\n--- package.json path ---\n${packageFilePath}\n`)\n      return importsForPackageExports\n    }\n  }\n\n  packageExportsKeys.forEach((specifier) => {\n    if (!specifierIsRelative(specifier)) {\n      logger.warn(`\nfound unexpected specifier in exports of package.json, it must be relative to package.json.\n--- specifier ---\n${specifier}\n--- package.json path ---\n${packageFilePath}\n`)\n      return\n    }\n\n    const value = packageExports[specifier]\n    let address\n\n    if (typeof value === \"object\") {\n      address = readFavoredKey(value, packagesExportsPreference)\n\n      if (!address) {\n        return\n      }\n      if (typeof address === \"object\") {\n        address = readFavoredKey(address, packagesExportsPreference)\n        if (!address) {\n          return\n        }\n      }\n    } else if (typeof value === \"string\") {\n      address = value\n    } else {\n      logger.warn(`\nfound unexpected address in exports of package.json, it must be a string.\n--- address ---\n${address}\n--- specifier ---\n${specifier}\n--- package.json path ---\n${packageFilePath}\n`)\n      return\n    }\n\n    if (!specifierIsRelative(address)) {\n      logger.warn(`\nfound unexpected address in exports of package.json, it must be relative to package.json.\n--- address ---\n${address}\n--- specifier ---\n${specifier}\n--- package.json path ---\n${packageFilePath}\n`)\n      return\n    }\n\n    addRemapping({\n      from: specifierToSource(specifier, packageName),\n      to: addressToDestination(address, packageDirectoryRelativeUrl),\n    })\n  })\n\n  return importsForPackageExports\n}\n\nconst specifierToSource = (specifier, packageName) => {\n  if (specifier === \".\") {\n    return packageName\n  }\n\n  if (specifier[0] === \"/\") {\n    return specifier\n  }\n\n  if (specifier.startsWith(\"./\")) {\n    return `${packageName}${specifier.slice(1)}`\n  }\n\n  return `${packageName}/${specifier}`\n}\n\nconst addressToDestination = (address, packageDirectoryRelativeUrl) => {\n  if (address[0] === \"/\") {\n    return address\n  }\n\n  if (address.startsWith(\"./\")) {\n    return `./${packageDirectoryRelativeUrl}${address.slice(2)}`\n  }\n\n  return `./${packageDirectoryRelativeUrl}${address}`\n}\n\nconst readFavoredKey = (object, favoredKeys) => {\n  const favoredKey = favoredKeys.find((key) => object.hasOwnProperty(key))\n  if (favoredKey) {\n    return object[favoredKey]\n  }\n\n  if (object.hasOwnProperty(\"default\")) {\n    return object.default\n  }\n\n  return undefined\n}\n",
    "export const memoizeAsyncFunctionByUrl = (fn) => {\n  const cache = {}\n  return async (url, ...args) => {\n    const promiseFromCache = cache[url]\n    if (promiseFromCache) {\n      return promiseFromCache\n    }\n    let _resolve\n    let _reject\n    const promise = new Promise((resolve, reject) => {\n      _resolve = resolve\n      _reject = reject\n    })\n    cache[url] = promise\n    let value\n    let error\n    try {\n      value = fn(url, ...args)\n      error = false\n    } catch (e) {\n      value = e\n      error = true\n      delete cache[url]\n    }\n    if (error) {\n      _reject(error)\n    } else {\n      _resolve(value)\n    }\n    return promise\n  }\n}\n",
    "export const applyPackageManualOverride = (packageObject, packagesManualOverrides) => {\n  const { name, version } = packageObject\n  const overrideKey = Object.keys(packagesManualOverrides).find((overrideKeyCandidate) => {\n    if (name === overrideKeyCandidate) {\n      return true\n    }\n    if (`${name}@${version}` === overrideKeyCandidate) {\n      return true\n    }\n    return false\n  })\n  if (overrideKey) {\n    return composeObject(packageObject, packagesManualOverrides[overrideKey])\n  }\n  return packageObject\n}\n\nconst composeObject = (leftObject, rightObject) => {\n  const composedObject = {\n    ...leftObject,\n  }\n  Object.keys(rightObject).forEach((key) => {\n    const rightValue = rightObject[key]\n\n    if (rightValue === null || typeof rightValue !== \"object\" || key in leftObject === false) {\n      composedObject[key] = rightValue\n    } else {\n      const leftValue = leftObject[key]\n      if (leftValue === null || typeof leftValue !== \"object\") {\n        composedObject[key] = rightValue\n      } else {\n        composedObject[key] = composeObject(leftValue, rightValue)\n      }\n    }\n  })\n  return composedObject\n}\n",
    "import { readFile, urlToFileSystemPath } from \"@jsenv/util\"\nimport { applyPackageManualOverride } from \"./applyPackageManualOverride.js\"\n\nexport const PACKAGE_NOT_FOUND = {}\nexport const PACKAGE_WITH_SYNTAX_ERROR = {}\n\nexport const readPackageFile = async (packageFileUrl, packagesManualOverrides) => {\n  try {\n    const packageObject = await readFile(packageFileUrl, { as: \"json\" })\n    return applyPackageManualOverride(packageObject, packagesManualOverrides)\n  } catch (e) {\n    if (e.code === \"ENOENT\") {\n      return PACKAGE_NOT_FOUND\n    }\n\n    if (e.name === \"SyntaxError\") {\n      console.error(formatPackageSyntaxErrorLog({ syntaxError: e, packageFileUrl }))\n      return PACKAGE_WITH_SYNTAX_ERROR\n    }\n\n    throw e\n  }\n}\n\nconst formatPackageSyntaxErrorLog = ({ syntaxError, packageFileUrl }) => {\n  return `\nerror while parsing package.json.\n--- syntax error message ---\n${syntaxError.message}\n--- package.json path ---\n${urlToFileSystemPath(packageFileUrl)}\n`\n}\n",
    "import { firstOperationMatching } from \"@jsenv/cancellation\"\nimport { urlToRelativeUrl, resolveUrl } from \"@jsenv/util\"\nimport { memoizeAsyncFunctionByUrl } from \"./memoizeAsyncFunctionByUrl.js\"\nimport { readPackageFile, PACKAGE_NOT_FOUND, PACKAGE_WITH_SYNTAX_ERROR } from \"./readPackageFile.js\"\n\nexport const createFindNodeModulePackage = (packagesManualOverrides) => {\n  const readPackageFileMemoized = memoizeAsyncFunctionByUrl((packageFileUrl) => {\n    return readPackageFile(packageFileUrl, packagesManualOverrides)\n  })\n\n  return ({ projectDirectoryUrl, packageFileUrl, dependencyName }) => {\n    const nodeModuleCandidates = getNodeModuleCandidates(packageFileUrl, projectDirectoryUrl)\n\n    return firstOperationMatching({\n      array: nodeModuleCandidates,\n      start: async (nodeModuleCandidate) => {\n        const packageFileUrlCandidate = `${projectDirectoryUrl}${nodeModuleCandidate}${dependencyName}/package.json`\n        const packageObjectCandidate = await readPackageFileMemoized(packageFileUrlCandidate)\n        return {\n          packageFileUrl: packageFileUrlCandidate,\n          packageJsonObject: packageObjectCandidate,\n        }\n      },\n      predicate: ({ packageJsonObject }) => {\n        return (\n          packageJsonObject !== PACKAGE_NOT_FOUND && packageJsonObject !== PACKAGE_WITH_SYNTAX_ERROR\n        )\n      },\n    })\n  }\n}\n\nconst getNodeModuleCandidates = (fileUrl, projectDirectoryUrl) => {\n  const fileDirectoryUrl = resolveUrl(\"./\", fileUrl)\n\n  if (fileDirectoryUrl === projectDirectoryUrl) {\n    return [`node_modules/`]\n  }\n\n  const fileDirectoryRelativeUrl = urlToRelativeUrl(fileDirectoryUrl, projectDirectoryUrl)\n  const candidates = []\n  const relativeNodeModuleDirectoryArray = fileDirectoryRelativeUrl.split(\"node_modules/\")\n  // remove the first empty string\n  relativeNodeModuleDirectoryArray.shift()\n\n  let i = relativeNodeModuleDirectoryArray.length\n  while (i--) {\n    candidates.push(\n      `node_modules/${relativeNodeModuleDirectoryArray\n        .slice(0, i + 1)\n        .join(\"node_modules/\")}node_modules/`,\n    )\n  }\n\n  return [...candidates, \"node_modules/\"]\n}\n",
    "import { createLogger, createDetailedMessage } from \"@jsenv/logger\"\nimport { moveImportMap, sortImportMap } from \"@jsenv/import-map\"\nimport {\n  resolveUrl,\n  urlToRelativeUrl,\n  assertAndNormalizeDirectoryUrl,\n  urlToFileSystemPath,\n  urlToBasename,\n  readFile,\n} from \"@jsenv/util\"\nimport { resolvePackageMain } from \"./internal/resolvePackageMain.js\"\nimport { visitPackageImports } from \"./internal/visitPackageImports.js\"\nimport { visitPackageExports } from \"./internal/visitPackageExports.js\"\nimport { createFindNodeModulePackage } from \"./internal/node-module-resolution.js\"\n\nexport const getImportMapFromNodeModules = async ({\n  // nothing is actually listening for this cancellationToken for now\n  // it's not very important but it would be better to register on it\n  // an stops what we are doing if asked to do so\n  // cancellationToken = createCancellationTokenForProcess(),\n  logLevel,\n  projectDirectoryUrl,\n  rootProjectDirectoryUrl,\n  importMapFileRelativeUrl = \"./import-map.importmap\",\n\n  projectPackageDevDependenciesIncluded = process.env.NODE_ENV !== \"production\",\n  packagesExportsPreference = [\"import\", \"browser\"],\n  packagesExportsIncluded = true,\n  packagesSelfReference = true,\n  packagesImportsIncluded = true,\n  packagesManualOverrides = {},\n  packageIncludedPredicate = () => true,\n}) => {\n  const logger = createLogger({ logLevel })\n\n  projectDirectoryUrl = assertAndNormalizeDirectoryUrl(projectDirectoryUrl)\n  if (typeof rootProjectDirectoryUrl === \"undefined\") {\n    rootProjectDirectoryUrl = projectDirectoryUrl\n  } else {\n    rootProjectDirectoryUrl = assertAndNormalizeDirectoryUrl(rootProjectDirectoryUrl)\n  }\n\n  const projectPackageFileUrl = resolveUrl(\"./package.json\", projectDirectoryUrl)\n  const rootProjectPackageFileUrl = resolveUrl(\"./package.json\", rootProjectDirectoryUrl)\n  const findNodeModulePackage = createFindNodeModulePackage(packagesManualOverrides)\n\n  const imports = {}\n  const scopes = {}\n  const seen = {}\n\n  const markPackageAsSeen = (packageFileUrl, importerPackageFileUrl) => {\n    if (packageFileUrl in seen) {\n      seen[packageFileUrl].push(importerPackageFileUrl)\n    } else {\n      seen[packageFileUrl] = [importerPackageFileUrl]\n    }\n  }\n\n  const packageIsSeen = (packageFileUrl, importerPackageFileUrl) => {\n    return packageFileUrl in seen && seen[packageFileUrl].includes(importerPackageFileUrl)\n  }\n\n  const visit = async ({\n    packageFileUrl,\n    packageName,\n    packageJsonObject,\n    importerPackageFileUrl,\n    importerPackageJsonObject,\n    includeDevDependencies,\n  }) => {\n    if (!packageIncludedPredicate({ packageName, packageFileUrl, packageJsonObject })) {\n      return\n    }\n\n    await visitDependencies({\n      packageFileUrl,\n      packageJsonObject,\n      includeDevDependencies,\n    })\n    await visitPackage({\n      packageFileUrl,\n      packageName,\n      packageJsonObject,\n      importerPackageFileUrl,\n      importerPackageJsonObject,\n    })\n  }\n\n  const visitPackage = async ({\n    packageFileUrl,\n    packageName,\n    packageJsonObject,\n    importerPackageFileUrl,\n    importerPackageJsonObject,\n  }) => {\n    const packageInfo = computePackageInfo({\n      packageFileUrl,\n      packageName,\n      importerPackageFileUrl,\n    })\n\n    await visitPackageMain({\n      packageFileUrl,\n      packageName,\n      packageJsonObject,\n      packageInfo,\n    })\n\n    if (packagesImportsIncluded && \"imports\" in packageJsonObject) {\n      const importsForPackageImports = visitPackageImports({\n        logger,\n        packageFileUrl,\n        packageName,\n        packageJsonObject,\n        packageInfo,\n      })\n\n      const { packageIsRoot, packageDirectoryRelativeUrl } = packageInfo\n      Object.keys(importsForPackageImports).forEach((from) => {\n        const to = importsForPackageImports[from]\n\n        if (packageIsRoot) {\n          addTopLevelImportMapping({ from, to })\n        } else {\n          const toScoped =\n            to[0] === \"/\"\n              ? to\n              : `./${packageDirectoryRelativeUrl}${to.startsWith(\"./\") ? to.slice(2) : to}`\n\n          addScopedImportMapping({\n            scope: `./${packageDirectoryRelativeUrl}`,\n            from,\n            to: toScoped,\n          })\n\n          // when a package says './' maps to './'\n          // we must add something to say if we are already inside the package\n          // no need to ensure leading slash are scoped to the package\n          if (from === \"./\" && to === \"./\") {\n            addScopedImportMapping({\n              scope: `./${packageDirectoryRelativeUrl}`,\n              from: `./${packageDirectoryRelativeUrl}`,\n              to: `./${packageDirectoryRelativeUrl}`,\n            })\n          } else if (from === \"/\" && to === \"/\") {\n            addScopedImportMapping({\n              scope: `./${packageDirectoryRelativeUrl}`,\n              from: `./${packageDirectoryRelativeUrl}`,\n              to: `./${packageDirectoryRelativeUrl}`,\n            })\n          }\n        }\n      })\n    }\n\n    if (packagesSelfReference) {\n      const { packageIsRoot, packageDirectoryRelativeUrl } = packageInfo\n\n      // allow import 'package-name/dir/file.js' in package-name files\n      if (packageIsRoot) {\n        addTopLevelImportMapping({\n          from: `${packageName}/`,\n          to: `./${packageDirectoryRelativeUrl}`,\n        })\n      }\n      // scoped allow import 'package-name/dir/file.js' in package-name files\n      else {\n        addScopedImportMapping({\n          scope: `./${packageDirectoryRelativeUrl}`,\n          from: `${packageName}/`,\n          to: `./${packageDirectoryRelativeUrl}`,\n        })\n      }\n    }\n\n    if (packagesExportsIncluded && \"exports\" in packageJsonObject) {\n      const importsForPackageExports = visitPackageExports({\n        logger,\n        packageFileUrl,\n        packageName,\n        packageJsonObject,\n        packageInfo,\n        packagesExportsPreference,\n      })\n\n      const {\n        importerIsRoot,\n        importerRelativeUrl,\n        packageIsRoot,\n        packageDirectoryRelativeUrl,\n        // packageDirectoryUrl,\n        // packageDirectoryUrlExpected,\n      } = packageInfo\n\n      if (packageIsRoot && packagesSelfReference) {\n        Object.keys(importsForPackageExports).forEach((from) => {\n          const to = importsForPackageExports[from]\n          addTopLevelImportMapping({\n            from,\n            to,\n          })\n        })\n      } else if (packageIsRoot) {\n        // ignore exports\n      } else {\n        Object.keys(importsForPackageExports).forEach((from) => {\n          const to = importsForPackageExports[from]\n\n          // own package exports available to himself\n          if (importerIsRoot) {\n            // importer is the package himself, keep exports scoped\n            // otherwise the dependency exports would override the package exports.\n            if (importerPackageJsonObject.name === packageName) {\n              addScopedImportMapping({\n                scope: `./${packageDirectoryRelativeUrl}`,\n                from,\n                to,\n              })\n              if (from === packageName || from in imports === false) {\n                addTopLevelImportMapping({ from, to })\n              }\n            } else {\n              addTopLevelImportMapping({ from, to })\n            }\n          } else {\n            addScopedImportMapping({\n              scope: `./${packageDirectoryRelativeUrl}`,\n              from,\n              to,\n            })\n          }\n\n          // now make package exports available to the importer\n          // if importer is root no need because the top level remapping does it\n          if (importerIsRoot) {\n            return\n          }\n\n          // now make it available to the importer\n          // here if the importer is himself we could do stuff\n          // we should even handle the case earlier to prevent top level remapping\n          addScopedImportMapping({ scope: `./${importerRelativeUrl}`, from, to })\n        })\n      }\n    }\n  }\n\n  const visitPackageMain = async ({\n    packageFileUrl,\n    packageName,\n    packageJsonObject,\n    packageInfo: {\n      importerIsRoot,\n      importerRelativeUrl,\n      packageIsRoot,\n      packageIsProject,\n      packageDirectoryUrl,\n      packageDirectoryUrlExpected,\n    },\n  }) => {\n    const self = packageIsRoot || packageIsProject\n    if (self && !packagesSelfReference) return\n\n    const mainFileUrl = await resolvePackageMain({\n      packageFileUrl,\n      packageJsonObject,\n      logger,\n    })\n\n    // it's possible to have no main\n    // like { main: \"\" } in package.json\n    // or a main that does not lead to an actual file\n    if (mainFileUrl === null) return\n\n    const mainFileRelativeUrl = urlToRelativeUrl(mainFileUrl, rootProjectDirectoryUrl)\n    const from = packageName\n    const to = `./${mainFileRelativeUrl}`\n\n    if (importerIsRoot) {\n      addTopLevelImportMapping({ from, to })\n    } else {\n      addScopedImportMapping({ scope: `./${importerRelativeUrl}`, from, to })\n    }\n    if (packageDirectoryUrl !== packageDirectoryUrlExpected) {\n      addScopedImportMapping({ scope: `./${importerRelativeUrl}`, from, to })\n    }\n  }\n\n  const visitDependencies = async ({\n    packageFileUrl,\n    packageJsonObject,\n    includeDevDependencies,\n  }) => {\n    const dependencyMap = packageDependenciesFromPackageObject(packageJsonObject, {\n      includeDevDependencies,\n    })\n\n    await Promise.all(\n      Object.keys(dependencyMap).map(async (dependencyName) => {\n        const dependencyInfo = dependencyMap[dependencyName]\n        await visitDependency({\n          packageFileUrl,\n          packageJsonObject,\n          dependencyName,\n          dependencyInfo,\n        })\n      }),\n    )\n  }\n\n  const visitDependency = async ({\n    packageFileUrl,\n    packageJsonObject,\n    dependencyName,\n    dependencyInfo,\n  }) => {\n    const dependencyData = await findDependency({\n      packageFileUrl,\n      dependencyName,\n    })\n    if (!dependencyData) {\n      logger[dependencyInfo.isOptional ? \"debug\" : \"warn\"](\n        formatCannotFindPackageLog({\n          dependencyName,\n          dependencyInfo,\n          packageFileUrl,\n        }),\n      )\n\n      return\n    }\n\n    const {\n      packageFileUrl: dependencyPackageFileUrl,\n      packageJsonObject: dependencyPackageJsonObject,\n    } = dependencyData\n\n    if (packageIsSeen(dependencyPackageFileUrl, packageFileUrl)) {\n      return\n    }\n    markPackageAsSeen(dependencyPackageFileUrl, packageFileUrl)\n    await visit({\n      packageFileUrl: dependencyPackageFileUrl,\n      packageName: dependencyName,\n      packageJsonObject: dependencyPackageJsonObject,\n      importerPackageFileUrl: packageFileUrl,\n      importerPackageJsonObject: packageJsonObject,\n    })\n  }\n\n  const computePackageInfo = ({ packageFileUrl, packageName, importerPackageFileUrl }) => {\n    const importerIsRoot = importerPackageFileUrl === rootProjectPackageFileUrl\n\n    const importerIsProject = importerPackageFileUrl === projectPackageFileUrl\n\n    const importerPackageDirectoryUrl = resolveUrl(\"./\", importerPackageFileUrl)\n\n    const importerRelativeUrl = importerIsRoot\n      ? `${urlToBasename(rootProjectDirectoryUrl.slice(0, -1))}/`\n      : urlToRelativeUrl(importerPackageDirectoryUrl, rootProjectDirectoryUrl)\n\n    const packageIsRoot = packageFileUrl === rootProjectPackageFileUrl\n\n    const packageIsProject = packageFileUrl === projectPackageFileUrl\n\n    const packageDirectoryUrl = resolveUrl(\"./\", packageFileUrl)\n\n    let packageDirectoryUrlExpected\n    if (packageIsProject && !packageIsRoot) {\n      packageDirectoryUrlExpected = importerPackageDirectoryUrl\n    } else {\n      packageDirectoryUrlExpected = `${importerPackageDirectoryUrl}node_modules/${packageName}/`\n    }\n\n    const packageDirectoryRelativeUrl = urlToRelativeUrl(\n      packageDirectoryUrl,\n      rootProjectDirectoryUrl,\n    )\n\n    return {\n      importerIsRoot,\n      importerIsProject,\n      importerRelativeUrl,\n      packageIsRoot,\n      packageIsProject,\n      packageDirectoryUrl,\n      packageDirectoryUrlExpected,\n      packageDirectoryRelativeUrl,\n    }\n  }\n\n  const addTopLevelImportMapping = ({ from, to }) => {\n    // we could think it's useless to remap from with to\n    // however it can be used to ensure a weaker remapping\n    // does not win over this specific file or folder\n    if (from === to) {\n      /**\n       * however remapping '/' to '/' is truly useless\n       * moreover it would make wrapImportMap create something like\n       * {\n       *   imports: {\n       *     \"/\": \"/.dist/best/\"\n       *   }\n       * }\n       * that would append the wrapped folder twice\n       * */\n      if (from === \"/\") return\n    }\n\n    imports[from] = to\n  }\n\n  const addScopedImportMapping = ({ scope, from, to }) => {\n    scopes[scope] = {\n      ...(scopes[scope] || {}),\n      [from]: to,\n    }\n  }\n\n  const dependenciesCache = {}\n  const findDependency = ({ packageFileUrl, dependencyName }) => {\n    if (packageFileUrl in dependenciesCache === false) {\n      dependenciesCache[packageFileUrl] = {}\n    }\n    if (dependencyName in dependenciesCache[packageFileUrl]) {\n      return dependenciesCache[packageFileUrl][dependencyName]\n    }\n    const dependencyPromise = findNodeModulePackage({\n      projectDirectoryUrl: rootProjectDirectoryUrl,\n      packageFileUrl,\n      dependencyName,\n    })\n    dependenciesCache[packageFileUrl][dependencyName] = dependencyPromise\n    return dependencyPromise\n  }\n\n  const projectPackageJsonObject = await readFile(projectPackageFileUrl, { as: \"json\" })\n  const importerPackageFileUrl = projectPackageFileUrl\n  markPackageAsSeen(projectPackageFileUrl, importerPackageFileUrl)\n\n  const packageName = projectPackageJsonObject.name\n  if (typeof packageName !== \"string\") {\n    logger.warn(\n      formatUnexpectedPackageNameLog({ packageName, packageFileUrl: projectPackageFileUrl }),\n    )\n    return {}\n  }\n\n  await visit({\n    packageFileUrl: projectPackageFileUrl,\n    packageName: projectPackageJsonObject.name,\n    packageJsonObject: projectPackageJsonObject,\n    importerPackageFileUrl,\n    importerPackageJsonObject: null,\n    includeDevDependencies: projectPackageDevDependenciesIncluded,\n  })\n\n  // remove useless duplicates (scoped key+value already defined on imports)\n  Object.keys(scopes).forEach((key) => {\n    const scopedImports = scopes[key]\n    Object.keys(scopedImports).forEach((scopedImportKey) => {\n      if (\n        scopedImportKey in imports &&\n        imports[scopedImportKey] === scopedImports[scopedImportKey]\n      ) {\n        delete scopedImports[scopedImportKey]\n      }\n    })\n    if (Object.keys(scopedImports).length === 0) {\n      delete scopes[key]\n    }\n  })\n\n  // The importmap generated at this point is relative to the project directory url\n  // In other words if you want to use that importmap you have to put it\n  // inside projectDirectoryUrl (it cannot be nested in a subdirectory).\n  let importMap = { imports, scopes }\n  if (importMapFileRelativeUrl) {\n    // When there is an importMapFileRelativeUrl we will make remapping relative\n    // to the importmap file future location (where user will write it).\n    // This allows to put the importmap anywhere inside the projectDirectoryUrl.\n    // (If possible prefer to have it top level to avoid too many ../\n    const importMapProjectUrl = resolveUrl(\"project.importmap\", projectDirectoryUrl)\n    const importMapRealUrl = resolveUrl(importMapFileRelativeUrl, projectDirectoryUrl)\n    importMap = moveImportMap(importMap, importMapProjectUrl, importMapRealUrl)\n  }\n  importMap = sortImportMap(importMap)\n\n  return importMap\n}\n\nconst packageDependenciesFromPackageObject = (packageObject, { includeDevDependencies }) => {\n  const packageDependencies = {}\n\n  const { dependencies = {} } = packageObject\n  // https://npm.github.io/using-pkgs-docs/package-json/types/optionaldependencies.html\n  const { optionalDependencies = {} } = packageObject\n  Object.keys(dependencies).forEach((dependencyName) => {\n    packageDependencies[dependencyName] = {\n      type: \"dependency\",\n      isOptional: dependencyName in optionalDependencies,\n      versionPattern: dependencies[dependencyName],\n    }\n  })\n\n  const { peerDependencies = {} } = packageObject\n  const { peerDependenciesMeta = {} } = packageObject\n  Object.keys(peerDependencies).forEach((dependencyName) => {\n    packageDependencies[dependencyName] = {\n      type: \"peerDependency\",\n      versionPattern: peerDependencies[dependencyName],\n      isOptional:\n        dependencyName in peerDependenciesMeta && peerDependenciesMeta[dependencyName].optional,\n    }\n  })\n\n  if (includeDevDependencies) {\n    const { devDependencies = {} } = packageObject\n    Object.keys(devDependencies).forEach((dependencyName) => {\n      if (!packageDependencies.hasOwnProperty(dependencyName)) {\n        packageDependencies[dependencyName] = {\n          type: \"devDependency\",\n          versionPattern: devDependencies[dependencyName],\n        }\n      }\n    })\n  }\n\n  return packageDependencies\n}\n\nconst formatUnexpectedPackageNameLog = ({ packageName, packageFileUrl }) => {\n  return `\npackage name field must be a string\n--- package name field ---\n${packageName}\n--- package.json file path ---\n${packageFileUrl}\n`\n}\n\nconst formatCannotFindPackageLog = ({ dependencyName, dependencyInfo, packageFileUrl }) => {\n  const dependencyIsOptional = dependencyInfo.isOptional\n  const dependencyType = dependencyInfo.type\n  const dependencyVersionPattern = dependencyInfo.versionPattern\n  const detailedMessage = createDetailedMessage(\n    dependencyIsOptional\n      ? `cannot find an optional ${dependencyType}.`\n      : `cannot find a ${dependencyType}.`,\n    {\n      [dependencyType]: `${dependencyName}@${dependencyVersionPattern}`,\n      \"required by\": urlToFileSystemPath(packageFileUrl),\n    },\n  )\n  return `\n${detailedMessage}\n`\n}\n",
    "import { readFile, assertAndNormalizeFileUrl } from \"@jsenv/util\"\n\nexport const getImportMapFromFile = async (importMapFilePath) => {\n  const importMapFileUrl = assertAndNormalizeFileUrl(importMapFilePath)\n  const importMapFileContent = await readFile(importMapFileUrl)\n  const importMap = JSON.parse(importMapFileContent)\n  return importMap\n}\n",
    "export const importMapToVsCodeConfigPaths = ({ imports = {} }) => {\n  const paths = {}\n\n  Object.keys(imports).forEach((importKey) => {\n    const importValue = imports[importKey]\n\n    let key\n    if (importKey.endsWith(\"/\")) {\n      key = `${importKey}*`\n    } else {\n      key = importKey\n    }\n\n    const importValueArray = typeof importValue === \"string\" ? [importValue] : importValue\n    const candidatesForPath = importValueArray.map((importValue) => {\n      if (importValue.endsWith(\"/\")) {\n        return `${importValue}*`\n      }\n      return importValue\n    })\n\n    if (key in paths) {\n      paths[key] = [...paths[key], ...candidatesForPath]\n    } else {\n      paths[key] = candidatesForPath\n    }\n  })\n\n  return paths\n}\n",
    "import {\n  resolveUrl,\n  urlToFileSystemPath,\n  assertAndNormalizeDirectoryUrl,\n  writeFile,\n} from \"@jsenv/util\"\nimport { composeTwoImportMaps } from \"@jsenv/import-map\"\nimport { importMapToVsCodeConfigPaths } from \"./internal/importMapToVsCodeConfigPaths.js\"\n\nexport const generateImportMapForProject = async (\n  importMapInputs = [],\n  {\n    projectDirectoryUrl,\n\n    importMapFile = true, // in case someone wants the importmap but not write it on filesystem\n    importMapFileRelativeUrl = \"./import-map.importmap\",\n    importMapFileLog = true,\n\n    jsConfigFile = false, // not yet documented, makes vscode aware of the import remapping\n    jsConfigFileLog = true,\n    jsConfigLeadingSlash = false,\n    jsConfigBase = {},\n  },\n) => {\n  projectDirectoryUrl = assertAndNormalizeDirectoryUrl(projectDirectoryUrl)\n\n  if (importMapInputs.length === 0) {\n    console.warn(`importMapInputs is empty, the generated importmap will be empty`)\n  }\n\n  const importMaps = await Promise.all(importMapInputs)\n\n  const importMap = importMaps.reduce((previous, current) => {\n    return composeTwoImportMaps(previous, current)\n  }, {})\n\n  if (importMapFile) {\n    const importMapFileUrl = resolveUrl(importMapFileRelativeUrl, projectDirectoryUrl)\n    await writeFile(importMapFileUrl, JSON.stringify(importMap, null, \"  \"))\n    if (importMapFileLog) {\n      console.info(`-> ${urlToFileSystemPath(importMapFileUrl)}`)\n    }\n  }\n  if (jsConfigFile) {\n    const jsConfigFileUrl = resolveUrl(\"./jsconfig.json\", projectDirectoryUrl)\n    try {\n      const jsConfig = {\n        compilerOptions: {\n          baseUrl: \".\",\n          ...jsConfigBase,\n          paths: {\n            ...(jsConfigLeadingSlash ? { \"/*\": [\"./*\"] } : {}),\n            ...importMapToVsCodeConfigPaths(importMap),\n          },\n        },\n      }\n      await writeFile(jsConfigFileUrl, JSON.stringify(jsConfig, null, \"  \"))\n      if (jsConfigFileLog) {\n        console.info(`-> ${urlToFileSystemPath(jsConfigFileUrl)}`)\n      }\n    } catch (e) {\n      if (e.code !== \"ENOENT\") {\n        throw e\n      }\n    }\n  }\n\n  return importMap\n}\n"
  ],
  "names": [
    "resolveFile",
    "fileUrl",
    "magicExtensions",
    "fileStat",
    "readFileSystemNodeStat",
    "nullIfNotFound",
    "isFile",
    "isDirectory",
    "indexFileSuffix",
    "endsWith",
    "indexFileUrl",
    "extensionLeadingToAFile",
    "findExtensionLeadingToFile",
    "extension",
    "urlToExtension",
    "fileDirectoryUrl",
    "resolveUrl",
    "fileBasename",
    "urlToBasename",
    "extensionLeadingToFile",
    "firstOperationMatching",
    "array",
    "start",
    "extensionCandidate",
    "filePathCandidate",
    "stats",
    "predicate",
    "Boolean",
    "resolvePackageMain",
    "logger",
    "packageFileUrl",
    "packageJsonObject",
    "resolveMainFile",
    "packageMainFieldName",
    "packageMainFieldValue",
    "module",
    "main",
    "packageFilePath",
    "urlToFileSystemPath",
    "packageDirectoryUrl",
    "mainFileRelativeUrl",
    "mainFileUrlFirstCandidate",
    "startsWith",
    "warn",
    "mainFileUrl",
    "formatFileNotFoundLog",
    "specifier",
    "importedIn",
    "createDetailedMessage",
    "join",
    "specifierIsRelative",
    "test",
    "visitPackageImports",
    "importsForPackageImports",
    "imports",
    "packageImports",
    "Object",
    "keys",
    "forEach",
    "address",
    "from",
    "to",
    "visitPackageExports",
    "packageName",
    "packageInfo",
    "packageDirectoryRelativeUrl",
    "packagesExportsPreference",
    "importsForPackageExports",
    "exports",
    "packageExports",
    "addRemapping",
    "indexOf",
    "length",
    "fromWithouTrailingStar",
    "slice",
    "toWithoutTrailingStar",
    "addressToDestination",
    "packageExportsKeys",
    "someSpecifierStartsWithDot",
    "some",
    "key",
    "someSpecifierDoesNotStartsWithDot",
    "error",
    "value",
    "readFavoredKey",
    "specifierToSource",
    "object",
    "favoredKeys",
    "favoredKey",
    "find",
    "hasOwnProperty",
    "default",
    "undefined",
    "memoizeAsyncFunctionByUrl",
    "fn",
    "cache",
    "url",
    "args",
    "promiseFromCache",
    "_resolve",
    "_reject",
    "promise",
    "Promise",
    "resolve",
    "reject",
    "e",
    "applyPackageManualOverride",
    "packageObject",
    "packagesManualOverrides",
    "name",
    "version",
    "overrideKey",
    "overrideKeyCandidate",
    "composeObject",
    "leftObject",
    "rightObject",
    "composedObject",
    "rightValue",
    "leftValue",
    "PACKAGE_NOT_FOUND",
    "PACKAGE_WITH_SYNTAX_ERROR",
    "readPackageFile",
    "readFile",
    "as",
    "code",
    "console",
    "formatPackageSyntaxErrorLog",
    "syntaxError",
    "message",
    "createFindNodeModulePackage",
    "readPackageFileMemoized",
    "projectDirectoryUrl",
    "dependencyName",
    "nodeModuleCandidates",
    "getNodeModuleCandidates",
    "nodeModuleCandidate",
    "packageFileUrlCandidate",
    "packageObjectCandidate",
    "fileDirectoryRelativeUrl",
    "urlToRelativeUrl",
    "candidates",
    "relativeNodeModuleDirectoryArray",
    "split",
    "shift",
    "i",
    "push",
    "getImportMapFromNodeModules",
    "logLevel",
    "rootProjectDirectoryUrl",
    "importMapFileRelativeUrl",
    "projectPackageDevDependenciesIncluded",
    "packagesExportsIncluded",
    "packagesSelfReference",
    "packagesImportsIncluded",
    "packageIncludedPredicate",
    "createLogger",
    "assertAndNormalizeDirectoryUrl",
    "projectPackageFileUrl",
    "rootProjectPackageFileUrl",
    "findNodeModulePackage",
    "scopes",
    "seen",
    "markPackageAsSeen",
    "importerPackageFileUrl",
    "packageIsSeen",
    "includes",
    "visit",
    "importerPackageJsonObject",
    "includeDevDependencies",
    "visitDependencies",
    "visitPackage",
    "computePackageInfo",
    "visitPackageMain",
    "packageIsRoot",
    "addTopLevelImportMapping",
    "toScoped",
    "addScopedImportMapping",
    "scope",
    "importerIsRoot",
    "importerRelativeUrl",
    "packageIsProject",
    "packageDirectoryUrlExpected",
    "self",
    "dependencyMap",
    "packageDependenciesFromPackageObject",
    "all",
    "map",
    "dependencyInfo",
    "visitDependency",
    "dependencyData",
    "findDependency",
    "isOptional",
    "formatCannotFindPackageLog",
    "dependencyPackageFileUrl",
    "dependencyPackageJsonObject",
    "importerIsProject",
    "importerPackageDirectoryUrl",
    "dependenciesCache",
    "dependencyPromise",
    "projectPackageJsonObject",
    "formatUnexpectedPackageNameLog",
    "scopedImports",
    "scopedImportKey",
    "importMap",
    "importMapProjectUrl",
    "importMapRealUrl",
    "moveImportMap",
    "sortImportMap",
    "packageDependencies",
    "dependencies",
    "optionalDependencies",
    "type",
    "versionPattern",
    "peerDependencies",
    "peerDependenciesMeta",
    "optional",
    "devDependencies",
    "dependencyIsOptional",
    "dependencyType",
    "dependencyVersionPattern",
    "detailedMessage",
    "getImportMapFromFile",
    "importMapFilePath",
    "importMapFileUrl",
    "assertAndNormalizeFileUrl",
    "importMapFileContent",
    "JSON",
    "parse",
    "importMapToVsCodeConfigPaths",
    "paths",
    "importKey",
    "importValue",
    "importValueArray",
    "candidatesForPath",
    "generateImportMapForProject",
    "importMapInputs",
    "importMapFile",
    "importMapFileLog",
    "jsConfigFile",
    "jsConfigFileLog",
    "jsConfigLeadingSlash",
    "jsConfigBase",
    "importMaps",
    "reduce",
    "previous",
    "current",
    "composeTwoImportMaps",
    "writeFile",
    "stringify",
    "info",
    "jsConfigFileUrl",
    "jsConfig",
    "compilerOptions",
    "baseUrl"
  ],
  "mappings": "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"
}