{
  "version": 3,
  "file": "jsenv_node_module_importmap.cjs",
  "sources": [
    "../../src/internal/memoizeAsyncFunction.js",
    "../../node_modules/@jsenv/core/helpers/import-meta/import-meta-url-commonjs.js",
    "../../src/internal/from-js/parseSpecifiersFromFile.js",
    "../../src/internal/from-js/showSource.js",
    "../../src/internal/resolveFile.js",
    "../../src/internal/from-js/getImportMapFromJsFiles.js",
    "../../src/internal/optimizeImportMap.js",
    "../../src/internal/from-package/resolvePackageMain.js",
    "../../src/internal/from-package/visitPackageImportMap.js",
    "../../src/internal/from-package/specifierIsRelative.js",
    "../../src/internal/from-package/visitPackageImports.js",
    "../../src/internal/from-package/visitPackageExports.js",
    "../../src/internal/from-package/applyPackageManualOverride.js",
    "../../src/internal/from-package/readPackageFile.js",
    "../../src/internal/from-package/node-module-resolution.js",
    "../../src/internal/from-package/getImportMapFromPackageFiles.js",
    "../../src/getImportMapFromProjectFiles.js",
    "../../src/getImportMapFromFile.js",
    "../../src/internal/importMapToVsCodeConfigPaths.js",
    "../../src/writeImportMapFile.js"
  ],
  "sourcesContent": [
    "export const memoizeAsyncFunctionByUrl = (fn) => {\n  const cache = {}\n  return memoizeAsyncFunction(fn, {\n    getMemoryEntryFromArguments: ([url]) => {\n      return {\n        get: () => {\n          return cache[url]\n        },\n        set: (promise) => {\n          cache[url] = promise\n        },\n        delete: () => {\n          delete cache[url]\n        },\n      }\n    },\n  })\n}\n\nexport const memoizeAsyncFunctionBySpecifierAndImporter = (fn) => {\n  const importerCache = {}\n  return memoizeAsyncFunction(fn, {\n    getMemoryEntryFromArguments: ([specifier, importer]) => {\n      return {\n        get: () => {\n          const specifierCacheForImporter = importerCache[importer]\n          return specifierCacheForImporter ? specifierCacheForImporter[specifier] : null\n        },\n        set: (promise) => {\n          const specifierCacheForImporter = importerCache[importer]\n          if (specifierCacheForImporter) {\n            specifierCacheForImporter[specifier] = promise\n          } else {\n            importerCache[importer] = {\n              [specifier]: promise,\n            }\n          }\n        },\n        delete: () => {\n          const specifierCacheForImporter = importerCache[importer]\n          if (specifierCacheForImporter) {\n            delete specifierCacheForImporter[specifier]\n          }\n        },\n      }\n    },\n  })\n}\n\nconst memoizeAsyncFunction = (fn, { getMemoryEntryFromArguments }) => {\n  const memoized = async (...args) => {\n    const memoryEntry = getMemoryEntryFromArguments(args)\n    const promiseFromMemory = memoryEntry.get()\n    if (promiseFromMemory) {\n      return promiseFromMemory\n    }\n    const { promise, resolve, reject } = createControllablePromise()\n    memoryEntry.set(promise)\n    let value\n    let error\n    try {\n      value = fn(...args)\n      error = false\n    } catch (e) {\n      value = e\n      error = true\n      memoryEntry.delete()\n    }\n    if (error) {\n      reject(error)\n    } else {\n      resolve(value)\n    }\n    return promise\n  }\n  memoized.isInMemory = (...args) => {\n    return Boolean(getMemoryEntryFromArguments(args).get())\n  }\n  return memoized\n}\n\nconst createControllablePromise = () => {\n  let resolve\n  let reject\n  const promise = new Promise((res, rej) => {\n    resolve = res\n    reject = rej\n  })\n  return { promise, resolve, reject }\n}\n",
    "/* global __filename */\n\nconst filenameContainsBackSlashes = __filename.indexOf(\"\\\\\") > -1\n\nconst url = filenameContainsBackSlashes\n  ? `file:///${__filename.replace(/\\\\/g, \"/\")}`\n  : `file://${__filename}`\n\nexport default url\n",
    "import { createRequire } from \"module\"\nimport { readFile, urlToFileSystemPath } from \"@jsenv/util\"\n\nconst require = createRequire(import.meta.url)\n\nconst parser = require(\"@babel/parser\")\nconst traverse = require(\"@babel/traverse\")\n\nexport const parseSpecifiersFromFile = async (\n  fileUrl,\n  {\n    fileContent,\n    sourceType = \"module\",\n    allowImportExportEverywhere = true,\n    allowAwaitOutsideFunction = true,\n    ranges = true,\n    jsx = true,\n    typescript = fileUrl.endsWith(\".ts\") || fileUrl.endsWith(\".tsx\"),\n    flow = false,\n    ...options\n  } = {},\n) => {\n  fileContent = fileContent === undefined ? await readFile(fileUrl, { as: \"string\" }) : fileContent\n\n  const ast = parser.parse(fileContent, {\n    sourceType,\n    sourceFilename: urlToFileSystemPath(fileUrl),\n    allowImportExportEverywhere,\n    allowAwaitOutsideFunction,\n    ranges,\n    plugins: [\n      // \"estree\",\n      \"topLevelAwait\",\n      \"exportDefaultFrom\",\n      ...(jsx ? [\"jsx\"] : []),\n      ...(typescript ? [\"typescript\"] : []),\n      ...(flow ? [\"flow\"] : []),\n    ],\n    ...options,\n  })\n\n  const specifiers = {}\n\n  const addSpecifier = ({ path, type }) => {\n    const specifier = path.node.value\n    specifiers[specifier] = {\n      line: path.node.loc.start.line,\n      column: path.node.loc.start.column,\n      type,\n    }\n  }\n\n  traverse.default(ast, {\n    // ImportExpression: (path) => {\n    //   if (path.node.arguments[0].type !== \"StringLiteral\") {\n    //     // Non-string argument, probably a variable or expression, e.g.\n    //     // import(moduleId)\n    //     // import('./' + moduleName)\n    //     return\n    //   }\n    //   addSpecifier(path.get(\"arguments\")[0])\n    // },\n    CallExpression: (path) => {\n      if (path.node.callee.type !== \"Import\") {\n        // Some other function call, not import();\n        return\n      }\n      if (path.node.arguments[0].type !== \"StringLiteral\") {\n        // Non-string argument, probably a variable or expression, e.g.\n        // import(moduleId)\n        // import('./' + moduleName)\n        return\n      }\n      addSpecifier({\n        path: path.get(\"arguments\")[0],\n        type: \"import-dynamic\",\n      })\n    },\n    ExportAllDeclaration: (path) => {\n      addSpecifier({\n        path: path.get(\"source\"),\n        type: \"export-all\",\n      })\n    },\n    ExportNamedDeclaration: (path) => {\n      if (!path.node.source) {\n        // This export has no \"source\", so it's probably\n        // a local variable or function, e.g.\n        // export { varName }\n        // export const constName = ...\n        // export function funcName() {}\n        return\n      }\n      addSpecifier({\n        path: path.get(\"source\"),\n        type: \"export-named\",\n      })\n    },\n    ImportDeclaration: (path) => {\n      addSpecifier({\n        path: path.get(\"source\"),\n        type: \"import-static\",\n      })\n    },\n  })\n\n  return specifiers\n}\n",
    "// https://github.com/postcss/postcss/blob/fd30d3df5abc0954a0ec642a3cdc644ab2aacf9c/lib/css-syntax-error.js#L43\n// https://github.com/postcss/postcss/blob/fd30d3df5abc0954a0ec642a3cdc644ab2aacf9c/lib/terminal-highlight.js#L50\n// https://github.com/babel/babel/blob/eea156b2cb8deecfcf82d52aa1b71ba4995c7d68/packages/babel-code-frame/src/index.js#L1\n\nexport const showSource = ({ url, line, column, source }) => {\n  let message = \"\"\n\n  message += typeof url === \"undefined\" ? \"Anonymous\" : url\n  if (typeof line !== \"number\") {\n    return message\n  }\n\n  message += `:${line}`\n  if (typeof column === \"number\") {\n    message += `:${column}`\n  }\n\n  if (!source) {\n    return message\n  }\n\n  return `${message}\n${showSourceLocation(source, {\n  line,\n  column,\n})}`\n}\n\nconst red = \"\\x1b[31m\"\nconst grey = \"\\x1b[39m\"\nconst ansiResetSequence = \"\\x1b[0m\"\n\nconst showSourceLocation = (\n  source,\n  {\n    line,\n    column,\n    numberOfSurroundingLinesToShow = 1,\n    lineMaxLength = 120,\n    color = false,\n    markColor = red,\n    asideColor = grey,\n    colorMark = (string) => `${markColor}${string}${ansiResetSequence}`,\n    colorAside = (string) => `${asideColor}${string}${ansiResetSequence}`,\n  },\n) => {\n  const mark = color ? colorMark : (string) => string\n  const aside = color ? colorAside : (string) => string\n\n  const lines = source.split(/\\r?\\n/)\n  let lineRange = {\n    start: line - 1,\n    end: line,\n  }\n  lineRange = moveLineRangeUp(lineRange, numberOfSurroundingLinesToShow)\n  lineRange = moveLineRangeDown(lineRange, numberOfSurroundingLinesToShow)\n  lineRange = lineRangeWithinLines(lineRange, lines)\n  const linesToShow = lines.slice(lineRange.start, lineRange.end)\n  const endLineNumber = lineRange.end\n  const lineNumberMaxWidth = String(endLineNumber).length\n\n  const columnRange = {}\n  if (column === undefined) {\n    columnRange.start = 0\n    columnRange.end = lineMaxLength\n  } else if (column > lineMaxLength) {\n    columnRange.start = column - Math.floor(lineMaxLength / 2)\n    columnRange.end = column + Math.ceil(lineMaxLength / 2)\n  } else {\n    columnRange.start = 0\n    columnRange.end = lineMaxLength\n  }\n\n  return linesToShow.map((lineSource, index) => {\n    const lineNumber = lineRange.start + index + 1\n    const isMainLine = lineNumber === line\n    const lineSourceTruncated = applyColumnRange(columnRange, lineSource)\n    const lineNumberWidth = String(lineNumber).length\n    // ensure if line moves from 7,8,9 to 10 the display is still great\n    const lineNumberRightSpacing = \" \".repeat(lineNumberMaxWidth - lineNumberWidth)\n    const asideSource = `${lineNumber}${lineNumberRightSpacing} |`\n    const lineFormatted = `${aside(asideSource)} ${lineSourceTruncated}`\n    if (isMainLine) {\n      if (column === undefined) {\n        return `${mark(\">\")} ${lineFormatted}`\n      }\n      const lineSourceUntilColumn = lineSourceTruncated.slice(0, column - columnRange.start)\n      const spacing = stringToSpaces(lineSourceUntilColumn)\n      const mainLineFormatted = `${mark(\">\")} ${lineFormatted}\n  ${\" \".repeat(lineNumberWidth)} ${aside(\"|\")}${spacing}${mark(\"^\")}`\n      return mainLineFormatted\n    }\n    return `  ${lineFormatted}`\n  }).join(`\n`)\n}\n\nconst applyColumnRange = ({ start, end }, line) => {\n  if (typeof start !== \"number\") {\n    throw new TypeError(`start must be a number, received ${start}`)\n  }\n  if (typeof end !== \"number\") {\n    throw new TypeError(`end must be a number, received ${end}`)\n  }\n  if (end < start) {\n    throw new Error(`end must be greater than start, but ${end} is smaller than ${start}`)\n  }\n\n  const prefix = \"…\"\n  const suffix = \"…\"\n  const lastIndex = line.length\n\n  if (line.length === 0) {\n    // don't show any ellipsis if the line is empty\n    // because it's not truncated in that case\n    return \"\"\n  }\n\n  const startTruncated = start > 0\n  const endTruncated = lastIndex > end\n\n  let from = startTruncated ? start + prefix.length : start\n  let to = endTruncated ? end - suffix.length : end\n  if (to > lastIndex) to = lastIndex\n\n  if (start >= lastIndex || from === to) {\n    return \"\"\n  }\n\n  let result = \"\"\n  while (from < to) {\n    result += line[from]\n    from++\n  }\n\n  if (result.length === 0) {\n    return \"\"\n  }\n  if (startTruncated && endTruncated) {\n    return `${prefix}${result}${suffix}`\n  }\n  if (startTruncated) {\n    return `${prefix}${result}`\n  }\n  if (endTruncated) {\n    return `${result}${suffix}`\n  }\n  return result\n}\n\nconst stringToSpaces = (string) => string.replace(/[^\\t]/g, \" \")\n\n// const getLineRangeLength = ({ start, end }) => end - start\n\nconst moveLineRangeUp = ({ start, end }, number) => {\n  return {\n    start: start - number,\n    end,\n  }\n}\n\nconst moveLineRangeDown = ({ start, end }, number) => {\n  return {\n    start,\n    end: end + number,\n  }\n}\n\nconst lineRangeWithinLines = ({ start, end }, lines) => {\n  return {\n    start: start < 0 ? 0 : start,\n    end: end > lines.length ? lines.length : end,\n  }\n}\n",
    "import { resolveUrl, readFileSystemNodeStat, urlToFilename, urlToExtension } from \"@jsenv/util\"\nimport { firstOperationMatching } from \"@jsenv/cancellation\"\n\nexport const resolveFile = async (fileUrl, { magicExtensions }) => {\n  const fileStat = await readFileSystemNodeStat(fileUrl, {\n    nullIfNotFound: true,\n  })\n\n  // file found\n  if (fileStat && fileStat.isFile()) {\n    return fileUrl\n  }\n\n  // directory found\n  if (fileStat && fileStat.isDirectory()) {\n    const indexFileSuffix = fileUrl.endsWith(\"/\") ? \"index\" : \"/index\"\n    const indexFileUrl = `${fileUrl}${indexFileSuffix}`\n    const extensionLeadingToAFile = await findExtensionLeadingToFile(indexFileUrl, magicExtensions)\n    if (extensionLeadingToAFile === null) {\n      return null\n    }\n    return `${indexFileUrl}${extensionLeadingToAFile}`\n  }\n\n  // file not found and it has an extension\n  const extension = urlToExtension(fileUrl)\n  if (extension !== \"\") {\n    return null\n  }\n\n  const extensionLeadingToAFile = await findExtensionLeadingToFile(fileUrl, magicExtensions)\n  // magic extension not found\n  if (extensionLeadingToAFile === null) {\n    return null\n  }\n\n  // magic extension worked\n  return `${fileUrl}${extensionLeadingToAFile}`\n}\n\nconst findExtensionLeadingToFile = async (fileUrl, magicExtensions) => {\n  const urlDirectoryUrl = resolveUrl(\"./\", fileUrl)\n  const urlFilename = urlToFilename(fileUrl)\n  const extensionLeadingToFile = await firstOperationMatching({\n    array: magicExtensions,\n    start: async (extensionCandidate) => {\n      const urlCandidate = `${urlDirectoryUrl}${urlFilename}${extensionCandidate}`\n      const stats = await readFileSystemNodeStat(urlCandidate, { nullIfNotFound: true })\n      return stats && stats.isFile() ? extensionCandidate : null\n    },\n    predicate: (extension) => Boolean(extension),\n  })\n  return extensionLeadingToFile || null\n}\n",
    "import { createDetailedMessage } from \"@jsenv/logger\"\nimport { resolveUrl, readFile, urlToExtension, urlToRelativeUrl } from \"@jsenv/util\"\nimport {\n  normalizeImportMap,\n  resolveImport,\n  sortImportMap,\n  composeTwoImportMaps,\n} from \"@jsenv/import-map\"\nimport { isSpecifierForNodeCoreModule } from \"@jsenv/import-map/src/isSpecifierForNodeCoreModule.js\"\nimport {\n  memoizeAsyncFunctionByUrl,\n  memoizeAsyncFunctionBySpecifierAndImporter,\n} from \"../memoizeAsyncFunction.js\"\nimport { parseSpecifiersFromFile } from \"./parseSpecifiersFromFile.js\"\nimport { showSource } from \"./showSource.js\"\nimport { resolveFile } from \"../resolveFile.js\"\n\nconst BARE_SPECIFIER_ERROR = {}\n\nexport const getImportMapFromJsFiles = async ({\n  logger,\n  warn,\n  projectDirectoryUrl,\n  importMap,\n  magicExtensions,\n  runtime,\n  treeshakeMappings,\n}) => {\n  const projectPackageFileUrl = resolveUrl(\"./package.json\", projectDirectoryUrl)\n\n  const imports = {}\n  const scopes = {}\n  const addMapping = ({ scope, from, to }) => {\n    if (scope) {\n      scopes[scope] = {\n        ...(scopes[scope] || {}),\n        [from]: to,\n      }\n    } else {\n      imports[from] = to\n    }\n  }\n\n  const topLevelMappingsUsed = []\n  const scopedMappingsUsed = {}\n  const markMappingAsUsed = ({ scope, from, to }) => {\n    if (scope) {\n      if (scope in scopedMappingsUsed) {\n        scopedMappingsUsed[scope].push({ from, to })\n      } else {\n        scopedMappingsUsed[scope] = [{ from, to }]\n      }\n    } else {\n      topLevelMappingsUsed.push({ from, to })\n    }\n  }\n  const importMapNormalized = normalizeImportMap(importMap, projectDirectoryUrl)\n  const trackAndResolveImport = (specifier, importer) => {\n    return resolveImport({\n      specifier,\n      importer,\n      importMap: importMapNormalized,\n      defaultExtension: false,\n      onImportMapping: ({ scope, from }) => {\n        if (scope) {\n          // make scope relative again\n          scope = `./${urlToRelativeUrl(scope, projectDirectoryUrl)}`\n          // make from relative again\n          if (from.startsWith(projectDirectoryUrl)) {\n            from = `./${urlToRelativeUrl(from, projectDirectoryUrl)}`\n          }\n        }\n\n        markMappingAsUsed({\n          scope,\n          from,\n          to: scope ? importMap.scopes[scope][from] : importMap.imports[from],\n        })\n      },\n      createBareSpecifierError: () => BARE_SPECIFIER_ERROR,\n    })\n  }\n\n  const resolveFileSystemUrl = memoizeAsyncFunctionBySpecifierAndImporter(\n    async (specifier, importer, { importedBy }) => {\n      if (runtime === \"node\" && isSpecifierForNodeCoreModule(specifier)) {\n        return null\n      }\n\n      let fileUrl\n      let gotBareSpecifierError = false\n\n      try {\n        fileUrl = trackAndResolveImport(specifier, importer)\n      } catch (e) {\n        if (e !== BARE_SPECIFIER_ERROR) {\n          throw e\n        }\n        if (importer === projectPackageFileUrl) {\n          // cannot find package main file (package.main is \"\" for instance)\n          // we can't discover main file and parse dependencies\n          return null\n        }\n        gotBareSpecifierError = true\n        fileUrl = resolveUrl(specifier, importer)\n      }\n\n      const fileUrlOnFileSystem = await resolveFile(fileUrl, {\n        magicExtensions: magicExtensionWithImporterExtension(magicExtensions, importer),\n      })\n\n      if (!fileUrlOnFileSystem) {\n        warn(\n          createFileNotFoundWarning({\n            specifier,\n            importedBy,\n            fileUrl,\n            magicExtensions,\n          }),\n        )\n        return null\n      }\n\n      const needsAutoMapping = fileUrlOnFileSystem !== fileUrl || gotBareSpecifierError\n      if (needsAutoMapping) {\n        const packageDirectoryUrl = packageDirectoryUrlFromUrl(fileUrl, projectDirectoryUrl)\n        const packageFileUrl = resolveUrl(\"package.json\", packageDirectoryUrl)\n        const autoMapping = {\n          scope:\n            packageFileUrl === projectPackageFileUrl\n              ? undefined\n              : `./${urlToRelativeUrl(packageDirectoryUrl, projectDirectoryUrl)}`,\n          from: specifier,\n          to: `./${urlToRelativeUrl(fileUrlOnFileSystem, projectDirectoryUrl)}`,\n        }\n        addMapping(autoMapping)\n        markMappingAsUsed(autoMapping)\n\n        const closestPackageObject = await readFile(packageFileUrl, { as: \"json\" })\n        // it's imprecise because we are not ensuring the wildcard correspond to automapping\n        // but good enough for now\n        const containsWildcard = Object.keys(closestPackageObject.exports || {}).some((key) =>\n          key.includes(\"*\"),\n        )\n\n        const autoMappingWarning = formatAutoMappingSpecifierWarning({\n          specifier,\n          importedBy,\n          autoMapping,\n          closestPackageDirectoryUrl: packageDirectoryUrl,\n          closestPackageObject,\n        })\n        if (containsWildcard) {\n          logger.debug(autoMappingWarning)\n        } else {\n          warn(autoMappingWarning)\n        }\n      }\n\n      return fileUrlOnFileSystem\n    },\n  )\n\n  const visitFile = memoizeAsyncFunctionByUrl(async (fileUrl) => {\n    const fileContent = await readFile(fileUrl, { as: \"string\" })\n    const specifiers = await parseSpecifiersFromFile(fileUrl, { fileContent })\n\n    const dependencies = await Promise.all(\n      Object.keys(specifiers).map(async (specifier) => {\n        const specifierInfo = specifiers[specifier]\n        const dependencyUrlOnFileSystem = await resolveFileSystemUrl(specifier, fileUrl, {\n          importedBy: showSource({\n            url: fileUrl,\n            line: specifierInfo.line,\n            column: specifierInfo.column,\n            source: fileContent,\n          }),\n        })\n        return dependencyUrlOnFileSystem\n      }),\n    )\n    const dependenciesToVisit = dependencies.filter((dependency) => {\n      return dependency && !visitFile.isInMemory(dependency)\n    })\n    await Promise.all(\n      dependenciesToVisit.map((dependency) => {\n        return visitFile(dependency)\n      }),\n    )\n  })\n\n  const projectPackageObject = await readFile(projectPackageFileUrl, { as: \"json\" })\n  const projectMainFileUrlOnFileSystem = await resolveFileSystemUrl(\n    projectPackageObject.name,\n    projectPackageFileUrl,\n    {\n      importedBy: projectPackageObject.exports\n        ? `${projectPackageFileUrl}#exports`\n        : `${projectPackageFileUrl}`,\n    },\n  )\n  if (projectMainFileUrlOnFileSystem) {\n    await visitFile(projectMainFileUrlOnFileSystem)\n  }\n\n  if (treeshakeMappings) {\n    const importsUsed = {}\n    topLevelMappingsUsed.forEach(({ from, to }) => {\n      importsUsed[from] = to\n    })\n    const scopesUsed = {}\n    Object.keys(scopedMappingsUsed).forEach((scope) => {\n      const mappingsUsed = scopedMappingsUsed[scope]\n      const scopedMappings = {}\n      mappingsUsed.forEach(({ from, to }) => {\n        scopedMappings[from] = to\n      })\n      scopesUsed[scope] = scopedMappings\n    })\n    return sortImportMap({\n      imports: importsUsed,\n      scopes: scopesUsed,\n    })\n  }\n\n  return sortImportMap(composeTwoImportMaps(importMap, { imports, scopes }))\n}\n\nconst packageDirectoryUrlFromUrl = (url, projectDirectoryUrl) => {\n  const relativeUrl = urlToRelativeUrl(url, projectDirectoryUrl)\n\n  const lastNodeModulesDirectoryStartIndex = relativeUrl.lastIndexOf(\"node_modules/\")\n  if (lastNodeModulesDirectoryStartIndex === -1) {\n    return projectDirectoryUrl\n  }\n\n  const lastNodeModulesDirectoryEndIndex =\n    lastNodeModulesDirectoryStartIndex + `node_modules/`.length\n\n  const beforeNodeModulesLastDirectory = relativeUrl.slice(0, lastNodeModulesDirectoryEndIndex)\n  const afterLastNodeModulesDirectory = relativeUrl.slice(lastNodeModulesDirectoryEndIndex)\n  const remainingDirectories = afterLastNodeModulesDirectory.split(\"/\")\n\n  if (afterLastNodeModulesDirectory[0] === \"@\") {\n    // scoped package\n    return `${projectDirectoryUrl}${beforeNodeModulesLastDirectory}${remainingDirectories\n      .slice(0, 2)\n      .join(\"/\")}`\n  }\n  return `${projectDirectoryUrl}${beforeNodeModulesLastDirectory}${remainingDirectories[0]}/`\n}\n\nconst magicExtensionWithImporterExtension = (magicExtensions, importer) => {\n  const importerExtension = urlToExtension(importer)\n  const magicExtensionsWithoutImporterExtension = magicExtensions.filter(\n    (ext) => ext !== importerExtension,\n  )\n  return [importerExtension, ...magicExtensionsWithoutImporterExtension]\n}\n\nconst createFileNotFoundWarning = ({ specifier, importedBy, fileUrl, magicExtensions }) => {\n  return {\n    code: \"FILE_NOT_FOUND\",\n    message: createDetailedMessage(`Cannot find file for \"${specifier}\"`, {\n      \"specifier origin\": importedBy,\n      \"file url tried\": fileUrl,\n      ...(urlToExtension(fileUrl) === \"\"\n        ? { [\"extensions tried\"]: magicExtensions.join(`, `) }\n        : {}),\n    }),\n  }\n}\n\nconst formatAutoMappingSpecifierWarning = ({\n  importedBy,\n  autoMapping,\n  closestPackageDirectoryUrl,\n  closestPackageObject,\n}) => {\n  return {\n    code: \"AUTO_MAPPING\",\n    message: createDetailedMessage(`Auto mapping ${autoMapping.from} to ${autoMapping.to}.`, {\n      \"specifier origin\": importedBy,\n      \"suggestion\": decideAutoMappingSuggestion({\n        autoMapping,\n        closestPackageDirectoryUrl,\n        closestPackageObject,\n      }),\n    }),\n  }\n}\n\nconst decideAutoMappingSuggestion = ({\n  autoMapping,\n  closestPackageDirectoryUrl,\n  closestPackageObject,\n}) => {\n  if (typeof closestPackageObject.importmap === \"string\") {\n    const packageImportmapFileUrl = resolveUrl(\n      closestPackageObject.importmap,\n      closestPackageDirectoryUrl,\n    )\n\n    return `To get rid of this warning, add an explicit mapping into importmap file.\n${mappingToImportmapString(autoMapping)}\ninto ${packageImportmapFileUrl}.`\n  }\n\n  return `To get rid of this warning, add an explicit mapping into package.json.\n${mappingToExportsFieldString(autoMapping)}\ninto ${closestPackageDirectoryUrl}package.json.`\n}\n\nconst mappingToImportmapString = ({ scope, from, to }) => {\n  if (scope) {\n    return JSON.stringify(\n      {\n        scopes: {\n          [scope]: {\n            [from]: to,\n          },\n        },\n      },\n      null,\n      \"  \",\n    )\n  }\n\n  return JSON.stringify(\n    {\n      imports: {\n        [from]: to,\n      },\n    },\n    null,\n    \"  \",\n  )\n}\n\nconst mappingToExportsFieldString = ({ scope, from, to }) => {\n  if (scope) {\n    const scopeUrl = resolveUrl(scope, \"file://\")\n    const toUrl = resolveUrl(to, \"file://\")\n    to = `./${urlToRelativeUrl(toUrl, scopeUrl)}`\n  }\n\n  return JSON.stringify(\n    {\n      exports: {\n        [from]: to,\n      },\n    },\n    null,\n    \"  \",\n  )\n}\n",
    "export const optimizeImportMap = ({ imports, scopes }) => {\n  // remove useless duplicates (scoped key+value already defined on imports)\n  const scopesOptimized = {}\n  Object.keys(scopes).forEach((scope) => {\n    const scopeMappings = scopes[scope]\n    const scopeMappingsOptimized = {}\n    Object.keys(scopeMappings).forEach((mappingKey) => {\n      const topLevelMappingValue = imports[mappingKey]\n      const mappingValue = scopeMappings[mappingKey]\n      if (!topLevelMappingValue || topLevelMappingValue !== mappingValue) {\n        scopeMappingsOptimized[mappingKey] = mappingValue\n      }\n    })\n    if (Object.keys(scopeMappingsOptimized).length > 0) {\n      scopesOptimized[scope] = scopeMappingsOptimized\n    }\n  })\n  return { imports, scopes: scopesOptimized }\n}\n",
    "import { createDetailedMessage } from \"@jsenv/logger\"\nimport { resolveUrl, urlToFileSystemPath, urlToExtension } from \"@jsenv/util\"\nimport { resolveFile } from \"../resolveFile.js\"\n\nconst magicExtensions = [\".js\", \".json\", \".node\"]\n\nexport const resolvePackageMain = ({\n  warn,\n  packageConditions,\n  packageFileUrl,\n  packageJsonObject,\n}) => {\n  // we should remove \"module\", \"browser\", \"jsenext:main\" because Node.js native resolution\n  // ignores them\n  if (packageConditions.includes(\"import\") && \"module\" in packageJsonObject) {\n    return resolveMainFile({\n      warn,\n      packageFileUrl,\n      packageMainFieldName: \"module\",\n      packageMainFieldValue: packageJsonObject.module,\n    })\n  }\n\n  if (packageConditions.includes(\"import\") && \"jsnext:main\" in packageJsonObject) {\n    return resolveMainFile({\n      warn,\n      packageFileUrl,\n      packageMainFieldName: \"jsnext:main\",\n      packageMainFieldValue: packageJsonObject[\"jsnext:main\"],\n    })\n  }\n\n  if (\n    packageConditions.includes(\"browser\") &&\n    \"browser\" in packageJsonObject &&\n    // when it's an object it means some files\n    // should be replaced with an other, let's ignore this when we are searching\n    // for the main file\n    typeof packageJsonObject.browser === \"string\"\n  ) {\n    return resolveMainFile({\n      warn,\n      packageFileUrl,\n      packageMainFieldName: \"browser\",\n      packageMainFieldValue: packageJsonObject.browser,\n    })\n  }\n\n  if (\"main\" in packageJsonObject) {\n    return resolveMainFile({\n      warn,\n      packageFileUrl,\n      packageMainFieldName: \"main\",\n      packageMainFieldValue: packageJsonObject.main,\n    })\n  }\n\n  return resolveMainFile({\n    warn,\n    packageFileUrl,\n    packageMainFieldName: \"default\",\n    packageMainFieldValue: \"index\",\n  })\n}\n\nconst resolveMainFile = async ({\n  warn,\n  packageFileUrl,\n  packageMainFieldName,\n  packageMainFieldValue,\n}) => {\n  // main is explicitely empty meaning\n  // it is assumed that we should not find a file\n  if (packageMainFieldValue === \"\") {\n    return null\n  }\n\n  const packageDirectoryUrl = resolveUrl(\"./\", packageFileUrl)\n  const mainFileRelativeUrl = packageMainFieldValue.endsWith(\"/\")\n    ? `${packageMainFieldValue}index`\n    : packageMainFieldValue\n\n  const mainFileUrlFirstCandidate = resolveUrl(mainFileRelativeUrl, packageFileUrl)\n\n  if (!mainFileUrlFirstCandidate.startsWith(packageDirectoryUrl)) {\n    warn(\n      createPackageMainFileMustBeRelativeWarning({\n        packageMainFieldName,\n        packageMainFieldValue,\n        packageFileUrl,\n      }),\n    )\n    return null\n  }\n\n  const mainFileUrl = await resolveFile(mainFileUrlFirstCandidate, {\n    magicExtensions,\n  })\n\n  if (!mainFileUrl) {\n    // we know in advance this remapping does not lead to an actual file.\n    // we only warn because we have no guarantee this remapping will actually be used\n    // in the codebase.\n    // warn only if there is actually a main field\n    // otherwise the package.json is missing the main field\n    // it certainly means it's not important\n    if (packageMainFieldName !== \"default\") {\n      warn(\n        createPackageMainFileNotFoundWarning({\n          specifier: packageMainFieldValue,\n          importedIn: `${packageFileUrl}#${packageMainFieldName}`,\n          fileUrl: mainFileUrlFirstCandidate,\n          magicExtensions,\n        }),\n      )\n    }\n    return mainFileUrlFirstCandidate\n  }\n\n  return mainFileUrl\n}\n\nconst createPackageMainFileMustBeRelativeWarning = ({\n  packageMainFieldName,\n  packageMainFieldValue,\n  packageFileUrl,\n}) => {\n  return {\n    code: \"PACKAGE_MAIN_FILE_MUST_BE_RELATIVE\",\n    message: `${packageMainFieldName} field in package.json must be inside package.json folder.\n--- ${packageMainFieldName} ---\n${packageMainFieldValue}\n--- package.json path ---\n${urlToFileSystemPath(packageFileUrl)}`,\n  }\n}\n\nconst createPackageMainFileNotFoundWarning = ({\n  specifier,\n  importedIn,\n  fileUrl,\n  magicExtensions,\n}) => {\n  return {\n    code: \"PACKAGE_MAIN_FILE_NOT_FOUND\",\n    message: createDetailedMessage(`Cannot find package main file \"${specifier}\"`, {\n      \"imported in\": importedIn,\n      \"file url tried\": fileUrl,\n      ...(urlToExtension(fileUrl) === \"\"\n        ? { [\"extensions tried\"]: magicExtensions.join(`, `) }\n        : {}),\n    }),\n  }\n}\n",
    "import { resolveUrl, moveImportMap } from \"@jsenv/import-map\"\nimport { readFile, urlToFileSystemPath } from \"@jsenv/util\"\n\nexport const visitPackageImportMap = async ({\n  warn,\n  packageFileUrl,\n  packageJsonObject,\n  packageImportmap = packageJsonObject.importmap,\n  projectDirectoryUrl,\n}) => {\n  if (typeof packageImportmap === \"undefined\") {\n    return {}\n  }\n\n  if (typeof packageImportmap === \"string\") {\n    const importmapFileUrl = resolveUrl(packageImportmap, packageFileUrl)\n    try {\n      const importmap = await readFile(importmapFileUrl, { as: \"json\" })\n      return moveImportMap(importmap, importmapFileUrl, projectDirectoryUrl)\n    } catch (e) {\n      if (e.code === \"ENOENT\") {\n        warn(\n          createPackageImportMapNotFoundWarning({\n            importmapFileUrl,\n            packageFileUrl,\n          }),\n        )\n        return {}\n      }\n      throw e\n    }\n  }\n\n  if (typeof packageImportmap === \"object\" && packageImportmap !== null) {\n    return packageImportmap\n  }\n\n  warn(\n    createPackageImportMapUnexpectedWarning({\n      packageImportmap,\n      packageFileUrl,\n    }),\n  )\n  return {}\n}\n\nconst createPackageImportMapNotFoundWarning = ({ importmapFileUrl, packageFileUrl }) => {\n  return {\n    code: \"PACKAGE_IMPORTMAP_NOT_FOUND\",\n    message: `importmap file specified in a package.json cannot be found,\n--- importmap file path ---\n${importmapFileUrl}\n--- package.json path ---\n${packageFileUrl}`,\n  }\n}\n\nconst createPackageImportMapUnexpectedWarning = ({ packageImportmap, packageFileUrl }) => {\n  return {\n    code: \"PACKAGE_IMPORTMAP_UNEXPECTED\",\n    message: `unexpected value in package.json importmap field: value must be a string or an object.\n--- value ---\n${packageImportmap}\n--- package.json path ---\n${urlToFileSystemPath(packageFileUrl)}`,\n  }\n}\n",
    "export const specifierIsRelative = (specifier) => {\n  if (specifier.startsWith(\"//\")) {\n    return false\n  }\n  if (specifier.startsWith(\"../\")) {\n    return false\n  }\n  // starts with http:// or file:// or ftp: for instance\n  if (/^[a-zA-Z]+\\:/.test(specifier)) {\n    return false\n  }\n  return true\n}\n",
    "/*\n\nhttps://nodejs.org/docs/latest-v15.x/api/packages.html#packages_node_js_package_json_field_definitions\n\n*/\n\nimport { urlToFileSystemPath } from \"@jsenv/util\"\nimport { specifierIsRelative } from \"./specifierIsRelative.js\"\n\nexport const visitPackageImports = ({\n  packageFileUrl,\n  packageJsonObject,\n  packageImports = packageJsonObject.imports,\n  packageConditions,\n  warn,\n}) => {\n  const importsSubpaths = {}\n  const onImportsSubpath = ({ key, value, trace }) => {\n    if (!specifierIsRelative(value)) {\n      warn(\n        createSubpathValueMustBeRelativeWarning({\n          value,\n          valueTrace: trace,\n          packageFileUrl,\n        }),\n      )\n      return\n    }\n\n    const keyNormalized = key\n    const valueNormalized = value\n    importsSubpaths[keyNormalized] = valueNormalized\n  }\n\n  const conditions = [...packageConditions, \"default\"]\n\n  const visitSubpathValue = (subpathValue, subpathValueTrace) => {\n    if (typeof subpathValue === \"string\") {\n      return handleString(subpathValue, subpathValueTrace)\n    }\n\n    if (typeof subpathValue === \"object\" && subpathValue !== null) {\n      return handleObject(subpathValue, subpathValueTrace)\n    }\n\n    return handleRemaining(subpathValue, subpathValueTrace)\n  }\n\n  const handleString = (subpathValue, subpathValueTrace) => {\n    const firstBareKey = subpathValueTrace\n      .slice()\n      .reverse()\n      .find((key) => key.startsWith(\"#\"))\n    onImportsSubpath({\n      key: firstBareKey,\n      value: subpathValue,\n      trace: subpathValueTrace,\n    })\n    return true\n  }\n\n  const handleObject = (subpathValue, subpathValueTrace) => {\n    // From Node.js documentation:\n    // \"If a nested conditional does not have any mapping it will continue\n    // checking the remaining conditions of the parent condition\"\n    // https://nodejs.org/docs/latest-v14.x/api/packages.html#packages_nested_conditions\n    //\n    // So it seems what we do here is not sufficient\n    // -> if the condition finally does not lead to something\n    // it should be ignored and an other branch be taken until\n    // something resolves\n    const followConditionBranch = (subpathValue, conditionTrace) => {\n      const bareKeys = []\n      const conditionalKeys = []\n      Object.keys(subpathValue).forEach((availableKey) => {\n        if (availableKey.startsWith(\"#\")) {\n          bareKeys.push(availableKey)\n        } else {\n          conditionalKeys.push(availableKey)\n        }\n      })\n\n      if (bareKeys.length > 0 && conditionalKeys.length > 0) {\n        warn(\n          createSubpathKeysAreMixedWarning({\n            subpathValue,\n            subpathValueTrace: [...subpathValueTrace, ...conditionTrace],\n            packageFileUrl,\n            bareKeys,\n            conditionalKeys,\n          }),\n        )\n        return false\n      }\n\n      // there is no condition, visit all bare keys (starting with #)\n      if (conditionalKeys.length === 0) {\n        let leadsToSomething = false\n        bareKeys.forEach((key) => {\n          leadsToSomething = visitSubpathValue(subpathValue[key], [\n            ...subpathValueTrace,\n            ...conditionTrace,\n            key,\n          ])\n        })\n        return leadsToSomething\n      }\n\n      // there is a condition, keep the first one leading to something\n      return conditionalKeys.some((keyCandidate) => {\n        if (!conditions.includes(keyCandidate)) {\n          return false\n        }\n        const valueCandidate = subpathValue[keyCandidate]\n        return visitSubpathValue(valueCandidate, [\n          ...subpathValueTrace,\n          ...conditionTrace,\n          keyCandidate,\n        ])\n      })\n    }\n\n    return followConditionBranch(subpathValue, [])\n  }\n\n  const handleRemaining = (subpathValue, subpathValueTrace) => {\n    warn(\n      createSubpathIsUnexpectedWarning({\n        subpathValue,\n        subpathValueTrace,\n        packageFileUrl,\n      }),\n    )\n    return false\n  }\n\n  visitSubpathValue(packageImports, [\"imports\"])\n\n  return importsSubpaths\n}\n\nconst createSubpathIsUnexpectedWarning = ({ subpathValue, subpathValueTrace, packageFileUrl }) => {\n  return {\n    code: \"IMPORTS_SUBPATH_UNEXPECTED\",\n    message: `unexpected subpath in package.json imports: value must be an object or a string.\n--- value ---\n${subpathValue}\n--- value at ---\n${subpathValueTrace.join(\".\")}\n--- package.json path ---\n${urlToFileSystemPath(packageFileUrl)}`,\n  }\n}\n\nconst createSubpathKeysAreMixedWarning = ({ subpathValue, subpathValueTrace, packageFileUrl }) => {\n  return {\n    code: \"IMPORTS_SUBPATH_MIXED_KEYS\",\n    message: `unexpected subpath keys in package.json imports: cannot mix bare and conditional keys.\n--- value ---\n${JSON.stringify(subpathValue, null, \"  \")}\n--- value at ---\n${subpathValueTrace.join(\".\")}\n--- package.json path ---\n${urlToFileSystemPath(packageFileUrl)}`,\n  }\n}\n\nconst createSubpathValueMustBeRelativeWarning = ({ value, valueTrace, packageFileUrl }) => {\n  return {\n    code: \"IMPORTS_SUBPATH_VALUE_UNEXPECTED\",\n    message: `unexpected subpath value in package.json imports: value must be relative to package\n--- value ---\n${value}\n--- value at ---\n${valueTrace.join(\".\")}\n--- package.json path ---\n${urlToFileSystemPath(packageFileUrl)}`,\n  }\n}\n",
    "/*\n\nhttps://nodejs.org/docs/latest-v15.x/api/packages.html#packages_node_js_package_json_field_definitions\n\n*/\n\nimport { urlToFileSystemPath, urlToRelativeUrl, resolveUrl } from \"@jsenv/util\"\nimport { specifierIsRelative } from \"./specifierIsRelative.js\"\n\nexport const visitPackageExports = ({\n  packageFileUrl,\n  packageJsonObject,\n  packageExports = packageJsonObject.exports,\n  packageName = packageJsonObject.name,\n  projectDirectoryUrl,\n  packageConditions,\n  warn,\n}) => {\n  const exportsSubpaths = {}\n  const packageDirectoryUrl = resolveUrl(\"./\", packageFileUrl)\n  const packageDirectoryRelativeUrl = urlToRelativeUrl(packageDirectoryUrl, projectDirectoryUrl)\n  const onExportsSubpath = ({ key, value, trace }) => {\n    if (!specifierIsRelative(value)) {\n      warn(\n        createSubpathValueMustBeRelativeWarning({\n          value,\n          valueTrace: trace,\n          packageFileUrl,\n        }),\n      )\n      return\n    }\n\n    const keyNormalized = specifierToSource(key, packageName)\n    const valueNormalized = addressToDestination(value, packageDirectoryRelativeUrl)\n    exportsSubpaths[keyNormalized] = valueNormalized\n  }\n\n  const conditions = [...packageConditions, \"default\"]\n\n  const visitSubpathValue = (subpathValue, subpathValueTrace) => {\n    // false is allowed as alternative to exports: {}\n    if (subpathValue === false) {\n      return handleFalse()\n    }\n\n    if (typeof subpathValue === \"string\") {\n      return handleString(subpathValue, subpathValueTrace)\n    }\n\n    if (typeof subpathValue === \"object\" && subpathValue !== null) {\n      return handleObject(subpathValue, subpathValueTrace)\n    }\n\n    return handleRemaining(subpathValue, subpathValueTrace)\n  }\n\n  const handleFalse = () => {\n    // nothing to do\n    return true\n  }\n\n  const handleString = (subpathValue, subpathValueTrace) => {\n    const firstRelativeKey = subpathValueTrace\n      .slice()\n      .reverse()\n      .find((key) => key.startsWith(\".\"))\n    const key = firstRelativeKey || \".\"\n    onExportsSubpath({\n      key,\n      value: subpathValue,\n      trace: subpathValueTrace,\n    })\n    return true\n  }\n\n  const handleObject = (subpathValue, subpathValueTrace) => {\n    // From Node.js documentation:\n    // \"If a nested conditional does not have any mapping it will continue\n    // checking the remaining conditions of the parent condition\"\n    // https://nodejs.org/docs/latest-v14.x/api/packages.html#packages_nested_conditions\n    //\n    // So it seems what we do here is not sufficient\n    // -> if the condition finally does not lead to something\n    // it should be ignored and an other branch be taken until\n    // something resolves\n    const followConditionBranch = (subpathValue, conditionTrace) => {\n      const relativeKeys = []\n      const conditionalKeys = []\n      Object.keys(subpathValue).forEach((availableKey) => {\n        if (availableKey.startsWith(\".\")) {\n          relativeKeys.push(availableKey)\n        } else {\n          conditionalKeys.push(availableKey)\n        }\n      })\n\n      if (relativeKeys.length > 0 && conditionalKeys.length > 0) {\n        warn(\n          createSubpathKeysAreMixedWarning({\n            subpathValue,\n            subpathValueTrace: [...subpathValueTrace, ...conditionTrace],\n            packageFileUrl,\n            relativeKeys,\n            conditionalKeys,\n          }),\n        )\n        return false\n      }\n\n      // there is no condition, visit all relative keys\n      if (conditionalKeys.length === 0) {\n        let leadsToSomething = false\n        relativeKeys.forEach((key) => {\n          leadsToSomething = visitSubpathValue(subpathValue[key], [\n            ...subpathValueTrace,\n            ...conditionTrace,\n            key,\n          ])\n        })\n        return leadsToSomething\n      }\n\n      // there is a condition, keep the first one leading to something\n      return conditionalKeys.some((keyCandidate) => {\n        if (!conditions.includes(keyCandidate)) {\n          return false\n        }\n        const valueCandidate = subpathValue[keyCandidate]\n        return visitSubpathValue(valueCandidate, [\n          ...subpathValueTrace,\n          ...conditionTrace,\n          keyCandidate,\n        ])\n      })\n    }\n\n    return followConditionBranch(subpathValue, [])\n  }\n\n  const handleRemaining = (subpathValue, subpathValueTrace) => {\n    warn(\n      createSubpathIsUnexpectedWarning({\n        subpathValue,\n        subpathValueTrace,\n        packageFileUrl,\n      }),\n    )\n    return false\n  }\n\n  visitSubpathValue(packageExports, [\"exports\"])\n\n  return exportsSubpaths\n}\n\nconst specifierToSource = (specifier, packageName) => {\n  if (specifier === \".\") {\n    return packageName\n  }\n\n  if (specifier[0] === \"/\") {\n    return specifier\n  }\n\n  if (specifier.startsWith(\"./\")) {\n    return `${packageName}${specifier.slice(1)}`\n  }\n\n  return `${packageName}/${specifier}`\n}\n\nconst addressToDestination = (address, packageDirectoryRelativeUrl) => {\n  if (address[0] === \"/\") {\n    return address\n  }\n\n  if (address.startsWith(\"./\")) {\n    return `./${packageDirectoryRelativeUrl}${address.slice(2)}`\n  }\n\n  return `./${packageDirectoryRelativeUrl}${address}`\n}\n\nconst createSubpathIsUnexpectedWarning = ({ subpathValue, subpathValueTrace, packageFileUrl }) => {\n  return {\n    code: \"EXPORTS_SUBPATH_UNEXPECTED\",\n    message: `unexpected subpath in package.json exports: value must be an object or a string.\n--- value ---\n${subpathValue}\n--- value at ---\n${subpathValueTrace.join(\".\")}\n--- package.json path ---\n${urlToFileSystemPath(packageFileUrl)}`,\n  }\n}\n\nconst createSubpathKeysAreMixedWarning = ({ subpathValue, subpathValueTrace, packageFileUrl }) => {\n  return {\n    code: \"EXPORTS_SUBPATH_MIXED_KEYS\",\n    message: `unexpected subpath keys in package.json exports: cannot mix relative and conditional keys.\n--- value ---\n${JSON.stringify(subpathValue, null, \"  \")}\n--- value at ---\n${subpathValueTrace.join(\".\")}\n--- package.json path ---\n${urlToFileSystemPath(packageFileUrl)}`,\n  }\n}\n\nconst createSubpathValueMustBeRelativeWarning = ({ value, valueTrace, packageFileUrl }) => {\n  return {\n    code: \"EXPORTS_SUBPATH_VALUE_MUST_BE_RELATIVE\",\n    message: `unexpected subpath value in package.json exports: value must be a relative to the package.\n--- value ---\n${value}\n--- value at ---\n${valueTrace.join(\".\")}\n--- package.json path ---\n${urlToFileSystemPath(packageFileUrl)}`,\n  }\n}\n",
    "export const applyPackageManualOverride = (packageObject, packagesManualOverrides) => {\n  const { name, version } = packageObject\n  const overrideKey = Object.keys(packagesManualOverrides).find((overrideKeyCandidate) => {\n    if (name === overrideKeyCandidate) {\n      return true\n    }\n    if (`${name}@${version}` === overrideKeyCandidate) {\n      return true\n    }\n    return false\n  })\n  if (overrideKey) {\n    return composeObject(packageObject, packagesManualOverrides[overrideKey])\n  }\n  return packageObject\n}\n\nconst composeObject = (leftObject, rightObject) => {\n  const composedObject = {\n    ...leftObject,\n  }\n  Object.keys(rightObject).forEach((key) => {\n    const rightValue = rightObject[key]\n\n    if (rightValue === null || typeof rightValue !== \"object\" || key in leftObject === false) {\n      composedObject[key] = rightValue\n    } else {\n      const leftValue = leftObject[key]\n      if (leftValue === null || typeof leftValue !== \"object\") {\n        composedObject[key] = rightValue\n      } else {\n        composedObject[key] = composeObject(leftValue, rightValue)\n      }\n    }\n  })\n  return composedObject\n}\n",
    "import { readFile, urlToFileSystemPath } from \"@jsenv/util\"\nimport { applyPackageManualOverride } from \"./applyPackageManualOverride.js\"\n\nexport const PACKAGE_NOT_FOUND = {}\nexport const PACKAGE_WITH_SYNTAX_ERROR = {}\n\nexport const readPackageFile = async (packageFileUrl, packagesManualOverrides) => {\n  try {\n    const packageObject = await readFile(packageFileUrl, { as: \"json\" })\n    return applyPackageManualOverride(packageObject, packagesManualOverrides)\n  } catch (e) {\n    if (e.code === \"ENOENT\") {\n      return PACKAGE_NOT_FOUND\n    }\n\n    if (e.name === \"SyntaxError\") {\n      console.error(formatPackageSyntaxErrorLog({ syntaxError: e, packageFileUrl }))\n      return PACKAGE_WITH_SYNTAX_ERROR\n    }\n\n    throw e\n  }\n}\n\nconst formatPackageSyntaxErrorLog = ({ syntaxError, packageFileUrl }) => {\n  return `\nerror while parsing package.json.\n--- syntax error message ---\n${syntaxError.message}\n--- package.json path ---\n${urlToFileSystemPath(packageFileUrl)}\n`\n}\n",
    "import { firstOperationMatching } from \"@jsenv/cancellation\"\nimport { urlToRelativeUrl, resolveUrl } from \"@jsenv/util\"\nimport { memoizeAsyncFunctionByUrl } from \"../memoizeAsyncFunction.js\"\nimport { readPackageFile, PACKAGE_NOT_FOUND, PACKAGE_WITH_SYNTAX_ERROR } from \"./readPackageFile.js\"\n\nexport const createFindNodeModulePackage = (packagesManualOverrides) => {\n  const readPackageFileMemoized = memoizeAsyncFunctionByUrl((packageFileUrl) => {\n    return readPackageFile(packageFileUrl, packagesManualOverrides)\n  })\n\n  return ({ projectDirectoryUrl, packageFileUrl, dependencyName }) => {\n    const nodeModuleCandidates = getNodeModuleCandidates(packageFileUrl, projectDirectoryUrl)\n\n    return firstOperationMatching({\n      array: nodeModuleCandidates,\n      start: async (nodeModuleCandidate) => {\n        const packageFileUrlCandidate = `${projectDirectoryUrl}${nodeModuleCandidate}${dependencyName}/package.json`\n        const packageObjectCandidate = await readPackageFileMemoized(packageFileUrlCandidate)\n        return {\n          packageFileUrl: packageFileUrlCandidate,\n          packageJsonObject: packageObjectCandidate,\n          syntaxError: packageObjectCandidate === PACKAGE_WITH_SYNTAX_ERROR,\n        }\n      },\n      predicate: ({ packageJsonObject }) => {\n        return packageJsonObject !== PACKAGE_NOT_FOUND\n      },\n    })\n  }\n}\n\nconst getNodeModuleCandidates = (fileUrl, projectDirectoryUrl) => {\n  const fileDirectoryUrl = resolveUrl(\"./\", fileUrl)\n\n  if (fileDirectoryUrl === projectDirectoryUrl) {\n    return [`node_modules/`]\n  }\n\n  const fileDirectoryRelativeUrl = urlToRelativeUrl(fileDirectoryUrl, projectDirectoryUrl)\n  const candidates = []\n  const relativeNodeModuleDirectoryArray = fileDirectoryRelativeUrl.split(\"node_modules/\")\n  // remove the first empty string\n  relativeNodeModuleDirectoryArray.shift()\n\n  let i = relativeNodeModuleDirectoryArray.length\n  while (i--) {\n    candidates.push(\n      `node_modules/${relativeNodeModuleDirectoryArray\n        .slice(0, i + 1)\n        .join(\"node_modules/\")}node_modules/`,\n    )\n  }\n\n  return [...candidates, \"node_modules/\"]\n}\n",
    "import { createDetailedMessage } from \"@jsenv/logger\"\nimport {\n  resolveUrl,\n  urlToRelativeUrl,\n  assertAndNormalizeDirectoryUrl,\n  urlToFileSystemPath,\n  readFile,\n} from \"@jsenv/util\"\nimport { optimizeImportMap } from \"../optimizeImportMap.js\"\nimport { resolvePackageMain } from \"./resolvePackageMain.js\"\nimport { visitPackageImportMap } from \"./visitPackageImportMap.js\"\nimport { visitPackageImports } from \"./visitPackageImports.js\"\nimport { visitPackageExports } from \"./visitPackageExports.js\"\nimport { createFindNodeModulePackage } from \"./node-module-resolution.js\"\n\nexport const getImportMapFromPackageFiles = async ({\n  // nothing is actually listening for this cancellationToken for now\n  // it's not very important but it would be better to register on it\n  // an stops what we are doing if asked to do so\n  // cancellationToken = createCancellationTokenForProcess(),\n  logger,\n  warn,\n  projectDirectoryUrl,\n  projectPackageDevDependenciesIncluded = process.env.NODE_ENV !== \"production\",\n  packageConditions = [\"import\", \"browser\"],\n  packagesManualOverrides = {},\n  packageIncludedPredicate = () => true,\n}) => {\n  projectDirectoryUrl = assertAndNormalizeDirectoryUrl(projectDirectoryUrl)\n\n  const projectPackageFileUrl = resolveUrl(\"./package.json\", projectDirectoryUrl)\n  const findNodeModulePackage = createFindNodeModulePackage(packagesManualOverrides)\n\n  const imports = {}\n  const scopes = {}\n  const addMapping = ({ scope, from, to }) => {\n    if (scope) {\n      // when a package says './' maps to './'\n      // we must add something to say if we are already inside the package\n      // no need to ensure leading slash are scoped to the package\n      if (from === \"./\" && to === scope) {\n        addMapping({\n          scope,\n          from: scope,\n          to: scope,\n        })\n        const packageName = scope.slice(scope.lastIndexOf(\"node_modules/\") + `node_modules/`.length)\n        addMapping({\n          scope,\n          from: packageName,\n          to: scope,\n        })\n      }\n\n      scopes[scope] = {\n        ...(scopes[scope] || {}),\n        [from]: to,\n      }\n    } else {\n      // we could think it's useless to remap from with to\n      // however it can be used to ensure a weaker remapping\n      // does not win over this specific file or folder\n      if (from === to) {\n        /**\n         * however remapping '/' to '/' is truly useless\n         * moreover it would make wrapImportMap create something like\n         * {\n         *   imports: {\n         *     \"/\": \"/.dist/best/\"\n         *   }\n         * }\n         * that would append the wrapped folder twice\n         * */\n        if (from === \"/\") return\n      }\n      imports[from] = to\n    }\n  }\n\n  const seen = {}\n  const markPackageAsSeen = (packageFileUrl, importerPackageFileUrl) => {\n    if (packageFileUrl in seen) {\n      seen[packageFileUrl].push(importerPackageFileUrl)\n    } else {\n      seen[packageFileUrl] = [importerPackageFileUrl]\n    }\n  }\n  const packageIsSeen = (packageFileUrl, importerPackageFileUrl) => {\n    return packageFileUrl in seen && seen[packageFileUrl].includes(importerPackageFileUrl)\n  }\n\n  const visit = async ({\n    packageFileUrl,\n    packageName,\n    packageJsonObject,\n    importerPackageFileUrl,\n    importerPackageJsonObject,\n    includeDevDependencies,\n  }) => {\n    if (!packageIncludedPredicate({ packageName, packageFileUrl, packageJsonObject })) {\n      return\n    }\n\n    await visitDependencies({\n      packageFileUrl,\n      packageJsonObject,\n      includeDevDependencies,\n    })\n    await visitPackage({\n      packageFileUrl,\n      packageName,\n      packageJsonObject,\n      importerPackageFileUrl,\n      importerPackageJsonObject,\n    })\n  }\n\n  const visitPackage = async ({\n    packageFileUrl,\n    packageName,\n    packageJsonObject,\n    importerPackageFileUrl,\n  }) => {\n    const packageInfo = computePackageInfo({\n      packageFileUrl,\n      packageName,\n      importerPackageFileUrl,\n    })\n\n    const {\n      importerIsRoot,\n      importerRelativeUrl,\n      packageIsRoot,\n      packageDirectoryRelativeUrl,\n      // packageDirectoryUrl,\n      // packageDirectoryUrlExpected,\n    } = packageInfo\n\n    const addImportMapForPackage = (importMap) => {\n      if (packageIsRoot) {\n        const { imports = {}, scopes = {} } = importMap\n        Object.keys(imports).forEach((from) => {\n          addMapping({\n            from,\n            to: imports[from],\n          })\n        })\n        Object.keys(scopes).forEach((scope) => {\n          const scopeMappings = scopes[scope]\n          Object.keys(scopeMappings).forEach((key) => {\n            addMapping({\n              scope,\n              from: key,\n              to: scopeMappings[key],\n            })\n          })\n        })\n        return\n      }\n\n      const { imports = {}, scopes = {} } = importMap\n      const scope = `./${packageDirectoryRelativeUrl}`\n      Object.keys(imports).forEach((from) => {\n        const to = imports[from]\n        const toMoved = moveMappingValue(to, packageFileUrl, projectDirectoryUrl)\n        addMapping({\n          scope,\n          from,\n          to: toMoved,\n        })\n      })\n      Object.keys(scopes).forEach((scope) => {\n        const scopeMappings = scopes[scope]\n        const scopeMoved = moveMappingValue(scope, packageFileUrl, projectDirectoryUrl)\n        Object.keys(scopeMappings).forEach((key) => {\n          const to = scopeMappings[key]\n          const toMoved = moveMappingValue(to, packageFileUrl, projectDirectoryUrl)\n          addMapping({\n            scope: scopeMoved,\n            from: key,\n            to: toMoved,\n          })\n        })\n      })\n    }\n\n    const addMappingsForPackageAndImporter = (mappings) => {\n      if (packageIsRoot) {\n        Object.keys(mappings).forEach((from) => {\n          const to = mappings[from]\n          addMapping({\n            from,\n            to,\n          })\n        })\n        return\n      }\n\n      if (importerIsRoot) {\n        // own package mappings available to himself\n        Object.keys(mappings).forEach((from) => {\n          const to = mappings[from]\n          addMapping({\n            scope: `./${packageDirectoryRelativeUrl}`,\n            from,\n            to,\n          })\n          addMapping({ from, to })\n        })\n\n        // if importer is root no need to make package mappings available to the importer\n        // because they are already on top level mappings\n        return\n      }\n\n      Object.keys(mappings).forEach((from) => {\n        const to = mappings[from]\n        // own package exports available to himself\n        addMapping({\n          scope: `./${packageDirectoryRelativeUrl}`,\n          from,\n          to,\n        })\n        // now make package exports available to the importer\n        // here if the importer is himself we could do stuff\n        // we should even handle the case earlier to prevent top level remapping\n        addMapping({\n          scope: `./${importerRelativeUrl}`,\n          from,\n          to,\n        })\n      })\n    }\n\n    // https://nodejs.org/docs/latest-v15.x/api/packages.html#packages_name\n    addImportMapForPackage({\n      imports: {\n        [`${packageName}/`]: `./`,\n      },\n    })\n\n    const importsFromPackageField = await visitPackageImportMap({\n      warn,\n      packageFileUrl,\n      packageJsonObject,\n      projectDirectoryUrl,\n    })\n    addImportMapForPackage(importsFromPackageField)\n\n    if (\"imports\" in packageJsonObject) {\n      const mappingsFromPackageExports = {}\n      const packageImports = visitPackageImports({\n        warn,\n        packageFileUrl,\n        packageJsonObject,\n        packageName,\n        projectDirectoryUrl,\n        packageConditions,\n      })\n      Object.keys(packageImports).forEach((from) => {\n        const to = packageImports[from]\n        mappingsFromPackageExports[from] = to\n      })\n      addImportMapForPackage({\n        imports: mappingsFromPackageExports,\n      })\n    }\n\n    if (\"exports\" in packageJsonObject) {\n      const mappingsFromPackageExports = {}\n      const packageExports = visitPackageExports({\n        warn,\n        packageFileUrl,\n        packageJsonObject,\n        packageName,\n        projectDirectoryUrl,\n        packageConditions,\n      })\n      Object.keys(packageExports).forEach((from) => {\n        const to = packageExports[from]\n        if (from.indexOf(\"*\") === -1) {\n          mappingsFromPackageExports[from] = to\n          return\n        }\n\n        if (\n          from.endsWith(\"/*\") &&\n          to.endsWith(\"/*\") &&\n          // ensure ends with '*' AND there is only one '*' occurence\n          to.indexOf(\"*\") === to.length - 1\n        ) {\n          const fromWithouTrailingStar = from.slice(0, -1)\n          const toWithoutTrailingStar = to.slice(0, -1)\n          mappingsFromPackageExports[fromWithouTrailingStar] = toWithoutTrailingStar\n          return\n        }\n\n        logger.debug(\n          createExportsWildcardIgnoredWarning({\n            key: from,\n            value: to,\n            packageFileUrl,\n          }),\n        )\n      })\n      addMappingsForPackageAndImporter(mappingsFromPackageExports)\n    } else {\n      // visit \"main\" only if there is no \"exports\"\n      // https://nodejs.org/docs/latest-v16.x/api/packages.html#packages_main\n      await visitPackageMain({\n        packageFileUrl,\n        packageName,\n        packageJsonObject,\n        packageInfo,\n      })\n    }\n  }\n\n  const visitPackageMain = async ({\n    packageFileUrl,\n    packageName,\n    packageJsonObject,\n    packageInfo: {\n      importerIsRoot,\n      importerRelativeUrl,\n      packageDirectoryUrl,\n      packageDirectoryUrlExpected,\n    },\n  }) => {\n    const mainFileUrl = await resolvePackageMain({\n      warn,\n      packageConditions,\n      packageFileUrl,\n      packageJsonObject,\n    })\n\n    // it's possible to have no main\n    // like { main: \"\" } in package.json\n    // or a main that does not lead to an actual file\n    if (mainFileUrl === null) {\n      return\n    }\n\n    const mainFileRelativeUrl = urlToRelativeUrl(mainFileUrl, projectDirectoryUrl)\n    const from = packageName\n    const to = `./${mainFileRelativeUrl}`\n\n    if (importerIsRoot) {\n      addMapping({ from, to })\n    } else {\n      addMapping({\n        scope: `./${importerRelativeUrl}`,\n        from,\n        to,\n      })\n    }\n    if (packageDirectoryUrl !== packageDirectoryUrlExpected) {\n      addMapping({\n        scope: `./${importerRelativeUrl}`,\n        from,\n        to,\n      })\n    }\n  }\n\n  const visitDependencies = async ({\n    packageFileUrl,\n    packageJsonObject,\n    includeDevDependencies,\n  }) => {\n    const dependencyMap = packageDependenciesFromPackageObject(packageJsonObject, {\n      includeDevDependencies,\n    })\n\n    await Promise.all(\n      Object.keys(dependencyMap).map(async (dependencyName) => {\n        const dependencyInfo = dependencyMap[dependencyName]\n        await visitDependency({\n          packageFileUrl,\n          packageJsonObject,\n          dependencyName,\n          dependencyInfo,\n        })\n      }),\n    )\n  }\n\n  const visitDependency = async ({\n    packageFileUrl,\n    packageJsonObject,\n    dependencyName,\n    dependencyInfo,\n  }) => {\n    const dependencyData = await findDependency({\n      packageFileUrl,\n      dependencyName,\n    })\n    if (!dependencyData) {\n      const cannotFindPackageWarning = createCannotFindPackageWarning({\n        dependencyName,\n        dependencyInfo,\n        packageFileUrl,\n      })\n      if (dependencyInfo.isOptional) {\n        logger.debug(cannotFindPackageWarning.message)\n      } else {\n        warn(cannotFindPackageWarning)\n      }\n\n      return\n    }\n    if (dependencyData.syntaxError) {\n      return\n    }\n\n    const {\n      packageFileUrl: dependencyPackageFileUrl,\n      packageJsonObject: dependencyPackageJsonObject,\n    } = dependencyData\n\n    if (packageIsSeen(dependencyPackageFileUrl, packageFileUrl)) {\n      return\n    }\n    markPackageAsSeen(dependencyPackageFileUrl, packageFileUrl)\n    await visit({\n      packageFileUrl: dependencyPackageFileUrl,\n      packageName: dependencyName,\n      packageJsonObject: dependencyPackageJsonObject,\n      importerPackageFileUrl: packageFileUrl,\n      importerPackageJsonObject: packageJsonObject,\n    })\n  }\n\n  const computePackageInfo = ({ packageFileUrl, packageName, importerPackageFileUrl }) => {\n    const importerIsRoot = importerPackageFileUrl === projectPackageFileUrl\n\n    const importerPackageDirectoryUrl = resolveUrl(\"./\", importerPackageFileUrl)\n\n    const importerRelativeUrl = urlToRelativeUrl(importerPackageDirectoryUrl, projectDirectoryUrl)\n\n    const packageIsRoot = packageFileUrl === projectPackageFileUrl\n\n    const packageDirectoryUrl = resolveUrl(\"./\", packageFileUrl)\n\n    const packageDirectoryUrlExpected = `${importerPackageDirectoryUrl}node_modules/${packageName}/`\n\n    const packageDirectoryRelativeUrl = urlToRelativeUrl(packageDirectoryUrl, projectDirectoryUrl)\n\n    return {\n      importerIsRoot,\n      importerRelativeUrl,\n      packageIsRoot,\n      packageDirectoryUrl,\n      packageDirectoryUrlExpected,\n      packageDirectoryRelativeUrl,\n    }\n  }\n\n  const dependenciesCache = {}\n  const findDependency = ({ packageFileUrl, dependencyName }) => {\n    if (packageFileUrl in dependenciesCache === false) {\n      dependenciesCache[packageFileUrl] = {}\n    }\n    if (dependencyName in dependenciesCache[packageFileUrl]) {\n      return dependenciesCache[packageFileUrl][dependencyName]\n    }\n    const dependencyPromise = findNodeModulePackage({\n      projectDirectoryUrl,\n      packageFileUrl,\n      dependencyName,\n    })\n    dependenciesCache[packageFileUrl][dependencyName] = dependencyPromise\n    return dependencyPromise\n  }\n\n  const projectPackageJsonObject = await readFile(projectPackageFileUrl, { as: \"json\" })\n  const importerPackageFileUrl = projectPackageFileUrl\n  markPackageAsSeen(projectPackageFileUrl, importerPackageFileUrl)\n\n  const packageName = projectPackageJsonObject.name\n  if (typeof packageName !== \"string\") {\n    warn(\n      createPackageNameMustBeAStringWarning({\n        packageName,\n        packageFileUrl: projectPackageFileUrl,\n      }),\n    )\n    return {}\n  }\n\n  await visit({\n    packageFileUrl: projectPackageFileUrl,\n    packageName: projectPackageJsonObject.name,\n    packageJsonObject: projectPackageJsonObject,\n    importerPackageFileUrl,\n    importerPackageJsonObject: null,\n    includeDevDependencies: projectPackageDevDependenciesIncluded,\n  })\n\n  return optimizeImportMap({ imports, scopes })\n}\n\nconst packageDependenciesFromPackageObject = (packageObject, { includeDevDependencies }) => {\n  const packageDependencies = {}\n\n  const { dependencies = {} } = packageObject\n  // https://npm.github.io/using-pkgs-docs/package-json/types/optionaldependencies.html\n  const { optionalDependencies = {} } = packageObject\n  Object.keys(dependencies).forEach((dependencyName) => {\n    packageDependencies[dependencyName] = {\n      type: \"dependency\",\n      isOptional: dependencyName in optionalDependencies,\n      versionPattern: dependencies[dependencyName],\n    }\n  })\n\n  const { peerDependencies = {} } = packageObject\n  const { peerDependenciesMeta = {} } = packageObject\n  Object.keys(peerDependencies).forEach((dependencyName) => {\n    packageDependencies[dependencyName] = {\n      type: \"peerDependency\",\n      versionPattern: peerDependencies[dependencyName],\n      isOptional:\n        dependencyName in peerDependenciesMeta && peerDependenciesMeta[dependencyName].optional,\n    }\n  })\n\n  if (includeDevDependencies) {\n    const { devDependencies = {} } = packageObject\n    Object.keys(devDependencies).forEach((dependencyName) => {\n      if (!packageDependencies.hasOwnProperty(dependencyName)) {\n        packageDependencies[dependencyName] = {\n          type: \"devDependency\",\n          versionPattern: devDependencies[dependencyName],\n        }\n      }\n    })\n  }\n\n  return packageDependencies\n}\n\nconst moveMappingValue = (address, from, to) => {\n  const url = resolveUrl(address, from)\n  const relativeUrl = urlToRelativeUrl(url, to)\n  if (relativeUrl.startsWith(\"../\")) {\n    return relativeUrl\n  }\n  if (relativeUrl.startsWith(\"./\")) {\n    return relativeUrl\n  }\n  if (/^[a-zA-Z]{2,}:/.test(relativeUrl)) {\n    // has sheme\n    return relativeUrl\n  }\n  return `./${relativeUrl}`\n}\n\nconst createExportsWildcardIgnoredWarning = ({ key, value, packageFileUrl }) => {\n  return {\n    code: \"EXPORTS_WILDCARD\",\n    message: `Ignoring export using \"*\" because it is not supported by importmap.\n--- key ---\n${key}\n--- value ---\n${value}\n--- package.json path ---\n${urlToFileSystemPath(packageFileUrl)}\n--- see also ---\nhttps://github.com/WICG/import-maps/issues/232`,\n  }\n}\n\nconst createPackageNameMustBeAStringWarning = ({ packageName, packageFileUrl }) => {\n  return {\n    code: \"PACKAGE_NAME_MUST_BE_A_STRING\",\n    message: `package name field must be a string\n--- package name field ---\n${packageName}\n--- package.json file path ---\n${packageFileUrl}`,\n  }\n}\n\nconst createCannotFindPackageWarning = ({ dependencyName, dependencyInfo, packageFileUrl }) => {\n  const dependencyIsOptional = dependencyInfo.isOptional\n  const dependencyType = dependencyInfo.type\n  const dependencyVersionPattern = dependencyInfo.versionPattern\n  return {\n    code: \"CANNOT_FIND_PACKAGE\",\n    message: createDetailedMessage(\n      dependencyIsOptional\n        ? `cannot find an optional ${dependencyType}.`\n        : `cannot find a ${dependencyType}.`,\n      {\n        [dependencyType]: `${dependencyName}@${dependencyVersionPattern}`,\n        \"required by\": urlToFileSystemPath(packageFileUrl),\n      },\n    ),\n  }\n}\n",
    "import { composeTwoImportMaps, sortImportMap } from \"@jsenv/import-map\"\nimport { createLogger } from \"@jsenv/logger\"\nimport { getImportMapFromJsFiles } from \"./internal/from-js/getImportMapFromJsFiles.js\"\nimport { getImportMapFromPackageFiles } from \"./internal/from-package/getImportMapFromPackageFiles.js\"\n\nexport const getImportMapFromProjectFiles = async ({\n  logLevel,\n  projectDirectoryUrl,\n  runtime = \"browser\",\n  moduleFormat = \"esm\",\n  dev = false,\n  jsFiles = true,\n  importMapInput = {},\n\n  projectPackageDevDependenciesIncluded = dev,\n  treeshakeMappings = !dev,\n\n  packageConditions = [],\n  packageConditionDevelopment = dev,\n  packageConditionFromModuleFormat = packageConditionsFromModuleFormat[moduleFormat],\n  packageConditionFromRuntime = packageConditionsFromRuntime[runtime],\n\n  magicExtensions = [\".js\", \".jsx\", \".ts\", \".tsx\", \".node\", \".json\"],\n  onWarn = (warning, warn) => {\n    warn(warning)\n  },\n  ...rest\n}) => {\n  packageConditions = [\n    ...(packageConditionDevelopment ? [\"development\"] : [\"production\"]),\n    ...(packageConditionFromModuleFormat ? [packageConditionFromModuleFormat] : []),\n    ...(packageConditionFromRuntime ? [packageConditionFromRuntime] : []),\n    ...packageConditions,\n  ]\n\n  const logger = createLogger({ logLevel })\n  const warn = (warning) => {\n    onWarn(warning, () => {\n      logger.warn(`\\n${warning.message}\\n`)\n    })\n  }\n\n  // At this point, importmap is relative to the project directory url\n  let importMapFromPackageFiles = await getImportMapFromPackageFiles({\n    logger,\n    warn,\n    projectDirectoryUrl,\n    packageConditions,\n    projectPackageDevDependenciesIncluded,\n    ...rest,\n  })\n  importMapFromPackageFiles = sortImportMap(\n    composeTwoImportMaps(importMapInput, importMapFromPackageFiles),\n  )\n  if (!jsFiles) {\n    return importMapFromPackageFiles\n  }\n\n  let importMapFromJsFiles = await getImportMapFromJsFiles({\n    logger,\n    warn,\n    projectDirectoryUrl,\n    importMap: importMapFromPackageFiles,\n    magicExtensions,\n    runtime,\n    treeshakeMappings,\n  })\n  importMapFromJsFiles = sortImportMap(importMapFromJsFiles)\n  return importMapFromJsFiles\n}\n\nconst packageConditionsFromRuntime = {\n  browser: \"browser\",\n  node: \"node\",\n}\n\nconst packageConditionsFromModuleFormat = {\n  esm: \"import\",\n  cjs: \"require\",\n}\n",
    "import { assertAndNormalizeDirectoryUrl, resolveUrl, readFile } from \"@jsenv/util\"\nimport { moveImportMap, sortImportMap } from \"@jsenv/import-map\"\n\nexport const getImportMapFromFile = async ({ projectDirectoryUrl, importMapFileRelativeUrl }) => {\n  projectDirectoryUrl = assertAndNormalizeDirectoryUrl(projectDirectoryUrl)\n\n  const importmapFileUrl = resolveUrl(importMapFileRelativeUrl, projectDirectoryUrl)\n  const importmap = await readFile(importmapFileUrl, { as: \"json\" })\n\n  // ensure the importmap is now relative to the project directory url\n  // we do that because writeImportMapFile expect all importmap\n  // to be relative to the projectDirectoryUrl\n  const importmapFakeRootUrl = resolveUrl(\"whatever.importmap\", projectDirectoryUrl)\n  const importmapRelativeToProject = moveImportMap(\n    importmap,\n    importmapFileUrl,\n    importmapFakeRootUrl,\n  )\n\n  return sortImportMap(importmapRelativeToProject)\n}\n",
    "export const importMapToVsCodeConfigPaths = ({ imports = {} }) => {\n  const paths = {}\n\n  Object.keys(imports).forEach((importKey) => {\n    const importValue = imports[importKey]\n\n    let key\n    if (importKey.endsWith(\"/\")) {\n      key = `${importKey}*`\n    } else {\n      key = importKey\n    }\n\n    const importValueArray = typeof importValue === \"string\" ? [importValue] : importValue\n    const candidatesForPath = importValueArray.map((importValue) => {\n      if (importValue.endsWith(\"/\")) {\n        return `${importValue}*`\n      }\n      return importValue\n    })\n\n    if (key in paths) {\n      paths[key] = [...paths[key], ...candidatesForPath]\n    } else {\n      paths[key] = candidatesForPath\n    }\n  })\n\n  return paths\n}\n",
    "import {\n  resolveUrl,\n  urlToFileSystemPath,\n  assertAndNormalizeDirectoryUrl,\n  writeFile,\n  readFile,\n} from \"@jsenv/util\"\nimport { composeTwoImportMaps } from \"@jsenv/import-map\"\nimport { importMapToVsCodeConfigPaths } from \"./internal/importMapToVsCodeConfigPaths.js\"\n\nexport const writeImportMapFile = async (\n  importMapInputs = [],\n  {\n    projectDirectoryUrl,\n\n    importMapFile = true, // in case someone wants the importmap but not write it on filesystem\n    importMapFileRelativeUrl = \"./import-map.importmap\",\n    importMapFileLog = true,\n\n    jsConfigFile = false, // not yet documented, makes vscode aware of the import remapping\n    jsConfigFileLog = true,\n    jsConfigLeadingSlash = false,\n  },\n) => {\n  projectDirectoryUrl = assertAndNormalizeDirectoryUrl(projectDirectoryUrl)\n\n  if (importMapInputs.length === 0) {\n    console.warn(`importMapInputs is empty, the generated importmap will be empty`)\n  }\n\n  const importMaps = await Promise.all(importMapInputs)\n\n  const importMap = importMaps.reduce((previous, current) => {\n    return composeTwoImportMaps(previous, current)\n  }, {})\n\n  if (importMapFile) {\n    const importMapFileUrl = resolveUrl(importMapFileRelativeUrl, projectDirectoryUrl)\n    await writeFile(importMapFileUrl, JSON.stringify(importMap, null, \"  \"))\n    if (importMapFileLog) {\n      console.info(`-> ${urlToFileSystemPath(importMapFileUrl)}`)\n    }\n  }\n  if (jsConfigFile) {\n    const jsConfigFileUrl = resolveUrl(\"./jsconfig.json\", projectDirectoryUrl)\n    const jsConfigCurrent = (await readCurrentJsConfig(jsConfigFileUrl)) || { compilerOptions: {} }\n    const jsConfig = {\n      ...jsConfigDefault,\n      ...jsConfigCurrent,\n      compilerOptions: {\n        ...jsConfigDefault.compilerOptions,\n        ...jsConfigCurrent.compilerOptions,\n        paths: {\n          ...(jsConfigLeadingSlash ? { \"/*\": [\"./*\"] } : {}),\n          ...importMapToVsCodeConfigPaths(importMap),\n        },\n      },\n    }\n    await writeFile(jsConfigFileUrl, JSON.stringify(jsConfig, null, \"  \"))\n    if (jsConfigFileLog) {\n      console.info(`-> ${urlToFileSystemPath(jsConfigFileUrl)}`)\n    }\n  }\n\n  return importMap\n}\n\nconst readCurrentJsConfig = async (jsConfigFileUrl) => {\n  try {\n    const currentJSConfig = await readFile(jsConfigFileUrl, { as: \"json\" })\n    return currentJSConfig\n  } catch (e) {\n    return null\n  }\n}\n\nconst jsConfigDefault = {\n  compilerOptions: {\n    baseUrl: \".\",\n    paths: {},\n  },\n}\n"
  ],
  "names": [
    "memoizeAsyncFunctionByUrl",
    "fn",
    "cache",
    "memoizeAsyncFunction",
    "getMemoryEntryFromArguments",
    "url",
    "get",
    "set",
    "promise",
    "delete",
    "memoizeAsyncFunctionBySpecifierAndImporter",
    "importerCache",
    "specifier",
    "importer",
    "specifierCacheForImporter",
    "memoized",
    "args",
    "memoryEntry",
    "promiseFromMemory",
    "resolve",
    "reject",
    "createControllablePromise",
    "value",
    "error",
    "e",
    "isInMemory",
    "Boolean",
    "Promise",
    "res",
    "rej",
    "filenameContainsBackSlashes",
    "__filename",
    "indexOf",
    "replace",
    "require",
    "createRequire",
    "parser",
    "traverse",
    "parseSpecifiersFromFile",
    "fileUrl",
    "fileContent",
    "sourceType",
    "allowImportExportEverywhere",
    "allowAwaitOutsideFunction",
    "ranges",
    "jsx",
    "typescript",
    "endsWith",
    "flow",
    "options",
    "undefined",
    "readFile",
    "as",
    "ast",
    "parse",
    "sourceFilename",
    "urlToFileSystemPath",
    "plugins",
    "specifiers",
    "addSpecifier",
    "path",
    "type",
    "node",
    "line",
    "loc",
    "start",
    "column",
    "default",
    "CallExpression",
    "callee",
    "arguments",
    "ExportAllDeclaration",
    "ExportNamedDeclaration",
    "source",
    "ImportDeclaration",
    "showSource",
    "message",
    "showSourceLocation",
    "red",
    "grey",
    "ansiResetSequence",
    "numberOfSurroundingLinesToShow",
    "lineMaxLength",
    "color",
    "markColor",
    "asideColor",
    "colorMark",
    "string",
    "colorAside",
    "mark",
    "aside",
    "lines",
    "split",
    "lineRange",
    "end",
    "moveLineRangeUp",
    "moveLineRangeDown",
    "lineRangeWithinLines",
    "linesToShow",
    "slice",
    "endLineNumber",
    "lineNumberMaxWidth",
    "String",
    "length",
    "columnRange",
    "Math",
    "floor",
    "ceil",
    "map",
    "lineSource",
    "index",
    "lineNumber",
    "isMainLine",
    "lineSourceTruncated",
    "applyColumnRange",
    "lineNumberWidth",
    "lineNumberRightSpacing",
    "repeat",
    "asideSource",
    "lineFormatted",
    "lineSourceUntilColumn",
    "spacing",
    "stringToSpaces",
    "mainLineFormatted",
    "join",
    "TypeError",
    "Error",
    "prefix",
    "suffix",
    "lastIndex",
    "startTruncated",
    "endTruncated",
    "from",
    "to",
    "result",
    "number",
    "resolveFile",
    "magicExtensions",
    "fileStat",
    "readFileSystemNodeStat",
    "nullIfNotFound",
    "isFile",
    "isDirectory",
    "indexFileSuffix",
    "indexFileUrl",
    "extensionLeadingToAFile",
    "findExtensionLeadingToFile",
    "extension",
    "urlToExtension",
    "urlDirectoryUrl",
    "resolveUrl",
    "urlFilename",
    "urlToFilename",
    "extensionLeadingToFile",
    "firstOperationMatching",
    "array",
    "extensionCandidate",
    "urlCandidate",
    "stats",
    "predicate",
    "BARE_SPECIFIER_ERROR",
    "getImportMapFromJsFiles",
    "logger",
    "warn",
    "projectDirectoryUrl",
    "importMap",
    "runtime",
    "treeshakeMappings",
    "projectPackageFileUrl",
    "imports",
    "scopes",
    "addMapping",
    "scope",
    "topLevelMappingsUsed",
    "scopedMappingsUsed",
    "markMappingAsUsed",
    "push",
    "importMapNormalized",
    "normalizeImportMap",
    "trackAndResolveImport",
    "resolveImport",
    "defaultExtension",
    "onImportMapping",
    "urlToRelativeUrl",
    "startsWith",
    "createBareSpecifierError",
    "resolveFileSystemUrl",
    "importedBy",
    "isSpecifierForNodeCoreModule",
    "gotBareSpecifierError",
    "fileUrlOnFileSystem",
    "magicExtensionWithImporterExtension",
    "createFileNotFoundWarning",
    "needsAutoMapping",
    "packageDirectoryUrl",
    "packageDirectoryUrlFromUrl",
    "packageFileUrl",
    "autoMapping",
    "closestPackageObject",
    "containsWildcard",
    "Object",
    "keys",
    "exports",
    "some",
    "key",
    "includes",
    "autoMappingWarning",
    "formatAutoMappingSpecifierWarning",
    "closestPackageDirectoryUrl",
    "debug",
    "visitFile",
    "dependencies",
    "all",
    "specifierInfo",
    "dependencyUrlOnFileSystem",
    "dependenciesToVisit",
    "filter",
    "dependency",
    "projectPackageObject",
    "projectMainFileUrlOnFileSystem",
    "name",
    "importsUsed",
    "forEach",
    "scopesUsed",
    "mappingsUsed",
    "scopedMappings",
    "sortImportMap",
    "composeTwoImportMaps",
    "relativeUrl",
    "lastNodeModulesDirectoryStartIndex",
    "lastIndexOf",
    "lastNodeModulesDirectoryEndIndex",
    "beforeNodeModulesLastDirectory",
    "afterLastNodeModulesDirectory",
    "remainingDirectories",
    "importerExtension",
    "magicExtensionsWithoutImporterExtension",
    "ext",
    "code",
    "createDetailedMessage",
    "decideAutoMappingSuggestion",
    "importmap",
    "packageImportmapFileUrl",
    "mappingToImportmapString",
    "mappingToExportsFieldString",
    "JSON",
    "stringify",
    "scopeUrl",
    "toUrl",
    "optimizeImportMap",
    "scopesOptimized",
    "scopeMappings",
    "scopeMappingsOptimized",
    "mappingKey",
    "topLevelMappingValue",
    "mappingValue",
    "resolvePackageMain",
    "packageConditions",
    "packageJsonObject",
    "resolveMainFile",
    "packageMainFieldName",
    "packageMainFieldValue",
    "module",
    "browser",
    "main",
    "mainFileRelativeUrl",
    "mainFileUrlFirstCandidate",
    "createPackageMainFileMustBeRelativeWarning",
    "mainFileUrl",
    "createPackageMainFileNotFoundWarning",
    "importedIn",
    "visitPackageImportMap",
    "packageImportmap",
    "importmapFileUrl",
    "moveImportMap",
    "createPackageImportMapNotFoundWarning",
    "createPackageImportMapUnexpectedWarning",
    "specifierIsRelative",
    "test",
    "visitPackageImports",
    "packageImports",
    "importsSubpaths",
    "onImportsSubpath",
    "trace",
    "createSubpathValueMustBeRelativeWarning",
    "valueTrace",
    "keyNormalized",
    "valueNormalized",
    "conditions",
    "visitSubpathValue",
    "subpathValue",
    "subpathValueTrace",
    "handleString",
    "handleObject",
    "handleRemaining",
    "firstBareKey",
    "reverse",
    "find",
    "followConditionBranch",
    "conditionTrace",
    "bareKeys",
    "conditionalKeys",
    "availableKey",
    "createSubpathKeysAreMixedWarning",
    "leadsToSomething",
    "keyCandidate",
    "valueCandidate",
    "createSubpathIsUnexpectedWarning",
    "visitPackageExports",
    "packageExports",
    "packageName",
    "exportsSubpaths",
    "packageDirectoryRelativeUrl",
    "onExportsSubpath",
    "specifierToSource",
    "addressToDestination",
    "handleFalse",
    "firstRelativeKey",
    "relativeKeys",
    "address",
    "applyPackageManualOverride",
    "packageObject",
    "packagesManualOverrides",
    "version",
    "overrideKey",
    "overrideKeyCandidate",
    "composeObject",
    "leftObject",
    "rightObject",
    "composedObject",
    "rightValue",
    "leftValue",
    "PACKAGE_NOT_FOUND",
    "PACKAGE_WITH_SYNTAX_ERROR",
    "readPackageFile",
    "console",
    "formatPackageSyntaxErrorLog",
    "syntaxError",
    "createFindNodeModulePackage",
    "readPackageFileMemoized",
    "dependencyName",
    "nodeModuleCandidates",
    "getNodeModuleCandidates",
    "nodeModuleCandidate",
    "packageFileUrlCandidate",
    "packageObjectCandidate",
    "fileDirectoryUrl",
    "fileDirectoryRelativeUrl",
    "candidates",
    "relativeNodeModuleDirectoryArray",
    "shift",
    "i",
    "getImportMapFromPackageFiles",
    "projectPackageDevDependenciesIncluded",
    "process",
    "env",
    "NODE_ENV",
    "packageIncludedPredicate",
    "assertAndNormalizeDirectoryUrl",
    "findNodeModulePackage",
    "seen",
    "markPackageAsSeen",
    "importerPackageFileUrl",
    "packageIsSeen",
    "visit",
    "importerPackageJsonObject",
    "includeDevDependencies",
    "visitDependencies",
    "visitPackage",
    "packageInfo",
    "computePackageInfo",
    "importerIsRoot",
    "importerRelativeUrl",
    "packageIsRoot",
    "addImportMapForPackage",
    "toMoved",
    "moveMappingValue",
    "scopeMoved",
    "addMappingsForPackageAndImporter",
    "mappings",
    "importsFromPackageField",
    "mappingsFromPackageExports",
    "fromWithouTrailingStar",
    "toWithoutTrailingStar",
    "createExportsWildcardIgnoredWarning",
    "visitPackageMain",
    "packageDirectoryUrlExpected",
    "dependencyMap",
    "packageDependenciesFromPackageObject",
    "dependencyInfo",
    "visitDependency",
    "dependencyData",
    "findDependency",
    "cannotFindPackageWarning",
    "createCannotFindPackageWarning",
    "isOptional",
    "dependencyPackageFileUrl",
    "dependencyPackageJsonObject",
    "importerPackageDirectoryUrl",
    "dependenciesCache",
    "dependencyPromise",
    "projectPackageJsonObject",
    "createPackageNameMustBeAStringWarning",
    "packageDependencies",
    "optionalDependencies",
    "versionPattern",
    "peerDependencies",
    "peerDependenciesMeta",
    "optional",
    "devDependencies",
    "hasOwnProperty",
    "dependencyIsOptional",
    "dependencyType",
    "dependencyVersionPattern",
    "getImportMapFromProjectFiles",
    "logLevel",
    "moduleFormat",
    "dev",
    "jsFiles",
    "importMapInput",
    "packageConditionDevelopment",
    "packageConditionFromModuleFormat",
    "packageConditionsFromModuleFormat",
    "packageConditionFromRuntime",
    "packageConditionsFromRuntime",
    "onWarn",
    "warning",
    "rest",
    "createLogger",
    "importMapFromPackageFiles",
    "importMapFromJsFiles",
    "esm",
    "cjs",
    "getImportMapFromFile",
    "importMapFileRelativeUrl",
    "importmapFakeRootUrl",
    "importmapRelativeToProject",
    "importMapToVsCodeConfigPaths",
    "paths",
    "importKey",
    "importValue",
    "importValueArray",
    "candidatesForPath",
    "writeImportMapFile",
    "importMapInputs",
    "importMapFile",
    "importMapFileLog",
    "jsConfigFile",
    "jsConfigFileLog",
    "jsConfigLeadingSlash",
    "importMaps",
    "reduce",
    "previous",
    "current",
    "importMapFileUrl",
    "writeFile",
    "info",
    "jsConfigFileUrl",
    "jsConfigCurrent",
    "readCurrentJsConfig",
    "compilerOptions",
    "jsConfig",
    "jsConfigDefault",
    "currentJSConfig",
    "baseUrl"
  ],
  "mappings": "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"
}