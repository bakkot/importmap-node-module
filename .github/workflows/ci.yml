name: ci

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  ci:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        node: [13.12.0]
    runs-on: ${{ matrix.os }}
    name: node 12 on ${{ matrix.os }}
    env:
      CI: true
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      - name: npm install
        run: |
          npm config set //npm.pkg.github.com/:_authToken ${{ secrets.GITHUB_TOKEN }}
          npm install
      - name: code quality
        run: npm run eslint-check
      - name: code format
        run: npm run prettier-check
      - name: testing
        run: npm run test-with-coverage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: upload coverage
        run: npm run upload-coverage
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  release:
    needs: [ci]
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: publish package
        if: github.event_name == 'push'
        run: node --no-warnings ./.github/release/publish-package.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: ensure github release
        if: github.event_name == 'push'
        run: node --no-warnings ./.github/release/ensure-github-release-for-package.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
